//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-01/24/2006 06:08 PM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.06.30 at 06:36:47 AM CEST 
//


package de.thorstenberger.examServer.dao.xml.jaxb.impl;

public class TaskHandlingTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Tasklet;
    protected boolean has_IdCount;
    protected long _IdCount;
    public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getTasklet() {
        if (_Tasklet == null) {
            _Tasklet = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Tasklet;
    }

    public java.util.List getTasklet() {
        return _getTasklet();
    }

    public boolean isSetTasklet() {
        return ((_Tasklet == null)?false:_Tasklet.isModified());
    }

    public void unsetTasklet() {
        if (_Tasklet!= null) {
            _Tasklet.clear();
            _Tasklet.setModified(false);
        }
    }

    public long getIdCount() {
        return _IdCount;
    }

    public void setIdCount(long value) {
        _IdCount = value;
        has_IdCount = true;
    }

    public boolean isSetIdCount() {
        return has_IdCount;
    }

    public void unsetIdCount() {
        has_IdCount = false;
    }

    public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
        return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Tasklet == null)? 0 :_Tasklet.size());
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            context.startElement("http://examServer.thorstenberger.de/taskHandling", "tasklet");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx_0 ++)), "Tasklet");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx_1 ++)), "Tasklet");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx1 ++)), "Tasklet");
            context.endElement();
        }
    }

    public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Tasklet == null)? 0 :_Tasklet.size());
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        context.startAttribute("", "idCount");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _IdCount)), "IdCount");
        } catch (java.lang.Exception e) {
            de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Tasklet == null)? 0 :_Tasklet.size());
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003s"
+"r\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.g"
+"rammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun"
+"/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\bq\u0000~\u0000\fpsr\u0000 com.sun.m"
+"sv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~"
+"\u0000\u000exq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u00002com.sun.msv.grammar.Expression$AnyStringEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000b\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar"
+".AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnames"
+"paceURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000Fde.thorstenberger.examServer.dao.xml.ja"
+"xb.TaskHandlingType.TaskletTypet\u0000+http://java.sun.com/jaxb/x"
+"jc/dummy-elementssq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0015q\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.grammar"
+".DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000"
+"\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003pps"
+"r\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun."
+"msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv"
+".datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatyp"
+"e.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNa"
+"meq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceP"
+"rocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tl"
+"ocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000"
+")http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0007task"
+"lett\u00000http://examServer.thorstenberger.de/taskHandlingq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u0015ppsq\u0000~\u0000&ppsr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000"
+"\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq"
+"\u0000~\u0000+q\u0000~\u00000t\u0000\u0004longq\u0000~\u00004sr\u0000*com.sun.msv.datatype.xsd.MaxInclusi"
+"veFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.da"
+"tatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*co"
+"m.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFace"
+"tFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000CL\u0000\fconcreteTypet\u0000"
+"\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000 xq\u0000"
+"~\u0000-ppq\u0000~\u00004\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gppq\u0000~\u00004\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Integer"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u00000t\u0000\u0007integerq\u0000~\u00004sr\u0000,com.sun.msv.dat"
+"atype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun."
+"msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002"
+"\u0000\u0000xq\u0000~\u0000Jppq\u0000~\u00004\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000~\u00000t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0000Vt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q"
+"\u0000~\u0000Pt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010"
+"java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Pt\u0000\fmaxInclusivesq\u0000"
+"~\u0000Z\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u00006sq\u0000~\u00007q\u0000~\u0000Eq\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0007idCountt\u0000\u0000sr\u0000\"com.s"
+"un.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/s"
+"un/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.g"
+"rammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstream"
+"VersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000"
+"\u0007\u0001pq\u0000~\u0000\u0007q\u0000~\u0000\nq\u0000~\u0000\u0005q\u0000~\u0000$q\u0000~\u0000\u0011q\u0000~\u0000\u0014q\u0000~\u0000\u0013x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class TaskletTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
    {

        protected java.lang.String _Status;
        protected com.sun.xml.bind.util.ListImpl _CorrectorHistory;
        protected com.sun.xml.bind.util.ListImpl _Flag;
        protected com.sun.xml.bind.util.ListImpl _CorrectorAnnotation;
        protected boolean has_TaskDefId;
        protected long _TaskDefId;
        protected com.sun.xml.bind.util.ListImpl _ManualCorrection;
        protected de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType _AutoCorrection;
        protected java.lang.String _AssignedCorrector;
        protected java.lang.String _Login;
        protected boolean has_Id;
        protected long _Id;
        protected com.sun.xml.bind.util.ListImpl _StudentAnnotation;
        public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.class);
        }

        public java.lang.String getStatus() {
            return _Status;
        }

        public void setStatus(java.lang.String value) {
            _Status = value;
        }

        public boolean isSetStatus() {
            return (_Status!= null);
        }

        public void unsetStatus() {
            _Status = null;
        }

        protected com.sun.xml.bind.util.ListImpl _getCorrectorHistory() {
            if (_CorrectorHistory == null) {
                _CorrectorHistory = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _CorrectorHistory;
        }

        public java.util.List getCorrectorHistory() {
            return _getCorrectorHistory();
        }

        public boolean isSetCorrectorHistory() {
            return ((_CorrectorHistory == null)?false:_CorrectorHistory.isModified());
        }

        public void unsetCorrectorHistory() {
            if (_CorrectorHistory!= null) {
                _CorrectorHistory.clear();
                _CorrectorHistory.setModified(false);
            }
        }

        protected com.sun.xml.bind.util.ListImpl _getFlag() {
            if (_Flag == null) {
                _Flag = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Flag;
        }

        public java.util.List getFlag() {
            return _getFlag();
        }

        public boolean isSetFlag() {
            return ((_Flag == null)?false:_Flag.isModified());
        }

        public void unsetFlag() {
            if (_Flag!= null) {
                _Flag.clear();
                _Flag.setModified(false);
            }
        }

        protected com.sun.xml.bind.util.ListImpl _getCorrectorAnnotation() {
            if (_CorrectorAnnotation == null) {
                _CorrectorAnnotation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _CorrectorAnnotation;
        }

        public java.util.List getCorrectorAnnotation() {
            return _getCorrectorAnnotation();
        }

        public boolean isSetCorrectorAnnotation() {
            return ((_CorrectorAnnotation == null)?false:_CorrectorAnnotation.isModified());
        }

        public void unsetCorrectorAnnotation() {
            if (_CorrectorAnnotation!= null) {
                _CorrectorAnnotation.clear();
                _CorrectorAnnotation.setModified(false);
            }
        }

        public long getTaskDefId() {
            return _TaskDefId;
        }

        public void setTaskDefId(long value) {
            _TaskDefId = value;
            has_TaskDefId = true;
        }

        public boolean isSetTaskDefId() {
            return has_TaskDefId;
        }

        public void unsetTaskDefId() {
            has_TaskDefId = false;
        }

        protected com.sun.xml.bind.util.ListImpl _getManualCorrection() {
            if (_ManualCorrection == null) {
                _ManualCorrection = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _ManualCorrection;
        }

        public java.util.List getManualCorrection() {
            return _getManualCorrection();
        }

        public boolean isSetManualCorrection() {
            return ((_ManualCorrection == null)?false:_ManualCorrection.isModified());
        }

        public void unsetManualCorrection() {
            if (_ManualCorrection!= null) {
                _ManualCorrection.clear();
                _ManualCorrection.setModified(false);
            }
        }

        public de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType getAutoCorrection() {
            return _AutoCorrection;
        }

        public void setAutoCorrection(de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType value) {
            _AutoCorrection = value;
        }

        public boolean isSetAutoCorrection() {
            return (_AutoCorrection!= null);
        }

        public void unsetAutoCorrection() {
            _AutoCorrection = null;
        }

        public java.lang.String getAssignedCorrector() {
            return _AssignedCorrector;
        }

        public void setAssignedCorrector(java.lang.String value) {
            _AssignedCorrector = value;
        }

        public boolean isSetAssignedCorrector() {
            return (_AssignedCorrector!= null);
        }

        public void unsetAssignedCorrector() {
            _AssignedCorrector = null;
        }

        public java.lang.String getLogin() {
            return _Login;
        }

        public void setLogin(java.lang.String value) {
            _Login = value;
        }

        public boolean isSetLogin() {
            return (_Login!= null);
        }

        public void unsetLogin() {
            _Login = null;
        }

        public long getId() {
            return _Id;
        }

        public void setId(long value) {
            _Id = value;
            has_Id = true;
        }

        public boolean isSetId() {
            return has_Id;
        }

        public void unsetId() {
            has_Id = false;
        }

        protected com.sun.xml.bind.util.ListImpl _getStudentAnnotation() {
            if (_StudentAnnotation == null) {
                _StudentAnnotation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _StudentAnnotation;
        }

        public java.util.List getStudentAnnotation() {
            return _getStudentAnnotation();
        }

        public boolean isSetStudentAnnotation() {
            return ((_StudentAnnotation == null)?false:_StudentAnnotation.isModified());
        }

        public void unsetStudentAnnotation() {
            if (_StudentAnnotation!= null) {
                _StudentAnnotation.clear();
                _StudentAnnotation.setModified(false);
            }
        }

        public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = ((_CorrectorHistory == null)? 0 :_CorrectorHistory.size());
            int idx3 = 0;
            final int len3 = ((_Flag == null)? 0 :_Flag.size());
            int idx4 = 0;
            final int len4 = ((_CorrectorAnnotation == null)? 0 :_CorrectorAnnotation.size());
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            int idx6 = 0;
            final int len6 = ((_ManualCorrection == null)? 0 :_ManualCorrection.size());
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = ((_StudentAnnotation == null)? 0 :_StudentAnnotation.size());
            while (idx2 != len2) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "correctorHistory");
                int idx_0 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx_0 ++)), "CorrectorHistory");
                context.endNamespaceDecls();
                int idx_1 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx_1 ++)), "CorrectorHistory");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx2 ++)), "CorrectorHistory");
                context.endElement();
            }
            while (idx3 != len3) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "flag");
                int idx_2 = idx3;
                try {
                    idx_2 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endNamespaceDecls();
                int idx_3 = idx3;
                try {
                    idx_3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Flag.get(idx3 ++)), "Flag");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            while (idx4 != len4) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "correctorAnnotation");
                int idx_4 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx_4 ++)), "CorrectorAnnotation");
                context.endNamespaceDecls();
                int idx_5 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx_5 ++)), "CorrectorAnnotation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx4 ++)), "CorrectorAnnotation");
                context.endElement();
            }
            while (idx11 != len11) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "studentAnnotation");
                int idx_6 = idx11;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx_6 ++)), "StudentAnnotation");
                context.endNamespaceDecls();
                int idx_7 = idx11;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx_7 ++)), "StudentAnnotation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx11 ++)), "StudentAnnotation");
                context.endElement();
            }
            if ((((_ManualCorrection == null)? 0 :_ManualCorrection.size()) == 0)&&(_AutoCorrection!= null)) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "autoCorrection");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endElement();
            } else {
                if ((((_ManualCorrection == null)? 0 :_ManualCorrection.size())>= 1)&&(_AutoCorrection == null)) {
                    while (idx6 != len6) {
                        context.startElement("http://examServer.thorstenberger.de/taskHandling", "manualCorrection");
                        int idx_10 = idx6;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx_10 ++)), "ManualCorrection");
                        context.endNamespaceDecls();
                        int idx_11 = idx6;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx_11 ++)), "ManualCorrection");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx6 ++)), "ManualCorrection");
                        context.endElement();
                    }
                }
            }
        }

        public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = ((_CorrectorHistory == null)? 0 :_CorrectorHistory.size());
            int idx3 = 0;
            final int len3 = ((_Flag == null)? 0 :_Flag.size());
            int idx4 = 0;
            final int len4 = ((_CorrectorAnnotation == null)? 0 :_CorrectorAnnotation.size());
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            int idx6 = 0;
            final int len6 = ((_ManualCorrection == null)? 0 :_ManualCorrection.size());
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = ((_StudentAnnotation == null)? 0 :_StudentAnnotation.size());
            if (_AssignedCorrector!= null) {
                context.startAttribute("", "assignedCorrector");
                try {
                    context.text(((java.lang.String) _AssignedCorrector), "AssignedCorrector");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "id");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Id)), "Id");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "login");
            try {
                context.text(((java.lang.String) _Login), "Login");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "status");
            try {
                context.text(((java.lang.String) _Status), "Status");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "taskDefId");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _TaskDefId)), "TaskDefId");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            while (idx2 != len2) {
                idx2 += 1;
            }
            while (idx3 != len3) {
                try {
                    idx3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
            while (idx4 != len4) {
                idx4 += 1;
            }
            while (idx11 != len11) {
                idx11 += 1;
            }
            if (!((((_ManualCorrection == null)? 0 :_ManualCorrection.size()) == 0)&&(_AutoCorrection!= null))) {
                if ((((_ManualCorrection == null)? 0 :_ManualCorrection.size())>= 1)&&(_AutoCorrection == null)) {
                    while (idx6 != len6) {
                        idx6 += 1;
                    }
                }
            }
        }

        public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = ((_CorrectorHistory == null)? 0 :_CorrectorHistory.size());
            int idx3 = 0;
            final int len3 = ((_Flag == null)? 0 :_Flag.size());
            int idx4 = 0;
            final int len4 = ((_CorrectorAnnotation == null)? 0 :_CorrectorAnnotation.size());
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            int idx6 = 0;
            final int len6 = ((_ManualCorrection == null)? 0 :_ManualCorrection.size());
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = ((_StudentAnnotation == null)? 0 :_StudentAnnotation.size());
            while (idx2 != len2) {
                idx2 += 1;
            }
            while (idx3 != len3) {
                try {
                    idx3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
            while (idx4 != len4) {
                idx4 += 1;
            }
            while (idx11 != len11) {
                idx11 += 1;
            }
            if (!((((_ManualCorrection == null)? 0 :_ManualCorrection.size()) == 0)&&(_AutoCorrection!= null))) {
                if ((((_ManualCorrection == null)? 0 :_ManualCorrection.size())>= 1)&&(_AutoCorrection == null)) {
                    while (idx6 != len6) {
                        idx6 += 1;
                    }
                }
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.m"
+"sv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom"
+"/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u0016xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0013\u0001q\u0000~\u0000 sr\u0000 com.sun.msv.gra"
+"mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000!q\u0000~\u0000&sr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"
+"amespaceURIq\u0000~\u0000(xq\u0000~\u0000#t\u0000[de.thorstenberger.examServer.dao.xm"
+"l.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryTypet\u0000+h"
+"ttp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u001dq\u0000~\u0000"
+"\u0014psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rel"
+"axng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/"
+"util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUriq\u0000~\u0000(L\u0000\btypeNameq\u0000~\u0000(L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"
+"1/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressi"
+"on$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util."
+"StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000(L\u0000\fnamespaceURIq\u0000~\u0000(xp"
+"q\u0000~\u00009q\u0000~\u00008sq\u0000~\u0000\'t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-i"
+"nstanceq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0010correctorHistoryt\u00000http://examServer.th"
+"orstenberger.de/taskHandlingq\u0000~\u0000&sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000.ppsr\u0000#com.sun.msv.datatype.xsd.StringTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00003q\u0000~\u00008t\u0000\u0006stringsr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000;\u0001q\u0000~\u0000>sq\u0000~\u0000?q\u0000~\u0000Nq\u0000~\u00008sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000&s"
+"q\u0000~\u0000\'t\u0000\u0004flagq\u0000~\u0000Fq\u0000~\u0000&sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000\u0015q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&s"
+"q\u0000~\u0000\'t\u0000^de.thorstenberger.examServer.dao.xml.jaxb.TaskHandli"
+"ngType.TaskletType.CorrectorAnnotationTypeq\u0000~\u0000+sq\u0000~\u0000\u000eppsq\u0000~\u0000"
+"\u001dq\u0000~\u0000\u0014pq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0013correctorAnnotationq\u0000~\u0000Fq\u0000~\u0000&"
+"sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000\u0015q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\u000eppsq"
+"\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\\de.thorstenber"
+"ger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.Stu"
+"dentAnnotationTypeq\u0000~\u0000+sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000&sq"
+"\u0000~\u0000\'t\u0000\u0011studentAnnotationq\u0000~\u0000Fq\u0000~\u0000&sq\u0000~\u0000\u000eppsq\u0000~\u0000\u000eq\u0000~\u0000\u0014psq\u0000~\u0000\u0015"
+"q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u0000"
+" q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000Yde.thorstenberger.examServer.dao.xml.jax"
+"b.TaskHandlingType.TaskletType.AutoCorrectionTypeq\u0000~\u0000+sq\u0000~\u0000\u000e"
+"ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u000eautoCorrectionq\u0000~\u0000Fsq\u0000"
+"~\u0000\u0010q\u0000~\u0000\u0014psq\u0000~\u0000\u0015q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015pp\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0014ps"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000[de.thorstenberger.examSer"
+"ver.dao.xml.jaxb.TaskHandlingType.TaskletType.ManualCorrecti"
+"onTypeq\u0000~\u0000+sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0010manua"
+"lCorrectionq\u0000~\u0000Fq\u0000~\u0000&sq\u0000~\u0000\u000eppsq\u0000~\u0000\u001dq\u0000~\u0000\u0014pq\u0000~\u0000Ksq\u0000~\u0000\'t\u0000\u0011assig"
+"nedCorrectort\u0000\u0000q\u0000~\u0000&sq\u0000~\u0000\u001dppsq\u0000~\u0000.ppsr\u0000!com.sun.msv.datatype"
+".xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Integer"
+"DerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/"
+"xsd/XSDatatypeImpl;xq\u0000~\u00003q\u0000~\u00008t\u0000\u0004longq\u0000~\u0000<sr\u0000*com.sun.msv.da"
+"tatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datat"
+"ype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Obje"
+"ct;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintF"
+"acet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq"
+"\u0000~\u0000\u0096L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType"
+";L\u0000\tfacetNameq\u0000~\u0000(xq\u0000~\u00005ppq\u0000~\u0000<\u0000\u0001sr\u0000*com.sun.msv.datatype.xs"
+"d.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u009appq\u0000~\u0000<\u0000\u0000sr\u0000$com.sun.msv"
+".datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0095q\u0000~\u00008t\u0000\u0007integerq\u0000~"
+"\u0000<sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalCon"
+"straintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u009dppq\u0000~\u0000<\u0001\u0000sr\u0000#com.sun.msv.dataty"
+"pe.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00003q\u0000~\u00008t\u0000\u0007decimalq\u0000~\u0000<q\u0000~\u0000\u00a9t"
+"\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00a3t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b"
+"\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000"
+"~\u0000\u00a3t\u0000\fmaxInclusivesq\u0000~\u0000\u00ad\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000>sq\u0000~\u0000?q\u0000~\u0000\u0098q\u0000~\u00008sq\u0000~\u0000\'t"
+"\u0000\u0002idq\u0000~\u0000\u0091sq\u0000~\u0000\u001dppq\u0000~\u0000Ksq\u0000~\u0000\'t\u0000\u0005loginq\u0000~\u0000\u0091sq\u0000~\u0000\u001dppq\u0000~\u0000Ksq\u0000~\u0000\'"
+"t\u0000\u0006statusq\u0000~\u0000\u0091sq\u0000~\u0000\u001dppq\u0000~\u0000\u0093sq\u0000~\u0000\'t\u0000\ttaskDefIdq\u0000~\u0000\u0091sr\u0000\"com.su"
+"n.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/su"
+"n/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gr"
+"ammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamV"
+"ersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000+"
+"\u0001pq\u0000~\u0000\u000fq\u0000~\u0000Vq\u0000~\u0000dq\u0000~\u0000\u008dq\u0000~\u0000\u0012q\u0000~\u0000Wq\u0000~\u0000eq\u0000~\u0000\u0080q\u0000~\u0000sq\u0000~\u0000Jq\u0000~\u0000\rq\u0000~"
+"\u0000,q\u0000~\u0000Rq\u0000~\u0000`q\u0000~\u0000\fq\u0000~\u0000nq\u0000~\u0000|q\u0000~\u0000\u0089q\u0000~\u0000rq\u0000~\u0000\tq\u0000~\u0000\u0005q\u0000~\u0000\bq\u0000~\u0000\u0019q\u0000~"
+"\u0000Yq\u0000~\u0000gq\u0000~\u0000uq\u0000~\u0000\u0082q\u0000~\u0000\u001cq\u0000~\u0000\\q\u0000~\u0000jq\u0000~\u0000xq\u0000~\u0000\u0085q\u0000~\u0000\nq\u0000~\u0000Gq\u0000~\u0000\u000bq\u0000~"
+"\u0000\u001bq\u0000~\u0000[q\u0000~\u0000iq\u0000~\u0000wq\u0000~\u0000\u0084q\u0000~\u0000Hq\u0000~\u0000\u0007q\u0000~\u0000\u0006x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class AutoCorrectionTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected boolean has_Points;
            protected float _Points;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType.class);
            }

            public float getPoints() {
                return _Points;
            }

            public void setPoints(float value) {
                _Points = value;
                has_Points = true;
            }

            public boolean isSetPoints() {
                return has_Points;
            }

            public void unsetPoints() {
                has_Points = false;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.AutoCorrectionTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
                context.startAttribute("", "points");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Points)), "Points");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedEx"
+"pq\u0000~\u0000\u0001xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd"
+".FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNu"
+"mberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomi"
+"cType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000fL\u0000\nwhi"
+"teSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000"
+" http://www.w3.org/2001/XMLSchemat\u0000\u0005floatsr\u00005com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003p"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000f"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u000fxpq\u0000~\u0000\u0013q\u0000~\u0000\u0012sr\u0000#com.sun.msv.grammar.Simp"
+"leNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fx"
+"r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006pointst\u0000\u0000sr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\r"
+"streamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool"
+";xp\u0000\u0000\u0000\u0000\u0001px"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.AutoCorrectionTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Points = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Points = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("points" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("points" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  1 :
                                    state = 2;
                                    eatText1(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "points");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 3;
                                        eatText1(v);
                                        continue outer;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class CorrectorAnnotationTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Value;
            protected java.lang.String _Corrector;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType.class);
            }

            public java.lang.String getValue() {
                return _Value;
            }

            public void setValue(java.lang.String value) {
                _Value = value;
            }

            public boolean isSetValue() {
                return (_Value!= null);
            }

            public void unsetValue() {
                _Value = null;
            }

            public java.lang.String getCorrector() {
                return _Corrector;
            }

            public void setCorrector(java.lang.String value) {
                _Corrector = value;
            }

            public boolean isSetCorrector() {
                return (_Corrector!= null);
            }

            public void unsetCorrector() {
                _Corrector = null;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                try {
                    context.text(((java.lang.String) _Value), "Value");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startAttribute("", "corrector");
                try {
                    context.text(((java.lang.String) _Corrector), "Corrector");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004na"
+"met\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.da"
+"tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun."
+"msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv"
+".datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatyp"
+"e.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/"
+"String;L\u0000\btypeNameq\u0000~\u0000\u000eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype"
+"/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSche"
+"mat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$Null"
+"SetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringP"
+"air\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000"
+"~\u0000\u0011sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"
+"\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003ppq\u0000~\u0000\t"
+"sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000exr\u0000\u001dcom.sun.msv.grammar.NameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tcorrectort\u0000\u0000sr\u0000\"com.sun.msv.grammar.Expressi"
+"onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"
+"onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"
+"losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom"
+"/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0001\u0001pq\u0000~\u0000\u0005x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "-----");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Corrector = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  2 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  4 :
                                    revertToParentFromText(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "corrector");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 3;
                                        eatText1(v);
                                        continue outer;
                                    }
                                    break;
                                case  3 :
                                    state = 4;
                                    eatText2(value);
                                    return ;
                                case  1 :
                                    state = 2;
                                    eatText1(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Value = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public static class CorrectorHistoryTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Corrector;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType.class);
            }

            public java.lang.String getCorrector() {
                return _Corrector;
            }

            public void setCorrector(java.lang.String value) {
                _Corrector = value;
            }

            public boolean isSetCorrector() {
                return (_Corrector!= null);
            }

            public void unsetCorrector() {
                _Corrector = null;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startAttribute("", "corrector");
                try {
                    context.text(((java.lang.String) _Corrector), "Corrector");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedEx"
+"pq\u0000~\u0000\u0001xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd"
+".StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dataty"
+"pe.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype."
+"xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDa"
+"tatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\b"
+"typeNameq\u0000~\u0000\u000eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/White"
+"SpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006strin"
+"gsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d"
+"\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000~\u0000\u0011sr\u0000#com"
+".sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000e"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u000exr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpt\u0000\tcorrectort\u0000\u0000sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$"
+"ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHa"
+"sh\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/ms"
+"v/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0000\u0001px"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Corrector = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  0 :
                                    attIdx = context.getAttribute("", "corrector");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 3;
                                        eatText1(v);
                                        continue outer;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    state = 2;
                                    eatText1(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class ManualCorrectionTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.ManualCorrectionType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Corrector;
            protected boolean has_Points;
            protected float _Points;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.ManualCorrectionType.class);
            }

            public java.lang.String getCorrector() {
                return _Corrector;
            }

            public void setCorrector(java.lang.String value) {
                _Corrector = value;
            }

            public boolean isSetCorrector() {
                return (_Corrector!= null);
            }

            public void unsetCorrector() {
                _Corrector = null;
            }

            public float getPoints() {
                return _Points;
            }

            public void setPoints(float value) {
                _Points = value;
                has_Points = true;
            }

            public boolean isSetPoints() {
                return has_Points;
            }

            public void unsetPoints() {
                has_Points = false;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
                if (_Corrector!= null) {
                    context.startAttribute("", "corrector");
                    try {
                        context.text(((java.lang.String) _Corrector), "Corrector");
                    } catch (java.lang.Exception e) {
                        de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
                context.startAttribute("", "points");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Points)), "Points");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.ManualCorrectionType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L"
+"\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~"
+"\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.ms"
+"v.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Da"
+"tatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;"
+"xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000"
+"\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\f"
+"namespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0015L\u0000\nwhiteSpa"
+"cet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http"
+"://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr"
+"\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\f"
+"namespaceURIq\u0000~\u0000\u0015xpq\u0000~\u0000\u0019q\u0000~\u0000\u0018sr\u0000#com.sun.msv.grammar.SimpleN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xr\u0000\u001d"
+"com.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tcorrectort\u0000\u0000sr\u0000"
+"0com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003sq\u0000~\u0000\u000b\u0001q\u0000~\u0000\'sq\u0000~\u0000\bppsq\u0000~\u0000\rppsr\u0000\"com.sun.msv.datatype.x"
+"sd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Floating"
+"NumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u0018t\u0000\u0005floatsr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001fq\u0000~\u0000.q\u0000~\u0000\u0018sq\u0000~\u0000!t\u0000\u0006pointsq\u0000~\u0000%sr\u0000\"com.sun.msv.grammar.E"
+"xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"
+"xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"
+"nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parent"
+"t\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0002\u0001pq\u0000~\u0000\u0007q\u0000~\u0000\u0005x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Points = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Points = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Corrector = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                if (("points" == ___local)&&("" == ___uri)) {
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  0 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  5 :
                                if (("points" == ___local)&&("" == ___uri)) {
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  2 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  6 :
                                    revertToParentFromText(value);
                                    return ;
                                case  4 :
                                    state = 5;
                                    eatText1(value);
                                    return ;
                                case  3 :
                                    attIdx = context.getAttribute("", "points");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 6;
                                        eatText1(v);
                                        continue outer;
                                    }
                                    break;
                                case  1 :
                                    state = 2;
                                    eatText2(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "corrector");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 3;
                                        eatText2(v);
                                        continue outer;
                                    }
                                    state = 3;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class StudentAnnotationTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Value;
            protected boolean has_Acknowledged;
            protected boolean _Acknowledged;
            protected boolean has_Date;
            protected long _Date;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType.class);
            }

            public java.lang.String getValue() {
                return _Value;
            }

            public void setValue(java.lang.String value) {
                _Value = value;
            }

            public boolean isSetValue() {
                return (_Value!= null);
            }

            public void unsetValue() {
                _Value = null;
            }

            public boolean isAcknowledged() {
                if (!has_Acknowledged) {
                    return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
                } else {
                    return _Acknowledged;
                }
            }

            public void setAcknowledged(boolean value) {
                _Acknowledged = value;
                has_Acknowledged = true;
            }

            public boolean isSetAcknowledged() {
                return has_Acknowledged;
            }

            public void unsetAcknowledged() {
                has_Acknowledged = false;
            }

            public long getDate() {
                return _Date;
            }

            public void setDate(long value) {
                _Date = value;
                has_Date = true;
            }

            public boolean isSetDate() {
                return has_Date;
            }

            public void unsetDate() {
                has_Date = false;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
                try {
                    context.text(((java.lang.String) _Value), "Value");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
                if (has_Acknowledged) {
                    context.startAttribute("", "acknowledged");
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Acknowledged)), "Acknowledged");
                    } catch (java.lang.Exception e) {
                        de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
                context.startAttribute("", "date");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Date)), "Date");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000"
+"~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.su"
+"n.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*"
+"com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com"
+".sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv"
+".datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lja"
+"va/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"
+"datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"
+"/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Express"
+"ion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util"
+".StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fx"
+"pq\u0000~\u0000\u0013q\u0000~\u0000\u0012sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"
+"\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003sr\u0000\u0011jav"
+"a.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0007ppsr\u0000$com.sun.msv"
+".datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fq\u0000~\u0000\u0012t\u0000\u0007booleansr\u0000"
+"5com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u0018sq\u0000~\u0000\u0019q\u0000~\u0000%q\u0000~\u0000\u0012sr\u0000#com.sun.msv.grammar.Simp"
+"leNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fx"
+"r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\facknowledged"
+"t\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000 \u0001q\u0000~\u0000/sq\u0000~\u0000\u001dppsq\u0000~\u0000\u0007ppsr\u0000!com.sun.msv.data"
+"type.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Int"
+"egerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datat"
+"ype/xsd/XSDatatypeImpl;xq\u0000~\u0000\fq\u0000~\u0000\u0012t\u0000\u0004longq\u0000~\u0000\'sr\u0000*com.sun.ms"
+"v.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.d"
+"atatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/"
+"Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstra"
+"intFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWith"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseT"
+"ypeq\u0000~\u00005L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Concrete"
+"Type;L\u0000\tfacetNameq\u0000~\u0000\u000fxq\u0000~\u0000\u000eppq\u0000~\u0000\'\u0000\u0001sr\u0000*com.sun.msv.datatyp"
+"e.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00009ppq\u0000~\u0000\'\u0000\u0000sr\u0000$com.sun"
+".msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u0000\u0012t\u0000\u0007intege"
+"rq\u0000~\u0000\'sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexica"
+"lConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000<ppq\u0000~\u0000\'\u0001\u0000sr\u0000#com.sun.msv.da"
+"tatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fq\u0000~\u0000\u0012t\u0000\u0007decimalq\u0000~\u0000\'q\u0000"
+"~\u0000Ht\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Bt\u0000\fminInclusivesr\u0000\u000ejava.lang.Lo"
+"ng;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000q\u0000~\u0000Bt\u0000\fmaxInclusivesq\u0000~\u0000L\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u0018sq\u0000~\u0000\u0019q\u0000~\u00007q\u0000~\u0000\u0012sq\u0000"
+"~\u0000)t\u0000\u0004dateq\u0000~\u0000-sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Closed"
+"Hash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N"
+"\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gram"
+"mar/ExpressionPool;xp\u0000\u0000\u0000\u0003\u0001pq\u0000~\u0000\u0006q\u0000~\u0000\u001cq\u0000~\u0000\u0005x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "--------");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  7 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  3 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Acknowledged = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Acknowledged = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Date = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Date = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  7 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  3 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  7 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                if (("acknowledged" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  3 :
                                if (("date" == ___local)&&("" == ___uri)) {
                                    state = 4;
                                    return ;
                                }
                                break;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  7 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("acknowledged" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  3 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  5 :
                                if (("date" == ___local)&&("" == ___uri)) {
                                    state = 6;
                                    return ;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  7 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    state = 2;
                                    eatText1(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "acknowledged");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 3;
                                        eatText1(v);
                                        continue outer;
                                    }
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    attIdx = context.getAttribute("", "date");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 6;
                                        eatText2(v);
                                        continue outer;
                                    }
                                    break;
                                case  4 :
                                    state = 5;
                                    eatText2(value);
                                    return ;
                                case  6 :
                                    state = 7;
                                    eatText3(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Value = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "---------------------------------");
            }

            protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  16 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  28 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  25 :
                            attIdx = context.getAttribute("", "acknowledged");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  24 :
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 22;
                                return ;
                            }
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 25;
                                return ;
                            }
                            state = 27;
                            continue outer;
                        case  27 :
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 25;
                                return ;
                            }
                            if (("autoCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 31;
                                return ;
                            }
                            if (("manualCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 28;
                                return ;
                            }
                            state = 30;
                            continue outer;
                        case  30 :
                            if (("manualCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 28;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  21 :
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 22;
                                return ;
                            }
                            state = 24;
                            continue outer;
                        case  18 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 16;
                                return ;
                            }
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            state = 21;
                            continue outer;
                        case  22 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "assignedCorrector");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText5(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  15 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 16;
                                return ;
                            }
                            state = 18;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _TaskDefId = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_TaskDefId = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Login = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Status = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Id = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Id = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AssignedCorrector = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  17 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 18;
                                return ;
                            }
                            break;
                        case  16 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  28 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  26 :
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 27;
                                return ;
                            }
                            break;
                        case  25 :
                            attIdx = context.getAttribute("", "acknowledged");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  20 :
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 21;
                                return ;
                            }
                            break;
                        case  29 :
                            if (("manualCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 30;
                                return ;
                            }
                            break;
                        case  30 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  22 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "assignedCorrector");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText5(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  23 :
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 24;
                                return ;
                            }
                            break;
                        case  32 :
                            if (("autoCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 30;
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            if (("taskDefId" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            break;
                        case  16 :
                            if (("corrector" == ___local)&&("" == ___uri)) {
                                _getCorrectorHistory().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.class), 17, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  28 :
                            if (("corrector" == ___local)&&("" == ___uri)) {
                                _getManualCorrection().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl.class), 29, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("points" == ___local)&&("" == ___uri)) {
                                _getManualCorrection().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl.class), 29, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  31 :
                            if (("points" == ___local)&&("" == ___uri)) {
                                _AutoCorrection = ((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.AutoCorrectionTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.AutoCorrectionTypeImpl.class), 32, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                        case  25 :
                            if (("acknowledged" == ___local)&&("" == ___uri)) {
                                _getStudentAnnotation().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.class), 26, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("date" == ___local)&&("" == ___uri)) {
                                _getStudentAnnotation().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.class), 26, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  30 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  22 :
                            if (("corrector" == ___local)&&("" == ___uri)) {
                                _getCorrectorAnnotation().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.class), 23, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  6 :
                            if (("login" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            break;
                        case  9 :
                            if (("status" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            break;
                        case  3 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  0 :
                            if (("assignedCorrector" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  16 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  28 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  25 :
                            attIdx = context.getAttribute("", "acknowledged");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  14 :
                            if (("taskDefId" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  30 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  2 :
                            if (("assignedCorrector" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  22 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  5 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "assignedCorrector");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText5(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  11 :
                            if (("status" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                        case  8 :
                            if (("login" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  12 :
                                attIdx = context.getAttribute("", "taskDefId");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 15;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  1 :
                                state = 2;
                                eatText5(value);
                                return ;
                            case  19 :
                                state = 20;
                                eatText6(value);
                                return ;
                            case  10 :
                                state = 11;
                                eatText3(value);
                                return ;
                            case  16 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  28 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  31 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  4 :
                                state = 5;
                                eatText4(value);
                                return ;
                            case  25 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  7 :
                                state = 8;
                                eatText2(value);
                                return ;
                            case  30 :
                                revertToParentFromText(value);
                                return ;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  22 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  6 :
                                attIdx = context.getAttribute("", "login");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  9 :
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText4(v);
                                    continue outer;
                                }
                                break;
                            case  13 :
                                state = 14;
                                eatText1(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "assignedCorrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText5(v);
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _getFlag().add(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "assignedCorrector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IdCount = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IdCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "assignedCorrector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("idCount" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("assignedCorrector" == ___local)&&("" == ___uri)) {
                            _getTasklet().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getTasklet().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        state = 6;
                        continue outer;
                    case  2 :
                        if (("idCount" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "assignedCorrector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            state = 6;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "idCount");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  4 :
                            attIdx = context.getAttribute("", "assignedCorrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
