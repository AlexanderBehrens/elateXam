//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-01/24/2006 06:08 PM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.06.27 at 06:09:08 PM CEST 
//


package de.thorstenberger.examServer.dao.xml.jaxb.impl;

public class UsersTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.UsersType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _User;
    protected boolean has_IdCount;
    protected long _IdCount;
    public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.UsersType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getUser() {
        if (_User == null) {
            _User = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _User;
    }

    public java.util.List getUser() {
        return _getUser();
    }

    public boolean isSetUser() {
        return ((_User == null)?false:_User.isModified());
    }

    public void unsetUser() {
        if (_User!= null) {
            _User.clear();
            _User.setModified(false);
        }
    }

    public long getIdCount() {
        return _IdCount;
    }

    public void setIdCount(long value) {
        _IdCount = value;
        has_IdCount = true;
    }

    public boolean isSetIdCount() {
        return has_IdCount;
    }

    public void unsetIdCount() {
        has_IdCount = false;
    }

    public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
        return new de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_User == null)? 0 :_User.size());
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            context.startElement("http://examServer.thorstenberger.de/users", "user");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _User.get(idx_0 ++)), "User");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _User.get(idx_1 ++)), "User");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _User.get(idx1 ++)), "User");
            context.endElement();
        }
    }

    public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_User == null)? 0 :_User.size());
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        context.startAttribute("", "IdCount");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _IdCount)), "IdCount");
        } catch (java.lang.Exception e) {
            de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_User == null)? 0 :_User.size());
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.UsersType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003s"
+"r\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.g"
+"rammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun"
+"/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\bq\u0000~\u0000\fpsr\u0000 com.sun.m"
+"sv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~"
+"\u0000\u000exq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u00002com.sun.msv.grammar.Expression$AnyStringEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000b\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar"
+".AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnames"
+"paceURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000<de.thorstenberger.examServer.dao.xml.ja"
+"xb.UsersType.UserTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-e"
+"lementssq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0015q\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~"
+"\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun"
+".msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.dataty"
+"pe.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype."
+"xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDa"
+"tatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com"
+".sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://ww"
+"w.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004usert\u0000)http://"
+"examServer.thorstenberger.de/usersq\u0000~\u0000\u001esq\u0000~\u0000\u0015ppsq\u0000~\u0000&ppsr\u0000!c"
+"om.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.d"
+"atatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lco"
+"m/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000+q\u0000~\u00000t\u0000\u0004longq\u0000~\u0000"
+"4sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValu"
+"et\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeW"
+"ithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.x"
+"sd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCh"
+"eckFlagL\u0000\bbaseTypeq\u0000~\u0000CL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/dataty"
+"pe/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~\u0000-ppq\u0000~\u00004\u0000\u0001sr\u0000*com."
+"sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gppq\u0000~"
+"\u00004\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"Bq\u0000~\u00000t\u0000\u0007integerq\u0000~\u00004sr\u0000,com.sun.msv.datatype.xsd.FractionDi"
+"gitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.Dat"
+"aTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Jppq\u0000~\u00004\u0001\u0000sr\u0000"
+"#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000~\u00000t\u0000"
+"\u0007decimalq\u0000~\u00004q\u0000~\u0000Vt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Pt\u0000\fminInclusives"
+"r\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d"
+"\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Pt\u0000\fmaxInclusivesq\u0000~\u0000Z\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u00006sq\u0000~"
+"\u00007q\u0000~\u0000Eq\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0007IdCountt\u0000\u0000sr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$L"
+"com/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000\nq\u0000~\u0000\u0011q\u0000~\u0000$q\u0000"
+"~\u0000\u0005q\u0000~\u0000\u0007q\u0000~\u0000\u0013q\u0000~\u0000\u0014x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("user" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "IdCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  6 :
                        if (("user" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "account_enabled");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IdCount = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IdCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "IdCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("user" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "account_enabled");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("IdCount" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        if (("account_enabled" == ___local)&&("" == ___uri)) {
                            _getUser().add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "IdCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("IdCount" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "account_enabled");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "IdCount");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "account_enabled");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

    public static class UserTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.UsersType.UserType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
    {

        protected boolean has_CredentialsExpired;
        protected boolean _CredentialsExpired;
        protected java.lang.String _Website;
        protected boolean has_AccountLocked;
        protected boolean _AccountLocked;
        protected java.lang.String _Password;
        protected java.lang.String _PhoneNumber;
        protected com.sun.xml.bind.util.ListImpl _RoleRef;
        protected java.lang.String _Province;
        protected java.lang.String _Country;
        protected java.lang.String _LastName;
        protected java.lang.String _City;
        protected java.lang.String _PostalCode;
        protected java.lang.String _Email;
        protected java.lang.String _PasswordHint;
        protected java.lang.String _Username;
        protected java.lang.String _Address;
        protected java.lang.String _FirstName;
        protected boolean has_AccountEnabled;
        protected boolean _AccountEnabled;
        protected boolean has_Id;
        protected long _Id;
        protected boolean has_AccountExpired;
        protected boolean _AccountExpired;
        protected boolean has_Version;
        protected int _Version;
        public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.UsersType.UserType.class);
        }

        public boolean isCredentialsExpired() {
            return _CredentialsExpired;
        }

        public void setCredentialsExpired(boolean value) {
            _CredentialsExpired = value;
            has_CredentialsExpired = true;
        }

        public boolean isSetCredentialsExpired() {
            return has_CredentialsExpired;
        }

        public void unsetCredentialsExpired() {
            has_CredentialsExpired = false;
        }

        public java.lang.String getWebsite() {
            return _Website;
        }

        public void setWebsite(java.lang.String value) {
            _Website = value;
        }

        public boolean isSetWebsite() {
            return (_Website!= null);
        }

        public void unsetWebsite() {
            _Website = null;
        }

        public boolean isAccountLocked() {
            return _AccountLocked;
        }

        public void setAccountLocked(boolean value) {
            _AccountLocked = value;
            has_AccountLocked = true;
        }

        public boolean isSetAccountLocked() {
            return has_AccountLocked;
        }

        public void unsetAccountLocked() {
            has_AccountLocked = false;
        }

        public java.lang.String getPassword() {
            return _Password;
        }

        public void setPassword(java.lang.String value) {
            _Password = value;
        }

        public boolean isSetPassword() {
            return (_Password!= null);
        }

        public void unsetPassword() {
            _Password = null;
        }

        public java.lang.String getPhoneNumber() {
            return _PhoneNumber;
        }

        public void setPhoneNumber(java.lang.String value) {
            _PhoneNumber = value;
        }

        public boolean isSetPhoneNumber() {
            return (_PhoneNumber!= null);
        }

        public void unsetPhoneNumber() {
            _PhoneNumber = null;
        }

        protected com.sun.xml.bind.util.ListImpl _getRoleRef() {
            if (_RoleRef == null) {
                _RoleRef = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _RoleRef;
        }

        public java.util.List getRoleRef() {
            return _getRoleRef();
        }

        public boolean isSetRoleRef() {
            return ((_RoleRef == null)?false:_RoleRef.isModified());
        }

        public void unsetRoleRef() {
            if (_RoleRef!= null) {
                _RoleRef.clear();
                _RoleRef.setModified(false);
            }
        }

        public java.lang.String getProvince() {
            return _Province;
        }

        public void setProvince(java.lang.String value) {
            _Province = value;
        }

        public boolean isSetProvince() {
            return (_Province!= null);
        }

        public void unsetProvince() {
            _Province = null;
        }

        public java.lang.String getCountry() {
            return _Country;
        }

        public void setCountry(java.lang.String value) {
            _Country = value;
        }

        public boolean isSetCountry() {
            return (_Country!= null);
        }

        public void unsetCountry() {
            _Country = null;
        }

        public java.lang.String getLastName() {
            return _LastName;
        }

        public void setLastName(java.lang.String value) {
            _LastName = value;
        }

        public boolean isSetLastName() {
            return (_LastName!= null);
        }

        public void unsetLastName() {
            _LastName = null;
        }

        public java.lang.String getCity() {
            return _City;
        }

        public void setCity(java.lang.String value) {
            _City = value;
        }

        public boolean isSetCity() {
            return (_City!= null);
        }

        public void unsetCity() {
            _City = null;
        }

        public java.lang.String getPostalCode() {
            return _PostalCode;
        }

        public void setPostalCode(java.lang.String value) {
            _PostalCode = value;
        }

        public boolean isSetPostalCode() {
            return (_PostalCode!= null);
        }

        public void unsetPostalCode() {
            _PostalCode = null;
        }

        public java.lang.String getEmail() {
            return _Email;
        }

        public void setEmail(java.lang.String value) {
            _Email = value;
        }

        public boolean isSetEmail() {
            return (_Email!= null);
        }

        public void unsetEmail() {
            _Email = null;
        }

        public java.lang.String getPasswordHint() {
            return _PasswordHint;
        }

        public void setPasswordHint(java.lang.String value) {
            _PasswordHint = value;
        }

        public boolean isSetPasswordHint() {
            return (_PasswordHint!= null);
        }

        public void unsetPasswordHint() {
            _PasswordHint = null;
        }

        public java.lang.String getUsername() {
            return _Username;
        }

        public void setUsername(java.lang.String value) {
            _Username = value;
        }

        public boolean isSetUsername() {
            return (_Username!= null);
        }

        public void unsetUsername() {
            _Username = null;
        }

        public java.lang.String getAddress() {
            return _Address;
        }

        public void setAddress(java.lang.String value) {
            _Address = value;
        }

        public boolean isSetAddress() {
            return (_Address!= null);
        }

        public void unsetAddress() {
            _Address = null;
        }

        public java.lang.String getFirstName() {
            return _FirstName;
        }

        public void setFirstName(java.lang.String value) {
            _FirstName = value;
        }

        public boolean isSetFirstName() {
            return (_FirstName!= null);
        }

        public void unsetFirstName() {
            _FirstName = null;
        }

        public boolean isAccountEnabled() {
            return _AccountEnabled;
        }

        public void setAccountEnabled(boolean value) {
            _AccountEnabled = value;
            has_AccountEnabled = true;
        }

        public boolean isSetAccountEnabled() {
            return has_AccountEnabled;
        }

        public void unsetAccountEnabled() {
            has_AccountEnabled = false;
        }

        public long getId() {
            return _Id;
        }

        public void setId(long value) {
            _Id = value;
            has_Id = true;
        }

        public boolean isSetId() {
            return has_Id;
        }

        public void unsetId() {
            has_Id = false;
        }

        public boolean isAccountExpired() {
            return _AccountExpired;
        }

        public void setAccountExpired(boolean value) {
            _AccountExpired = value;
            has_AccountExpired = true;
        }

        public boolean isSetAccountExpired() {
            return has_AccountExpired;
        }

        public void unsetAccountExpired() {
            has_AccountExpired = false;
        }

        public int getVersion() {
            return _Version;
        }

        public void setVersion(int value) {
            _Version = value;
            has_Version = true;
        }

        public boolean isSetVersion() {
            return has_Version;
        }

        public void unsetVersion() {
            has_Version = false;
        }

        public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            return new de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_CredentialsExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "CredentialsExpired"));
            }
            if (!has_AccountLocked) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountLocked"));
            }
            int idx6 = 0;
            final int len6 = ((_RoleRef == null)? 0 :_RoleRef.size());
            if (!has_AccountEnabled) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountEnabled"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            if (!has_AccountExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountExpired"));
            }
            if (!has_Version) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Version"));
            }
            while (idx6 != len6) {
                context.startElement("http://examServer.thorstenberger.de/users", "role-ref");
                int idx_0 = idx6;
                try {
                    idx_0 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endNamespaceDecls();
                int idx_1 = idx6;
                try {
                    idx_1 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _RoleRef.get(idx6 ++)), "RoleRef");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }

        public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_CredentialsExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "CredentialsExpired"));
            }
            if (!has_AccountLocked) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountLocked"));
            }
            int idx6 = 0;
            final int len6 = ((_RoleRef == null)? 0 :_RoleRef.size());
            if (!has_AccountEnabled) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountEnabled"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            if (!has_AccountExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountExpired"));
            }
            if (!has_Version) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Version"));
            }
            context.startAttribute("", "account_enabled");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AccountEnabled)), "AccountEnabled");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "account_expired");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AccountExpired)), "AccountExpired");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "account_locked");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AccountLocked)), "AccountLocked");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Address!= null) {
                context.startAttribute("", "address");
                try {
                    context.text(((java.lang.String) _Address), "Address");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_City!= null) {
                context.startAttribute("", "city");
                try {
                    context.text(((java.lang.String) _City), "City");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_Country!= null) {
                context.startAttribute("", "country");
                try {
                    context.text(((java.lang.String) _Country), "Country");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "credentials_expired");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CredentialsExpired)), "CredentialsExpired");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Email!= null) {
                context.startAttribute("", "email");
                try {
                    context.text(((java.lang.String) _Email), "Email");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_FirstName!= null) {
                context.startAttribute("", "first_name");
                try {
                    context.text(((java.lang.String) _FirstName), "FirstName");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "id");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Id)), "Id");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_LastName!= null) {
                context.startAttribute("", "last_name");
                try {
                    context.text(((java.lang.String) _LastName), "LastName");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "password");
            try {
                context.text(((java.lang.String) _Password), "Password");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_PasswordHint!= null) {
                context.startAttribute("", "password_hint");
                try {
                    context.text(((java.lang.String) _PasswordHint), "PasswordHint");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_PhoneNumber!= null) {
                context.startAttribute("", "phone_number");
                try {
                    context.text(((java.lang.String) _PhoneNumber), "PhoneNumber");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_PostalCode!= null) {
                context.startAttribute("", "postal_code");
                try {
                    context.text(((java.lang.String) _PostalCode), "PostalCode");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_Province!= null) {
                context.startAttribute("", "province");
                try {
                    context.text(((java.lang.String) _Province), "Province");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "username");
            try {
                context.text(((java.lang.String) _Username), "Username");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "version");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Version)), "Version");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Website!= null) {
                context.startAttribute("", "website");
                try {
                    context.text(((java.lang.String) _Website), "Website");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            while (idx6 != len6) {
                try {
                    idx6 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        }

        public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_CredentialsExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "CredentialsExpired"));
            }
            if (!has_AccountLocked) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountLocked"));
            }
            int idx6 = 0;
            final int len6 = ((_RoleRef == null)? 0 :_RoleRef.size());
            if (!has_AccountEnabled) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountEnabled"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            if (!has_AccountExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountExpired"));
            }
            if (!has_Version) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Version"));
            }
            while (idx6 != len6) {
                try {
                    idx6 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.UsersType.UserType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar."
+"OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005va"
+"luexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risA"
+"lwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fname"
+"spaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000,L\u0000\nwhiteSpacet\u0000"
+".Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://w"
+"ww.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.g"
+"rammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000,L\u0000\fname"
+"spaceURIq\u0000~\u0000,xpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u0018ppsr\u0000 com.sun.msv.grammar.Att"
+"ributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000 xq\u0000~\u0000\u0003q\u0000~\u0000\u001ep"
+"sq\u0000~\u0000$ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000)q\u0000~\u0000/t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00002q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000>q\u0000~\u0000/sr\u0000#com.s"
+"un.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000,L\u0000"
+"\fnamespaceURIq\u0000~\u0000,xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003sq\u0000~\u0000\u001d\u0001q\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\brole-reft\u0000)http://examServer.thorst"
+"enberger.de/usersq\u0000~\u0000Hsq\u0000~\u00009ppsq\u0000~\u0000$ppsr\u0000$com.sun.msv.dataty"
+"pe.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0007booleanq\u0000~\u0000@q\u0000~\u00005"
+"sq\u0000~\u00006q\u0000~\u0000Qq\u0000~\u0000/sq\u0000~\u0000Bt\u0000\u000faccount_enabledt\u0000\u0000sq\u0000~\u00009ppq\u0000~\u0000Nsq\u0000~"
+"\u0000Bt\u0000\u000faccount_expiredq\u0000~\u0000Usq\u0000~\u00009ppq\u0000~\u0000Nsq\u0000~\u0000Bt\u0000\u000eaccount_locke"
+"dq\u0000~\u0000Usq\u0000~\u0000\u0018ppsq\u0000~\u00009q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u0007addressq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000"
+"~\u0000\u0018ppsq\u0000~\u00009q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u0004cityq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000~\u0000\u0018ppsq\u0000~\u00009q"
+"\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u0007countryq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000~\u00009ppq\u0000~\u0000Nsq\u0000~\u0000Bt\u0000\u0013cr"
+"edentials_expiredq\u0000~\u0000Usq\u0000~\u0000\u0018ppsq\u0000~\u00009q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u0005emai"
+"lq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000~\u0000\u0018ppsq\u0000~\u00009q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\nfirst_nameq\u0000~\u0000U"
+"q\u0000~\u0000Hsq\u0000~\u00009ppsq\u0000~\u0000$ppsr\u0000\'com.sun.msv.datatype.xsd.FinalCompo"
+"nent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Pro"
+"xy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatat"
+"ypeImpl;xq\u0000~\u0000+q\u0000~\u0000Lpq\u0000~\u0000@sr\u0000!com.sun.msv.datatype.xsd.LongTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType"
+"\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000wxq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0004longq\u0000~\u0000@sr\u0000*com."
+"sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun"
+".msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava"
+"/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueC"
+"onstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTy"
+"peWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000"
+"\bbaseTypeq\u0000~\u0000wL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Co"
+"ncreteType;L\u0000\tfacetNameq\u0000~\u0000,xq\u0000~\u0000+ppq\u0000~\u0000@\u0000\u0001sr\u0000*com.sun.msv.d"
+"atatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000~ppq\u0000~\u0000@\u0000\u0000sr\u0000$c"
+"om.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000zq\u0000~\u0000/t\u0000\u0007"
+"integerq\u0000~\u0000@sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWith"
+"LexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0081ppq\u0000~\u0000@\u0001\u0000sr\u0000#com.sun."
+"msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0007decimalq"
+"\u0000~\u0000@q\u0000~\u0000\u008dt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u0087t\u0000\fminInclusivesr\u0000\u000ejava.l"
+"ang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp"
+"\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u0087t\u0000\fmaxInclusivesq\u0000~\u0000\u0091\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u0000\u0000\u0000\u0000q\u0000~\u00005sq\u0000~\u00006q\u0000~"
+"\u0000|q\u0000~\u0000Lsq\u0000~\u0000Bt\u0000\u0002idq\u0000~\u0000Usq\u0000~\u0000\u0018ppsq\u0000~\u00009q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\tlas"
+"t_nameq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000~\u00009ppq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\bpasswordq\u0000~\u0000Usq\u0000~\u0000\u0018pps"
+"q\u0000~\u00009q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\rpassword_hintq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000~\u0000\u0018ppsq\u0000~"
+"\u00009q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\fphone_numberq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000~\u0000\u0018ppsq\u0000~\u00009q\u0000"
+"~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u000bpostal_codeq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000~\u0000\u0018ppsq\u0000~\u00009q\u0000~\u0000\u001epq"
+"\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\bprovinceq\u0000~\u0000Uq\u0000~\u0000Hsq\u0000~\u00009ppq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\busernam"
+"eq\u0000~\u0000Usq\u0000~\u00009ppsq\u0000~\u0000$ppsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000zq\u0000~\u0000/t\u0000\u0003intq\u0000~\u0000@sq\u0000~\u0000}ppq\u0000~\u0000@\u0000\u0001sq\u0000~\u0000\u0084ppq\u0000~\u0000@\u0000"
+"\u0000q\u0000~\u0000{q\u0000~\u0000{q\u0000~\u0000\u0090sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~"
+"\u0000\u0092\u0080\u0000\u0000\u0000q\u0000~\u0000{q\u0000~\u0000\u0094sq\u0000~\u0000\u00ba\u007f\u00ff\u00ff\u00ffq\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000\u00b7q\u0000~\u0000/sq\u0000~\u0000Bt\u0000\u0007vers"
+"ionq\u0000~\u0000Usq\u0000~\u0000\u0018ppsq\u0000~\u00009q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u0007websiteq\u0000~\u0000Uq\u0000~\u0000Hs"
+"r\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet"
+"\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.s"
+"un.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB"
+"\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPo"
+"ol;xp\u0000\u0000\u0000\"\u0001pq\u0000~\u0000\u0017q\u0000~\u0000kq\u0000~\u0000\u000bq\u0000~\u0000\u0014q\u0000~\u0000\fq\u0000~\u00008q\u0000~\u0000\u0011q\u0000~\u0000\u0010q\u0000~\u0000\u00a8q\u0000~\u0000"
+"\u0016q\u0000~\u0000\tq\u0000~\u0000\u0015q\u0000~\u0000\u0006q\u0000~\u0000\u00a0q\u0000~\u0000\rq\u0000~\u0000\\q\u0000~\u0000\u00acq\u0000~\u0000\u001cq\u0000~\u0000\u00c0q\u0000~\u0000`q\u0000~\u0000\u0019q\u0000~\u0000"
+"\u00a4q\u0000~\u0000\u0007q\u0000~\u0000\u000fq\u0000~\u0000\u0099q\u0000~\u0000\u0012q\u0000~\u0000\nq\u0000~\u0000\u0013q\u0000~\u0000dq\u0000~\u0000oq\u0000~\u0000\u000eq\u0000~\u0000#q\u0000~\u0000\bq\u0000~\u0000"
+"\u0005x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------------------------------------------------------");
            }

            protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  30 :
                            attIdx = context.getAttribute("", "last_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 33;
                                eatText1(v);
                                continue outer;
                            }
                            state = 33;
                            continue outer;
                        case  24 :
                            attIdx = context.getAttribute("", "first_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 27;
                                eatText2(v);
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "credentials_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  33 :
                            attIdx = context.getAttribute("", "password");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 36;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  42 :
                            attIdx = context.getAttribute("", "postal_code");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 45;
                                eatText5(v);
                                continue outer;
                            }
                            state = 45;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "address");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText6(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "country");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText7(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "account_enabled");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText8(v);
                                continue outer;
                            }
                            break;
                        case  21 :
                            attIdx = context.getAttribute("", "email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 24;
                                eatText9(v);
                                continue outer;
                            }
                            state = 24;
                            continue outer;
                        case  39 :
                            attIdx = context.getAttribute("", "phone_number");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 42;
                                eatText10(v);
                                continue outer;
                            }
                            state = 42;
                            continue outer;
                        case  51 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 54;
                                eatText11(v);
                                continue outer;
                            }
                            break;
                        case  57 :
                            if (("role-ref" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 58;
                                return ;
                            }
                            state = 60;
                            continue outer;
                        case  60 :
                            if (("role-ref" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 58;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "city");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText12(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "account_locked");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText13(v);
                                continue outer;
                            }
                            break;
                        case  45 :
                            attIdx = context.getAttribute("", "province");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 48;
                                eatText14(v);
                                continue outer;
                            }
                            state = 48;
                            continue outer;
                        case  36 :
                            attIdx = context.getAttribute("", "password_hint");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 39;
                                eatText15(v);
                                continue outer;
                            }
                            state = 39;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "account_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText16(v);
                                continue outer;
                            }
                            break;
                        case  54 :
                            attIdx = context.getAttribute("", "website");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 57;
                                eatText17(v);
                                continue outer;
                            }
                            state = 57;
                            continue outer;
                        case  27 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 30;
                                eatText18(v);
                                continue outer;
                            }
                            break;
                        case  48 :
                            attIdx = context.getAttribute("", "username");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 51;
                                eatText19(v);
                                continue outer;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _LastName = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _FirstName = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _CredentialsExpired = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_CredentialsExpired = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Password = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PostalCode = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Address = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText7(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Country = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText8(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AccountEnabled = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_AccountEnabled = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText9(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Email = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText10(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PhoneNumber = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText11(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Version = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Version = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText12(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _City = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText13(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AccountLocked = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_AccountLocked = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText14(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Province = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText15(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PasswordHint = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText16(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AccountExpired = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_AccountExpired = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText17(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Website = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText18(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Id = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Id = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText19(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Username = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  30 :
                            attIdx = context.getAttribute("", "last_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 33;
                                eatText1(v);
                                continue outer;
                            }
                            state = 33;
                            continue outer;
                        case  24 :
                            attIdx = context.getAttribute("", "first_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 27;
                                eatText2(v);
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "credentials_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  33 :
                            attIdx = context.getAttribute("", "password");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 36;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  42 :
                            attIdx = context.getAttribute("", "postal_code");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 45;
                                eatText5(v);
                                continue outer;
                            }
                            state = 45;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "address");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText6(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "country");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText7(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "account_enabled");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText8(v);
                                continue outer;
                            }
                            break;
                        case  21 :
                            attIdx = context.getAttribute("", "email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 24;
                                eatText9(v);
                                continue outer;
                            }
                            state = 24;
                            continue outer;
                        case  39 :
                            attIdx = context.getAttribute("", "phone_number");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 42;
                                eatText10(v);
                                continue outer;
                            }
                            state = 42;
                            continue outer;
                        case  51 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 54;
                                eatText11(v);
                                continue outer;
                            }
                            break;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  60 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  59 :
                            if (("role-ref" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                                context.popAttributes();
                                state = 60;
                                return ;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "city");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText12(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "account_locked");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText13(v);
                                continue outer;
                            }
                            break;
                        case  45 :
                            attIdx = context.getAttribute("", "province");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 48;
                                eatText14(v);
                                continue outer;
                            }
                            state = 48;
                            continue outer;
                        case  36 :
                            attIdx = context.getAttribute("", "password_hint");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 39;
                                eatText15(v);
                                continue outer;
                            }
                            state = 39;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "account_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText16(v);
                                continue outer;
                            }
                            break;
                        case  54 :
                            attIdx = context.getAttribute("", "website");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 57;
                                eatText17(v);
                                continue outer;
                            }
                            state = 57;
                            continue outer;
                        case  27 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 30;
                                eatText18(v);
                                continue outer;
                            }
                            break;
                        case  48 :
                            attIdx = context.getAttribute("", "username");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 51;
                                eatText19(v);
                                continue outer;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  30 :
                            if (("last_name" == ___local)&&("" == ___uri)) {
                                state = 31;
                                return ;
                            }
                            state = 33;
                            continue outer;
                        case  24 :
                            if (("first_name" == ___local)&&("" == ___uri)) {
                                state = 25;
                                return ;
                            }
                            state = 27;
                            continue outer;
                        case  18 :
                            if (("credentials_expired" == ___local)&&("" == ___uri)) {
                                state = 19;
                                return ;
                            }
                            break;
                        case  33 :
                            if (("password" == ___local)&&("" == ___uri)) {
                                state = 34;
                                return ;
                            }
                            break;
                        case  42 :
                            if (("postal_code" == ___local)&&("" == ___uri)) {
                                state = 43;
                                return ;
                            }
                            state = 45;
                            continue outer;
                        case  9 :
                            if (("address" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  15 :
                            if (("country" == ___local)&&("" == ___uri)) {
                                state = 16;
                                return ;
                            }
                            state = 18;
                            continue outer;
                        case  0 :
                            if (("account_enabled" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  21 :
                            if (("email" == ___local)&&("" == ___uri)) {
                                state = 22;
                                return ;
                            }
                            state = 24;
                            continue outer;
                        case  39 :
                            if (("phone_number" == ___local)&&("" == ___uri)) {
                                state = 40;
                                return ;
                            }
                            state = 42;
                            continue outer;
                        case  51 :
                            if (("version" == ___local)&&("" == ___uri)) {
                                state = 52;
                                return ;
                            }
                            break;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  60 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            if (("city" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            state = 15;
                            continue outer;
                        case  6 :
                            if (("account_locked" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            break;
                        case  45 :
                            if (("province" == ___local)&&("" == ___uri)) {
                                state = 46;
                                return ;
                            }
                            state = 48;
                            continue outer;
                        case  36 :
                            if (("password_hint" == ___local)&&("" == ___uri)) {
                                state = 37;
                                return ;
                            }
                            state = 39;
                            continue outer;
                        case  3 :
                            if (("account_expired" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  54 :
                            if (("website" == ___local)&&("" == ___uri)) {
                                state = 55;
                                return ;
                            }
                            state = 57;
                            continue outer;
                        case  27 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 28;
                                return ;
                            }
                            break;
                        case  48 :
                            if (("username" == ___local)&&("" == ___uri)) {
                                state = 49;
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  53 :
                            if (("version" == ___local)&&("" == ___uri)) {
                                state = 54;
                                return ;
                            }
                            break;
                        case  8 :
                            if (("account_locked" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  17 :
                            if (("country" == ___local)&&("" == ___uri)) {
                                state = 18;
                                return ;
                            }
                            break;
                        case  32 :
                            if (("last_name" == ___local)&&("" == ___uri)) {
                                state = 33;
                                return ;
                            }
                            break;
                        case  30 :
                            attIdx = context.getAttribute("", "last_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 33;
                                eatText1(v);
                                continue outer;
                            }
                            state = 33;
                            continue outer;
                        case  20 :
                            if (("credentials_expired" == ___local)&&("" == ___uri)) {
                                state = 21;
                                return ;
                            }
                            break;
                        case  24 :
                            attIdx = context.getAttribute("", "first_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 27;
                                eatText2(v);
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "credentials_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  44 :
                            if (("postal_code" == ___local)&&("" == ___uri)) {
                                state = 45;
                                return ;
                            }
                            break;
                        case  33 :
                            attIdx = context.getAttribute("", "password");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 36;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  38 :
                            if (("password_hint" == ___local)&&("" == ___uri)) {
                                state = 39;
                                return ;
                            }
                            break;
                        case  42 :
                            attIdx = context.getAttribute("", "postal_code");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 45;
                                eatText5(v);
                                continue outer;
                            }
                            state = 45;
                            continue outer;
                        case  5 :
                            if (("account_expired" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "address");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText6(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  11 :
                            if (("address" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                        case  23 :
                            if (("email" == ___local)&&("" == ___uri)) {
                                state = 24;
                                return ;
                            }
                            break;
                        case  26 :
                            if (("first_name" == ___local)&&("" == ___uri)) {
                                state = 27;
                                return ;
                            }
                            break;
                        case  47 :
                            if (("province" == ___local)&&("" == ___uri)) {
                                state = 48;
                                return ;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "country");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText7(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  14 :
                            if (("city" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  29 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 30;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "account_enabled");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText8(v);
                                continue outer;
                            }
                            break;
                        case  21 :
                            attIdx = context.getAttribute("", "email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 24;
                                eatText9(v);
                                continue outer;
                            }
                            state = 24;
                            continue outer;
                        case  39 :
                            attIdx = context.getAttribute("", "phone_number");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 42;
                                eatText10(v);
                                continue outer;
                            }
                            state = 42;
                            continue outer;
                        case  51 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 54;
                                eatText11(v);
                                continue outer;
                            }
                            break;
                        case  56 :
                            if (("website" == ___local)&&("" == ___uri)) {
                                state = 57;
                                return ;
                            }
                            break;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  60 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "city");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText12(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "account_locked");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText13(v);
                                continue outer;
                            }
                            break;
                        case  41 :
                            if (("phone_number" == ___local)&&("" == ___uri)) {
                                state = 42;
                                return ;
                            }
                            break;
                        case  50 :
                            if (("username" == ___local)&&("" == ___uri)) {
                                state = 51;
                                return ;
                            }
                            break;
                        case  35 :
                            if (("password" == ___local)&&("" == ___uri)) {
                                state = 36;
                                return ;
                            }
                            break;
                        case  45 :
                            attIdx = context.getAttribute("", "province");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 48;
                                eatText14(v);
                                continue outer;
                            }
                            state = 48;
                            continue outer;
                        case  36 :
                            attIdx = context.getAttribute("", "password_hint");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 39;
                                eatText15(v);
                                continue outer;
                            }
                            state = 39;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "account_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText16(v);
                                continue outer;
                            }
                            break;
                        case  2 :
                            if (("account_enabled" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  54 :
                            attIdx = context.getAttribute("", "website");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 57;
                                eatText17(v);
                                continue outer;
                            }
                            state = 57;
                            continue outer;
                        case  27 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 30;
                                eatText18(v);
                                continue outer;
                            }
                            break;
                        case  48 :
                            attIdx = context.getAttribute("", "username");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 51;
                                eatText19(v);
                                continue outer;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  37 :
                                state = 38;
                                eatText15(value);
                                return ;
                            case  25 :
                                state = 26;
                                eatText2(value);
                                return ;
                            case  34 :
                                state = 35;
                                eatText4(value);
                                return ;
                            case  30 :
                                attIdx = context.getAttribute("", "last_name");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 33;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 33;
                                continue outer;
                            case  1 :
                                state = 2;
                                eatText8(value);
                                return ;
                            case  19 :
                                state = 20;
                                eatText3(value);
                                return ;
                            case  24 :
                                attIdx = context.getAttribute("", "first_name");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 27;
                                    eatText2(v);
                                    continue outer;
                                }
                                state = 27;
                                continue outer;
                            case  22 :
                                state = 23;
                                eatText9(value);
                                return ;
                            case  18 :
                                attIdx = context.getAttribute("", "credentials_expired");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 21;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                            case  10 :
                                state = 11;
                                eatText6(value);
                                return ;
                            case  33 :
                                attIdx = context.getAttribute("", "password");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 36;
                                    eatText4(v);
                                    continue outer;
                                }
                                break;
                            case  55 :
                                state = 56;
                                eatText17(value);
                                return ;
                            case  42 :
                                attIdx = context.getAttribute("", "postal_code");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 45;
                                    eatText5(v);
                                    continue outer;
                                }
                                state = 45;
                                continue outer;
                            case  49 :
                                state = 50;
                                eatText19(value);
                                return ;
                            case  9 :
                                attIdx = context.getAttribute("", "address");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText6(v);
                                    continue outer;
                                }
                                state = 12;
                                continue outer;
                            case  52 :
                                state = 53;
                                eatText11(value);
                                return ;
                            case  28 :
                                state = 29;
                                eatText18(value);
                                return ;
                            case  15 :
                                attIdx = context.getAttribute("", "country");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 18;
                                    eatText7(v);
                                    continue outer;
                                }
                                state = 18;
                                continue outer;
                            case  46 :
                                state = 47;
                                eatText14(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "account_enabled");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText8(v);
                                    continue outer;
                                }
                                break;
                            case  21 :
                                attIdx = context.getAttribute("", "email");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 24;
                                    eatText9(v);
                                    continue outer;
                                }
                                state = 24;
                                continue outer;
                            case  39 :
                                attIdx = context.getAttribute("", "phone_number");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 42;
                                    eatText10(v);
                                    continue outer;
                                }
                                state = 42;
                                continue outer;
                            case  51 :
                                attIdx = context.getAttribute("", "version");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 54;
                                    eatText11(v);
                                    continue outer;
                                }
                                break;
                            case  31 :
                                state = 32;
                                eatText1(value);
                                return ;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  40 :
                                state = 41;
                                eatText10(value);
                                return ;
                            case  43 :
                                state = 44;
                                eatText5(value);
                                return ;
                            case  58 :
                                state = 59;
                                eatText20(value);
                                return ;
                            case  60 :
                                revertToParentFromText(value);
                                return ;
                            case  12 :
                                attIdx = context.getAttribute("", "city");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 15;
                                    eatText12(v);
                                    continue outer;
                                }
                                state = 15;
                                continue outer;
                            case  6 :
                                attIdx = context.getAttribute("", "account_locked");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText13(v);
                                    continue outer;
                                }
                                break;
                            case  13 :
                                state = 14;
                                eatText12(value);
                                return ;
                            case  7 :
                                state = 8;
                                eatText13(value);
                                return ;
                            case  45 :
                                attIdx = context.getAttribute("", "province");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 48;
                                    eatText14(v);
                                    continue outer;
                                }
                                state = 48;
                                continue outer;
                            case  36 :
                                attIdx = context.getAttribute("", "password_hint");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 39;
                                    eatText15(v);
                                    continue outer;
                                }
                                state = 39;
                                continue outer;
                            case  4 :
                                state = 5;
                                eatText16(value);
                                return ;
                            case  16 :
                                state = 17;
                                eatText7(value);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "account_expired");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText16(v);
                                    continue outer;
                                }
                                break;
                            case  54 :
                                attIdx = context.getAttribute("", "website");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 57;
                                    eatText17(v);
                                    continue outer;
                                }
                                state = 57;
                                continue outer;
                            case  27 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 30;
                                    eatText18(v);
                                    continue outer;
                                }
                                break;
                            case  48 :
                                attIdx = context.getAttribute("", "username");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 51;
                                    eatText19(v);
                                    continue outer;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText20(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _getRoleRef().add(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

}
