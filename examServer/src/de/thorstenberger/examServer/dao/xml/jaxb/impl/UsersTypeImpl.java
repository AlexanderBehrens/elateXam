//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.10.02 at 04:23:47 CEST 
//


package de.thorstenberger.examServer.dao.xml.jaxb.impl;

public class UsersTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.UsersType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _User = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected boolean has_IdCount;
    protected long _IdCount;
    public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.UsersType.class);
    }

    public java.util.List getUser() {
        return _User;
    }

    public long getIdCount() {
        return _IdCount;
    }

    public void setIdCount(long value) {
        _IdCount = value;
        has_IdCount = true;
    }

    public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
        return new de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _User.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            context.startElement("http://examServer.thorstenberger.de/users", "user");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _User.get(idx_0 ++)), "User");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _User.get(idx_1 ++)), "User");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _User.get(idx1 ++)), "User");
            context.endElement();
        }
    }

    public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _User.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        context.startAttribute("", "IdCount");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _IdCount)), "IdCount");
        } catch (java.lang.Exception e) {
            de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _User.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.UsersType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0005\u00fbeDppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00ccARppsr\u0000 com.sun.msv.grammar"
+".OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00ccAGsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00ccADq\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000\u0003\u00ccA9ppsq\u0000~\u0000"
+"\r\u0001\n;Fpp\u0000sq\u0000~\u0000\u0006\u0001\n;;ppsq\u0000~\u0000\b\u0001\n;0q\u0000~\u0000\fpsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003\u0001\n;"
+"-q\u0000~\u0000\fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000b\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.An"
+"yNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019psr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000<de.thorstenberger.examServer.dao.xml.jaxb."
+"UsersType.UserTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elem"
+"entssq\u0000~\u0000\u0006\u0002\u00c2\u0005\u00eeppsq\u0000~\u0000\u0015\u0002\u00c2\u0005\u00e3q\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.grammar.Data"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
+"ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001|\u00e4\u00f7ppsr"
+"\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.m"
+"sv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv."
+"datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype"
+".xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNam"
+"eq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePr"
+"ocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L"
+"\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typ"
+"et\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004u"
+"sert\u0000)http://examServer.thorstenberger.de/usersq\u0000~\u0000\u001esq\u0000~\u0000\u0015\u0002/"
+"#\u00edppsq\u0000~\u0000&\u0001\u0082r\u0094ppsr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002"
+"\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;x"
+"q\u0000~\u0000+q\u0000~\u00000t\u0000\u0004longq\u0000~\u00004sr\u0000*com.sun.msv.datatype.xsd.MaxInclus"
+"iveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.d"
+"atatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*c"
+"om.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFac"
+"etFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000CL\u0000\fconcreteTypet"
+"\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000 xq"
+"\u0000~\u0000-ppq\u0000~\u00004\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gppq\u0000~\u00004\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Intege"
+"rType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u00000t\u0000\u0007integerq\u0000~\u00004sr\u0000,com.sun.msv.da"
+"tatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun"
+".msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea"
+"\u0002\u0000\u0000xq\u0000~\u0000Jppq\u0000~\u00004\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000~\u00000t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0000Vt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000"
+"q\u0000~\u0000Pt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000"
+"\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Pt\u0000\fmaxInclusivesq"
+"\u0000~\u0000Z\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u00006sq\u0000~\u00007q\u0000~\u0000Eq\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0007IdCountt\u0000\u0000sr\u0000\"com."
+"sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/"
+"sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv."
+"grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthres"
+"holdL\u0000\u0006parentq\u0000~\u0000d[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expressio"
+"n;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000"
+"\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppq\u0000~\u0000\u0014ppppppppppq\u0000~\u0000\u0013ppppppppq\u0000~\u0000\u0011ppppppp"
+"ppppppq\u0000~\u0000\nppppppppppq\u0000~\u0000\u0007pppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppq\u0000~\u0000$pppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "IdCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  6 :
                        if (("user" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("user" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "country");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IdCount = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IdCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "IdCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "country");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("user" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("IdCount" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  4 :
                        if (("country" == ___local)&&("" == ___uri)) {
                            _User.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("version" == ___local)&&("" == ___uri)) {
                            _User.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("IdCount" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "IdCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "country");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "IdCount");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "country");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

    public static class UserTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.UsersType.UserType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
    {

        protected java.lang.String _PostalCode;
        protected java.lang.String _Website;
        protected boolean has_AccountEnabled;
        protected boolean _AccountEnabled;
        protected java.lang.String _City;
        protected boolean has_AccountLocked;
        protected boolean _AccountLocked;
        protected java.lang.String _Password;
        protected java.lang.String _Email;
        protected java.lang.String _PhoneNumber;
        protected boolean has_Version;
        protected int _Version;
        protected java.lang.String _FirstName;
        protected java.lang.String _PasswordHint;
        protected java.lang.String _Address;
        protected java.lang.String _Country;
        protected com.sun.xml.bind.util.ListImpl _RoleRef = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected boolean has_CredentialsExpired;
        protected boolean _CredentialsExpired;
        protected boolean has_AccountExpired;
        protected boolean _AccountExpired;
        protected boolean has_Id;
        protected long _Id;
        protected java.lang.String _Username;
        protected java.lang.String _Province;
        protected java.lang.String _LastName;
        public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.UsersType.UserType.class);
        }

        public java.lang.String getPostalCode() {
            return _PostalCode;
        }

        public void setPostalCode(java.lang.String value) {
            _PostalCode = value;
        }

        public java.lang.String getWebsite() {
            return _Website;
        }

        public void setWebsite(java.lang.String value) {
            _Website = value;
        }

        public boolean isAccountEnabled() {
            return _AccountEnabled;
        }

        public void setAccountEnabled(boolean value) {
            _AccountEnabled = value;
            has_AccountEnabled = true;
        }

        public java.lang.String getCity() {
            return _City;
        }

        public void setCity(java.lang.String value) {
            _City = value;
        }

        public boolean isAccountLocked() {
            return _AccountLocked;
        }

        public void setAccountLocked(boolean value) {
            _AccountLocked = value;
            has_AccountLocked = true;
        }

        public java.lang.String getPassword() {
            return _Password;
        }

        public void setPassword(java.lang.String value) {
            _Password = value;
        }

        public java.lang.String getEmail() {
            return _Email;
        }

        public void setEmail(java.lang.String value) {
            _Email = value;
        }

        public java.lang.String getPhoneNumber() {
            return _PhoneNumber;
        }

        public void setPhoneNumber(java.lang.String value) {
            _PhoneNumber = value;
        }

        public int getVersion() {
            return _Version;
        }

        public void setVersion(int value) {
            _Version = value;
            has_Version = true;
        }

        public java.lang.String getFirstName() {
            return _FirstName;
        }

        public void setFirstName(java.lang.String value) {
            _FirstName = value;
        }

        public java.lang.String getPasswordHint() {
            return _PasswordHint;
        }

        public void setPasswordHint(java.lang.String value) {
            _PasswordHint = value;
        }

        public java.lang.String getAddress() {
            return _Address;
        }

        public void setAddress(java.lang.String value) {
            _Address = value;
        }

        public java.lang.String getCountry() {
            return _Country;
        }

        public void setCountry(java.lang.String value) {
            _Country = value;
        }

        public java.util.List getRoleRef() {
            return _RoleRef;
        }

        public boolean isCredentialsExpired() {
            return _CredentialsExpired;
        }

        public void setCredentialsExpired(boolean value) {
            _CredentialsExpired = value;
            has_CredentialsExpired = true;
        }

        public boolean isAccountExpired() {
            return _AccountExpired;
        }

        public void setAccountExpired(boolean value) {
            _AccountExpired = value;
            has_AccountExpired = true;
        }

        public long getId() {
            return _Id;
        }

        public void setId(long value) {
            _Id = value;
            has_Id = true;
        }

        public java.lang.String getUsername() {
            return _Username;
        }

        public void setUsername(java.lang.String value) {
            _Username = value;
        }

        public java.lang.String getProvince() {
            return _Province;
        }

        public void setProvince(java.lang.String value) {
            _Province = value;
        }

        public java.lang.String getLastName() {
            return _LastName;
        }

        public void setLastName(java.lang.String value) {
            _LastName = value;
        }

        public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            return new de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_AccountEnabled) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountEnabled"));
            }
            if (!has_AccountLocked) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountLocked"));
            }
            if (!has_Version) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Version"));
            }
            int idx14 = 0;
            final int len14 = _RoleRef.size();
            if (!has_CredentialsExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "CredentialsExpired"));
            }
            if (!has_AccountExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountExpired"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            while (idx14 != len14) {
                context.startElement("http://examServer.thorstenberger.de/users", "role-ref");
                int idx_0 = idx14;
                try {
                    idx_0 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endNamespaceDecls();
                int idx_1 = idx14;
                try {
                    idx_1 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _RoleRef.get(idx14 ++)), "RoleRef");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }

        public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_AccountEnabled) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountEnabled"));
            }
            if (!has_AccountLocked) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountLocked"));
            }
            if (!has_Version) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Version"));
            }
            int idx14 = 0;
            final int len14 = _RoleRef.size();
            if (!has_CredentialsExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "CredentialsExpired"));
            }
            if (!has_AccountExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountExpired"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            if (_Country!= null) {
                context.startAttribute("", "country");
                try {
                    context.text(((java.lang.String) _Country), "Country");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "version");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Version)), "Version");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Website!= null) {
                context.startAttribute("", "website");
                try {
                    context.text(((java.lang.String) _Website), "Website");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_PhoneNumber!= null) {
                context.startAttribute("", "phone_number");
                try {
                    context.text(((java.lang.String) _PhoneNumber), "PhoneNumber");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "account_enabled");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AccountEnabled)), "AccountEnabled");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_City!= null) {
                context.startAttribute("", "city");
                try {
                    context.text(((java.lang.String) _City), "City");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_LastName!= null) {
                context.startAttribute("", "last_name");
                try {
                    context.text(((java.lang.String) _LastName), "LastName");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "account_expired");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AccountExpired)), "AccountExpired");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Address!= null) {
                context.startAttribute("", "address");
                try {
                    context.text(((java.lang.String) _Address), "Address");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_PostalCode!= null) {
                context.startAttribute("", "postal_code");
                try {
                    context.text(((java.lang.String) _PostalCode), "PostalCode");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "id");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Id)), "Id");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Email!= null) {
                context.startAttribute("", "email");
                try {
                    context.text(((java.lang.String) _Email), "Email");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "account_locked");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AccountLocked)), "AccountLocked");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "password");
            try {
                context.text(((java.lang.String) _Password), "Password");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Province!= null) {
                context.startAttribute("", "province");
                try {
                    context.text(((java.lang.String) _Province), "Province");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "credentials_expired");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CredentialsExpired)), "CredentialsExpired");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_PasswordHint!= null) {
                context.startAttribute("", "password_hint");
                try {
                    context.text(((java.lang.String) _PasswordHint), "PasswordHint");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "username");
            try {
                context.text(((java.lang.String) _Username), "Username");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_FirstName!= null) {
                context.startAttribute("", "first_name");
                try {
                    context.text(((java.lang.String) _FirstName), "FirstName");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            while (idx14 != len14) {
                try {
                    idx14 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        }

        public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_AccountEnabled) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountEnabled"));
            }
            if (!has_AccountLocked) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountLocked"));
            }
            if (!has_Version) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Version"));
            }
            int idx14 = 0;
            final int len14 = _RoleRef.size();
            if (!has_CredentialsExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "CredentialsExpired"));
            }
            if (!has_AccountExpired) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AccountExpired"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            while (idx14 != len14) {
                try {
                    idx14 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.UsersType.UserType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp,\u00b3.8ppsq\u0000~\u0000\u0000)\u00d3\u00faKppsq\u0000~\u0000\u0000\'"
+">\u0016vppsq\u0000~\u0000\u0000%\u00b0a\u00a4ppsq\u0000~\u0000\u0000$\u0093L\u001appsq\u0000~\u0000\u0000\"Y\u00ee\u00e1ppsq\u0000~\u0000\u0000 \u0098\u00b00ppsq\u0000~\u0000\u0000\u001f"
+"#\u00a7%ppsq\u0000~\u0000\u0000\u001c\u0017\u0091Ippsq\u0000~\u0000\u0000\u001a-x\u009cppsq\u0000~\u0000\u0000\u0017T\u00a3&ppsq\u0000~\u0000\u0000\u0015|i\u00ccppsq\u0000~\u0000\u0000\u0013"
+"\u00e8l\u00f9ppsq\u0000~\u0000\u0000\u0010\u00fc\u0089\u00d2ppsq\u0000~\u0000\u0000\u000f\u0014\u0098\u0013ppsq\u0000~\u0000\u0000\ru\u00f9Gppsq\u0000~\u0000\u0000\nu\u00f3\rppsq\u0000~\u0000\u0000\u0007"
+"\u00ac\u0092\u00f3ppsq\u0000~\u0000\u0000\u0006Uu\u00abppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0001\u0003?\u00f0%ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003"
+"\u0003?\u00f0\u001asr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun."
+"msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLco"
+"m/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~"
+"\u0000\u0002xq\u0000~\u0000\u0003\u0003?\u00f0\u0017q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0003?\u00f0\fppsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001Wn\u0080ppsr\u0000"
+"#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysVa"
+"lidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"it\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000,L\u0000\nwhiteSpacet\u0000.Lcom/s"
+"un/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.o"
+"rg/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar."
+"Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.s"
+"un.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000,L\u0000\fnamespa"
+"ceURIq\u0000~\u0000,xpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u0018\u0001\u00e8\u0081\u0087ppsr\u0000 com.sun.msv.grammar.At"
+"tributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000 xq\u0000~\u0000\u0003\u0001\u00e8\u0081|q"
+"\u0000~\u0000\u001epsq\u0000~\u0000$\u0001|\u00e4\u00f7ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00002q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000>q\u0000~\u0000/"
+"sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000,L\u0000\fnamespaceURIq\u0000~\u0000,xr\u0000\u001dcom.sun.msv.grammar.NameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"
+"ancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u001d\u0001psq\u0000~\u0000Bt\u0000\brole-reft\u0000)http://examServ"
+"er.thorstenberger.de/usersq\u0000~\u0000Hsq\u0000~\u0000\u0018\u0003\u0015\u0085\u0081ppsq\u0000~\u00009\u0003\u0015\u0085vq\u0000~\u0000\u001epq"
+"\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u0007countryt\u0000\u0000q\u0000~\u0000Hsq\u0000~\u00009\u0001W\u001dCppsq\u0000~\u0000$\u0000\u0081\u00b2\u000bppsr\u0000 com."
+"sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datat"
+"ype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/su"
+"n/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0003intq\u0000~\u0000@sr\u0000*"
+"com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com"
+".sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012L"
+"java/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithVa"
+"lueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Da"
+"taTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFl"
+"agL\u0000\bbaseTypeq\u0000~\u0000VL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xs"
+"d/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000,xq\u0000~\u0000+ppq\u0000~\u0000@\u0000\u0001sr\u0000*com.sun.m"
+"sv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Zppq\u0000~\u0000@\u0000\u0000s"
+"r\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Uq\u0000~\u0000/t\u0000"
+"\u0004longq\u0000~\u0000@sq\u0000~\u0000Yppq\u0000~\u0000@\u0000\u0001sq\u0000~\u0000`ppq\u0000~\u0000@\u0000\u0000sr\u0000$com.sun.msv.data"
+"type.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Uq\u0000~\u0000/t\u0000\u0007integerq\u0000~\u0000@sr\u0000"
+",com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005s"
+"calexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstrai"
+"ntFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000]ppq\u0000~\u0000@\u0001\u0000sr\u0000#com.sun.msv.datatype.xs"
+"d.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0007decimalq\u0000~\u0000@q\u0000~\u0000nt\u0000\u000efra"
+"ctionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000ht\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#"
+"\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000ht\u0000"
+"\fmaxInclusivesq\u0000~\u0000r\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000cq\u0000~\u0000qsr\u0000\u0011java.lang.Integer\u0012\u00e2"
+"\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000s\u0080\u0000\u0000\u0000q\u0000~\u0000cq\u0000~\u0000usq\u0000~\u0000w\u007f\u00ff\u00ff\u00ffq\u0000~\u00005sq\u0000~\u00006q\u0000"
+"~\u0000Xq\u0000~\u0000/sq\u0000~\u0000Bt\u0000\u0007versionq\u0000~\u0000Qsq\u0000~\u0000\u0018\u0002\u00c9`\u0015ppsq\u0000~\u00009\u0002\u00c9`\nq\u0000~\u0000\u001epq\u0000~"
+"\u0000\'sq\u0000~\u0000Bt\u0000\u0007websiteq\u0000~\u0000Qq\u0000~\u0000Hsq\u0000~\u0000\u0018\u0003\u0000\u00065ppsq\u0000~\u00009\u0003\u0000\u0006*q\u0000~\u0000\u001epq\u0000~\u0000"
+"\'sq\u0000~\u0000Bt\u0000\fphone_numberq\u0000~\u0000Qq\u0000~\u0000Hsq\u0000~\u00009\u0001\u009e\u009e\u00c7ppsq\u0000~\u0000$\u0000!\u00b20ppsr\u0000$"
+"com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000"
+"\u0007booleanq\u0000~\u0000@q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000\u0089q\u0000~\u0000/sq\u0000~\u0000Bt\u0000\u000faccount_enabledq\u0000"
+"~\u0000Qsq\u0000~\u0000\u0018\u0001\u00e7\u00f1\u00bappsq\u0000~\u00009\u0001\u00e7\u00f1\u00afq\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u0004cityq\u0000~\u0000Qq\u0000~\u0000Hs"
+"q\u0000~\u0000\u0018\u0002\u00eb\u00e3\"ppsq\u0000~\u00009\u0002\u00eb\u00e3\u0017q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\tlast_nameq\u0000~\u0000Qq\u0000~\u0000H"
+"sq\u0000~\u00009\u0001\u0093\u00fc\u00ceppq\u0000~\u0000\u0086sq\u0000~\u0000Bt\u0000\u000faccount_expiredq\u0000~\u0000Qsq\u0000~\u0000\u0018\u0001\u00d89Uppsq"
+"\u0000~\u00009\u0001\u00d89Jq\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u0007addressq\u0000~\u0000Qq\u0000~\u0000Hsq\u0000~\u0000\u0018\u0002\u00d8\u00d5qppsq\u0000"
+"~\u00009\u0002\u00d8\u00d5fq\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\u000bpostal_codeq\u0000~\u0000Qq\u0000~\u0000Hsq\u0000~\u00009\u0001\u00ea\u0018\u00a8pp"
+"sq\u0000~\u0000$\u0001_\u00c4\u001cppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\bbaseTypeq\u0000~\u0000Vxq\u0000~\u0000+q\u0000~\u0000Lpq\u0000~\u0000@q\u0000~\u0000c\u0000\u0000\u0000\u0000q\u0000~\u00005sq\u0000~\u00006q\u0000~"
+"\u0000dq\u0000~\u0000Lsq\u0000~\u0000Bt\u0000\u0002idq\u0000~\u0000Qsq\u0000~\u0000\u0018\u0003\f\u0015\u00d7ppsq\u0000~\u00009\u0003\f\u0015\u00ccq\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~"
+"\u0000Bt\u0000\u0005emailq\u0000~\u0000Qq\u0000~\u0000Hsq\u0000~\u00009\u0001u\t\u0006ppq\u0000~\u0000\u0086sq\u0000~\u0000Bt\u0000\u000eaccount_locked"
+"q\u0000~\u0000Qsq\u0000~\u00009\u0001\u00c1>\u00acppq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\bpasswordq\u0000~\u0000Qsq\u0000~\u0000\u0018\u00029]4ppsq\u0000~"
+"\u00009\u00029])q\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\bprovinceq\u0000~\u0000Qq\u0000~\u0000Hsq\u0000~\u00009\u0001\u001d\u0015\u0085ppq\u0000~\u0000"
+"\u0086sq\u0000~\u0000Bt\u0000\u0013credentials_expiredq\u0000~\u0000Qsq\u0000~\u0000\u0018\u0001\u008d\u00b4\u00cdppsq\u0000~\u00009\u0001\u008d\u00b4\u00c2q\u0000~\u0000"
+"\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\rpassword_hintq\u0000~\u0000Qq\u0000~\u0000Hsq\u0000~\u00009\u0002\u0095\u00e3\u00d0ppq\u0000~\u0000\'sq\u0000~"
+"\u0000Bt\u0000\busernameq\u0000~\u0000Qsq\u0000~\u0000\u0018\u0002\u00df3\u00e8ppsq\u0000~\u00009\u0002\u00df3\u00ddq\u0000~\u0000\u001epq\u0000~\u0000\'sq\u0000~\u0000Bt\u0000\n"
+"first_nameq\u0000~\u0000Qq\u0000~\u0000Hsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$C"
+"losedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHas"
+"h\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00c5[\u0000\u0005tablet\u0000![Lc"
+"om/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\"\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.g"
+"rammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppq\u0000~\u0000\npppppppppppq\u0000~\u0000\u00c0p"
+"pppq\u0000~\u0000\u0010pppq\u0000~\u0000\u0015pq\u0000~\u0000\u00b9pppppppppppq\u0000~\u0000\u00a8pppppppppppppppppppq\u0000~"
+"\u0000\u0012ppppppppppppq\u0000~\u00008pq\u0000~\u0000\u0091ppppppppppq\u0000~\u0000\u00b2pppq\u0000~\u0000\u0016pppq\u0000~\u0000\tpppp"
+"ppppppppppppppq\u0000~\u0000\u000epppppppppq\u0000~\u0000\u008dq\u0000~\u0000}q\u0000~\u0000\u0013ppq\u0000~\u0000\rpq\u0000~\u0000\bpq\u0000~"
+"\u0000\u0098pppppq\u0000~\u0000\u0011pppppq\u0000~\u0000\u009cpppppppppq\u0000~\u0000\u0006q\u0000~\u0000\u0081q\u0000~\u0000#q\u0000~\u0000\u000fpppq\u0000~\u0000\u0007p"
+"pppppppq\u0000~\u0000\u001cq\u0000~\u0000\fppq\u0000~\u0000\u0005pq\u0000~\u0000\u0017pq\u0000~\u0000\u000bppq\u0000~\u0000\u0019pq\u0000~\u0000Mq\u0000~\u0000\u0014pppppp"
+"pp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------------------------------------------------------");
            }

            protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return de.thorstenberger.examServer.dao.xml.jaxb.impl.UsersTypeImpl.UserTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  33 :
                            attIdx = context.getAttribute("", "email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 36;
                                continue outer;
                            }
                            state = 36;
                            continue outer;
                        case  45 :
                            attIdx = context.getAttribute("", "credentials_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 48;
                                continue outer;
                            }
                            break;
                        case  42 :
                            attIdx = context.getAttribute("", "province");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 45;
                                continue outer;
                            }
                            state = 45;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "account_enabled");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 15;
                                continue outer;
                            }
                            break;
                        case  51 :
                            attIdx = context.getAttribute("", "username");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 54;
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "country");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "phone_number");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  39 :
                            attIdx = context.getAttribute("", "password");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 42;
                                continue outer;
                            }
                            break;
                        case  36 :
                            attIdx = context.getAttribute("", "account_locked");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 39;
                                continue outer;
                            }
                            break;
                        case  24 :
                            attIdx = context.getAttribute("", "address");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 27;
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  21 :
                            attIdx = context.getAttribute("", "account_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText11(v);
                                state = 24;
                                continue outer;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "city");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText12(v);
                                state = 18;
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "last_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText13(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  30 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText14(v);
                                state = 33;
                                continue outer;
                            }
                            break;
                        case  27 :
                            attIdx = context.getAttribute("", "postal_code");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText15(v);
                                state = 30;
                                continue outer;
                            }
                            state = 30;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText16(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  54 :
                            attIdx = context.getAttribute("", "first_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText17(v);
                                state = 57;
                                continue outer;
                            }
                            state = 57;
                            continue outer;
                        case  60 :
                            if (("role-ref" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 58;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  57 :
                            if (("role-ref" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 58;
                                return ;
                            }
                            state = 60;
                            continue outer;
                        case  48 :
                            attIdx = context.getAttribute("", "password_hint");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText18(v);
                                state = 51;
                                continue outer;
                            }
                            state = 51;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "website");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText19(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Email = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _CredentialsExpired = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_CredentialsExpired = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Province = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AccountEnabled = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_AccountEnabled = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Username = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Country = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText7(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PhoneNumber = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText8(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Password = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText9(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AccountLocked = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_AccountLocked = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText10(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Address = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText11(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AccountExpired = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_AccountExpired = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText12(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _City = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText13(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _LastName = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText14(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Id = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Id = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText15(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PostalCode = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText16(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Version = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Version = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText17(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _FirstName = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText18(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PasswordHint = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText19(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Website = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  33 :
                            attIdx = context.getAttribute("", "email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 36;
                                continue outer;
                            }
                            state = 36;
                            continue outer;
                        case  45 :
                            attIdx = context.getAttribute("", "credentials_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 48;
                                continue outer;
                            }
                            break;
                        case  42 :
                            attIdx = context.getAttribute("", "province");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 45;
                                continue outer;
                            }
                            state = 45;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "account_enabled");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 15;
                                continue outer;
                            }
                            break;
                        case  51 :
                            attIdx = context.getAttribute("", "username");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 54;
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "country");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "phone_number");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  39 :
                            attIdx = context.getAttribute("", "password");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 42;
                                continue outer;
                            }
                            break;
                        case  36 :
                            attIdx = context.getAttribute("", "account_locked");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 39;
                                continue outer;
                            }
                            break;
                        case  24 :
                            attIdx = context.getAttribute("", "address");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 27;
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  21 :
                            attIdx = context.getAttribute("", "account_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText11(v);
                                state = 24;
                                continue outer;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "city");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText12(v);
                                state = 18;
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "last_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText13(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  30 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText14(v);
                                state = 33;
                                continue outer;
                            }
                            break;
                        case  27 :
                            attIdx = context.getAttribute("", "postal_code");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText15(v);
                                state = 30;
                                continue outer;
                            }
                            state = 30;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText16(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  59 :
                            if (("role-ref" == ___local)&&("http://examServer.thorstenberger.de/users" == ___uri)) {
                                context.popAttributes();
                                state = 60;
                                return ;
                            }
                            break;
                        case  54 :
                            attIdx = context.getAttribute("", "first_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText17(v);
                                state = 57;
                                continue outer;
                            }
                            state = 57;
                            continue outer;
                        case  60 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  48 :
                            attIdx = context.getAttribute("", "password_hint");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText18(v);
                                state = 51;
                                continue outer;
                            }
                            state = 51;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "website");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText19(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  33 :
                            if (("email" == ___local)&&("" == ___uri)) {
                                state = 34;
                                return ;
                            }
                            state = 36;
                            continue outer;
                        case  45 :
                            if (("credentials_expired" == ___local)&&("" == ___uri)) {
                                state = 46;
                                return ;
                            }
                            break;
                        case  42 :
                            if (("province" == ___local)&&("" == ___uri)) {
                                state = 43;
                                return ;
                            }
                            state = 45;
                            continue outer;
                        case  12 :
                            if (("account_enabled" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            break;
                        case  51 :
                            if (("username" == ___local)&&("" == ___uri)) {
                                state = 52;
                                return ;
                            }
                            break;
                        case  0 :
                            if (("country" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  9 :
                            if (("phone_number" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  39 :
                            if (("password" == ___local)&&("" == ___uri)) {
                                state = 40;
                                return ;
                            }
                            break;
                        case  36 :
                            if (("account_locked" == ___local)&&("" == ___uri)) {
                                state = 37;
                                return ;
                            }
                            break;
                        case  24 :
                            if (("address" == ___local)&&("" == ___uri)) {
                                state = 25;
                                return ;
                            }
                            state = 27;
                            continue outer;
                        case  21 :
                            if (("account_expired" == ___local)&&("" == ___uri)) {
                                state = 22;
                                return ;
                            }
                            break;
                        case  15 :
                            if (("city" == ___local)&&("" == ___uri)) {
                                state = 16;
                                return ;
                            }
                            state = 18;
                            continue outer;
                        case  18 :
                            if (("last_name" == ___local)&&("" == ___uri)) {
                                state = 19;
                                return ;
                            }
                            state = 21;
                            continue outer;
                        case  30 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 31;
                                return ;
                            }
                            break;
                        case  27 :
                            if (("postal_code" == ___local)&&("" == ___uri)) {
                                state = 28;
                                return ;
                            }
                            state = 30;
                            continue outer;
                        case  3 :
                            if (("version" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  54 :
                            if (("first_name" == ___local)&&("" == ___uri)) {
                                state = 55;
                                return ;
                            }
                            state = 57;
                            continue outer;
                        case  60 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  48 :
                            if (("password_hint" == ___local)&&("" == ___uri)) {
                                state = 49;
                                return ;
                            }
                            state = 51;
                            continue outer;
                        case  6 :
                            if (("website" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  56 :
                            if (("first_name" == ___local)&&("" == ___uri)) {
                                state = 57;
                                return ;
                            }
                            break;
                        case  33 :
                            attIdx = context.getAttribute("", "email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 36;
                                continue outer;
                            }
                            state = 36;
                            continue outer;
                        case  45 :
                            attIdx = context.getAttribute("", "credentials_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 48;
                                continue outer;
                            }
                            break;
                        case  38 :
                            if (("account_locked" == ___local)&&("" == ___uri)) {
                                state = 39;
                                return ;
                            }
                            break;
                        case  42 :
                            attIdx = context.getAttribute("", "province");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 45;
                                continue outer;
                            }
                            state = 45;
                            continue outer;
                        case  14 :
                            if (("account_enabled" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  29 :
                            if (("postal_code" == ___local)&&("" == ___uri)) {
                                state = 30;
                                return ;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "account_enabled");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 15;
                                continue outer;
                            }
                            break;
                        case  8 :
                            if (("website" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  51 :
                            attIdx = context.getAttribute("", "username");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 54;
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "country");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  44 :
                            if (("province" == ___local)&&("" == ___uri)) {
                                state = 45;
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "phone_number");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  39 :
                            attIdx = context.getAttribute("", "password");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 42;
                                continue outer;
                            }
                            break;
                        case  36 :
                            attIdx = context.getAttribute("", "account_locked");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 39;
                                continue outer;
                            }
                            break;
                        case  24 :
                            attIdx = context.getAttribute("", "address");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 27;
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  23 :
                            if (("account_expired" == ___local)&&("" == ___uri)) {
                                state = 24;
                                return ;
                            }
                            break;
                        case  21 :
                            attIdx = context.getAttribute("", "account_expired");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText11(v);
                                state = 24;
                                continue outer;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "city");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText12(v);
                                state = 18;
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  20 :
                            if (("last_name" == ___local)&&("" == ___uri)) {
                                state = 21;
                                return ;
                            }
                            break;
                        case  18 :
                            attIdx = context.getAttribute("", "last_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText13(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  30 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText14(v);
                                state = 33;
                                continue outer;
                            }
                            break;
                        case  27 :
                            attIdx = context.getAttribute("", "postal_code");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText15(v);
                                state = 30;
                                continue outer;
                            }
                            state = 30;
                            continue outer;
                        case  11 :
                            if (("phone_number" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                        case  32 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 33;
                                return ;
                            }
                            break;
                        case  17 :
                            if (("city" == ___local)&&("" == ___uri)) {
                                state = 18;
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText16(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  54 :
                            attIdx = context.getAttribute("", "first_name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText17(v);
                                state = 57;
                                continue outer;
                            }
                            state = 57;
                            continue outer;
                        case  41 :
                            if (("password" == ___local)&&("" == ___uri)) {
                                state = 42;
                                return ;
                            }
                            break;
                        case  26 :
                            if (("address" == ___local)&&("" == ___uri)) {
                                state = 27;
                                return ;
                            }
                            break;
                        case  60 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  47 :
                            if (("credentials_expired" == ___local)&&("" == ___uri)) {
                                state = 48;
                                return ;
                            }
                            break;
                        case  53 :
                            if (("username" == ___local)&&("" == ___uri)) {
                                state = 54;
                                return ;
                            }
                            break;
                        case  50 :
                            if (("password_hint" == ___local)&&("" == ___uri)) {
                                state = 51;
                                return ;
                            }
                            break;
                        case  35 :
                            if (("email" == ___local)&&("" == ___uri)) {
                                state = 36;
                                return ;
                            }
                            break;
                        case  48 :
                            attIdx = context.getAttribute("", "password_hint");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText18(v);
                                state = 51;
                                continue outer;
                            }
                            state = 51;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "website");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText19(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  5 :
                            if (("version" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("country" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  33 :
                                attIdx = context.getAttribute("", "email");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 36;
                                    continue outer;
                                }
                                state = 36;
                                continue outer;
                            case  45 :
                                attIdx = context.getAttribute("", "credentials_expired");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 48;
                                    continue outer;
                                }
                                break;
                            case  1 :
                                eatText6(value);
                                state = 2;
                                return ;
                            case  28 :
                                eatText15(value);
                                state = 29;
                                return ;
                            case  42 :
                                attIdx = context.getAttribute("", "province");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText3(v);
                                    state = 45;
                                    continue outer;
                                }
                                state = 45;
                                continue outer;
                            case  49 :
                                eatText18(value);
                                state = 50;
                                return ;
                            case  10 :
                                eatText7(value);
                                state = 11;
                                return ;
                            case  12 :
                                attIdx = context.getAttribute("", "account_enabled");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText4(v);
                                    state = 15;
                                    continue outer;
                                }
                                break;
                            case  51 :
                                attIdx = context.getAttribute("", "username");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText5(v);
                                    state = 54;
                                    continue outer;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "country");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText6(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  43 :
                                eatText3(value);
                                state = 44;
                                return ;
                            case  9 :
                                attIdx = context.getAttribute("", "phone_number");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText7(v);
                                    state = 12;
                                    continue outer;
                                }
                                state = 12;
                                continue outer;
                            case  39 :
                                attIdx = context.getAttribute("", "password");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText8(v);
                                    state = 42;
                                    continue outer;
                                }
                                break;
                            case  36 :
                                attIdx = context.getAttribute("", "account_locked");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText9(v);
                                    state = 39;
                                    continue outer;
                                }
                                break;
                            case  22 :
                                eatText11(value);
                                state = 23;
                                return ;
                            case  24 :
                                attIdx = context.getAttribute("", "address");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText10(v);
                                    state = 27;
                                    continue outer;
                                }
                                state = 27;
                                continue outer;
                            case  21 :
                                attIdx = context.getAttribute("", "account_expired");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText11(v);
                                    state = 24;
                                    continue outer;
                                }
                                break;
                            case  15 :
                                attIdx = context.getAttribute("", "city");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText12(v);
                                    state = 18;
                                    continue outer;
                                }
                                state = 18;
                                continue outer;
                            case  46 :
                                eatText2(value);
                                state = 47;
                                return ;
                            case  18 :
                                attIdx = context.getAttribute("", "last_name");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText13(v);
                                    state = 21;
                                    continue outer;
                                }
                                state = 21;
                                continue outer;
                            case  25 :
                                eatText10(value);
                                state = 26;
                                return ;
                            case  31 :
                                eatText14(value);
                                state = 32;
                                return ;
                            case  30 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText14(v);
                                    state = 33;
                                    continue outer;
                                }
                                break;
                            case  34 :
                                eatText1(value);
                                state = 35;
                                return ;
                            case  58 :
                                eatText20(value);
                                state = 59;
                                return ;
                            case  27 :
                                attIdx = context.getAttribute("", "postal_code");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText15(v);
                                    state = 30;
                                    continue outer;
                                }
                                state = 30;
                                continue outer;
                            case  3 :
                                attIdx = context.getAttribute("", "version");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText16(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  55 :
                                eatText17(value);
                                state = 56;
                                return ;
                            case  54 :
                                attIdx = context.getAttribute("", "first_name");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText17(v);
                                    state = 57;
                                    continue outer;
                                }
                                state = 57;
                                continue outer;
                            case  60 :
                                revertToParentFromText(value);
                                return ;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  4 :
                                eatText16(value);
                                state = 5;
                                return ;
                            case  16 :
                                eatText12(value);
                                state = 17;
                                return ;
                            case  37 :
                                eatText9(value);
                                state = 38;
                                return ;
                            case  19 :
                                eatText13(value);
                                state = 20;
                                return ;
                            case  13 :
                                eatText4(value);
                                state = 14;
                                return ;
                            case  48 :
                                attIdx = context.getAttribute("", "password_hint");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText18(v);
                                    state = 51;
                                    continue outer;
                                }
                                state = 51;
                                continue outer;
                            case  52 :
                                eatText5(value);
                                state = 53;
                                return ;
                            case  6 :
                                attIdx = context.getAttribute("", "website");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText19(v);
                                    state = 9;
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  40 :
                                eatText8(value);
                                state = 41;
                                return ;
                            case  7 :
                                eatText19(value);
                                state = 8;
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText20(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _RoleRef.add(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

}
