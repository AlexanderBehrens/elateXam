//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.05.23 at 01:04:11 CEST 
//


package de.thorstenberger.examServer.dao.xml.jaxb.impl;

public class TaskHandlingTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Tasklet = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected boolean has_IdCount;
    protected long _IdCount;
    public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.class);
    }

    public java.util.List getTasklet() {
        return _Tasklet;
    }

    public boolean isSetTasklet() {
        return _Tasklet.isModified();
    }

    public void unsetTasklet() {
        _Tasklet.clear();
        _Tasklet.setModified(false);
    }

    public long getIdCount() {
        return _IdCount;
    }

    public void setIdCount(long value) {
        _IdCount = value;
        has_IdCount = true;
    }

    public boolean isSetIdCount() {
        return has_IdCount;
    }

    public void unsetIdCount() {
        has_IdCount = false;
    }

    public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
        return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Tasklet.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            context.startElement("http://examServer.thorstenberger.de/taskHandling", "tasklet");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx_0 ++)), "Tasklet");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx_1 ++)), "Tasklet");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx1 ++)), "Tasklet");
            context.endElement();
        }
    }

    public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Tasklet.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        context.startAttribute("", "idCount");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _IdCount)), "IdCount");
        } catch (java.lang.Exception e) {
            de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Tasklet.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0005-\u00c9vppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00ebM\u00d7ppsr\u0000 com.sun.msv.grammar"
+".OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00ebM\u00ccsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00ebM\u00c9q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000\u0003\u00ebM\u00beppsq\u0000~\u0000"
+"\r\u0001\u0098\u00a4wpp\u0000sq\u0000~\u0000\u0006\u0001\u0098\u00a4lppsq\u0000~\u0000\b\u0001\u0098\u00a4aq\u0000~\u0000\fpsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003\u0001\u0098\u00a4"
+"^q\u0000~\u0000\fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000b\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.An"
+"yNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019psr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000Fde.thorstenberger.examServer.dao.xml.jaxb."
+"TaskHandlingType.TaskletTypet\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\u0006\u0002R\u00a9Bppsq\u0000~\u0000\u0015\u0002R\u00a97q\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0003\u0000\u00cf\u00ecXppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 "
+"L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QN"
+"amesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"
+"\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq"
+"\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000\u0007tasklett\u00000http://examServer.thorstenberger.de/taskH"
+"andlingq\u0000~\u0000\u001esq\u0000~\u0000\u0015\u0001B{\u009appsq\u0000~\u0000&\u0001\n;4ppsr\u0000!com.sun.msv.datatype"
+".xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Integer"
+"DerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/"
+"xsd/XSDatatypeImpl;xq\u0000~\u0000+q\u0000~\u00000t\u0000\u0004longq\u0000~\u00004sr\u0000*com.sun.msv.da"
+"tatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datat"
+"ype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Obje"
+"ct;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintF"
+"acet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq"
+"\u0000~\u0000CL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType"
+";L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~\u0000-ppq\u0000~\u00004\u0000\u0001sr\u0000*com.sun.msv.datatype.xs"
+"d.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gppq\u0000~\u00004\u0000\u0000sr\u0000$com.sun.msv"
+".datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u00000t\u0000\u0007integerq\u0000~"
+"\u00004sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalCon"
+"straintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Jppq\u0000~\u00004\u0001\u0000sr\u0000#com.sun.msv.dataty"
+"pe.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000~\u00000t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0000Vt"
+"\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Pt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b"
+"\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000"
+"~\u0000Pt\u0000\fmaxInclusivesq\u0000~\u0000Z\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u00006sq\u0000~\u00007q\u0000~\u0000Eq\u0000~\u00000sq\u0000~\u0000\u001ft"
+"\u0000\u0007idCountt\u0000\u0000sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHas"
+"h;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed"
+"\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000d[\u0000\u0005tablet\u0000![Lcom/sun/m"
+"sv/grammar/Expression;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.E"
+"xpression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppq\u0000~\u0000\nppppppppppq\u0000~\u0000\u0007ppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000$pppppp"
+"pppppq\u0000~\u0000\u0014ppppppppppq\u0000~\u0000\u0013ppppppppppppq\u0000~\u0000\u0005pppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000"
+"~\u0000\u0011ppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class TaskletTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
    {

        protected java.lang.String _Status;
        protected com.sun.xml.bind.util.ListImpl _CorrectorHistory = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected com.sun.xml.bind.util.ListImpl _Flag = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected java.lang.String _Annotation;
        protected com.sun.xml.bind.util.ListImpl _CorrectorAnnotation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected boolean has_TaskDefId;
        protected long _TaskDefId;
        protected boolean has_Points;
        protected float _Points;
        protected java.lang.String _Login;
        protected java.lang.String _CorrectorLogin;
        protected boolean has_Id;
        protected long _Id;
        protected com.sun.xml.bind.util.ListImpl _StudentAnnotation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.class);
        }

        public java.lang.String getStatus() {
            return _Status;
        }

        public void setStatus(java.lang.String value) {
            _Status = value;
        }

        public boolean isSetStatus() {
            return (_Status!= null);
        }

        public void unsetStatus() {
            _Status = null;
        }

        public java.util.List getCorrectorHistory() {
            return _CorrectorHistory;
        }

        public boolean isSetCorrectorHistory() {
            return _CorrectorHistory.isModified();
        }

        public void unsetCorrectorHistory() {
            _CorrectorHistory.clear();
            _CorrectorHistory.setModified(false);
        }

        public java.util.List getFlag() {
            return _Flag;
        }

        public boolean isSetFlag() {
            return _Flag.isModified();
        }

        public void unsetFlag() {
            _Flag.clear();
            _Flag.setModified(false);
        }

        public java.lang.String getAnnotation() {
            return _Annotation;
        }

        public void setAnnotation(java.lang.String value) {
            _Annotation = value;
        }

        public boolean isSetAnnotation() {
            return (_Annotation!= null);
        }

        public void unsetAnnotation() {
            _Annotation = null;
        }

        public java.util.List getCorrectorAnnotation() {
            return _CorrectorAnnotation;
        }

        public boolean isSetCorrectorAnnotation() {
            return _CorrectorAnnotation.isModified();
        }

        public void unsetCorrectorAnnotation() {
            _CorrectorAnnotation.clear();
            _CorrectorAnnotation.setModified(false);
        }

        public long getTaskDefId() {
            return _TaskDefId;
        }

        public void setTaskDefId(long value) {
            _TaskDefId = value;
            has_TaskDefId = true;
        }

        public boolean isSetTaskDefId() {
            return has_TaskDefId;
        }

        public void unsetTaskDefId() {
            has_TaskDefId = false;
        }

        public float getPoints() {
            return _Points;
        }

        public void setPoints(float value) {
            _Points = value;
            has_Points = true;
        }

        public boolean isSetPoints() {
            return has_Points;
        }

        public void unsetPoints() {
            has_Points = false;
        }

        public java.lang.String getLogin() {
            return _Login;
        }

        public void setLogin(java.lang.String value) {
            _Login = value;
        }

        public boolean isSetLogin() {
            return (_Login!= null);
        }

        public void unsetLogin() {
            _Login = null;
        }

        public java.lang.String getCorrectorLogin() {
            return _CorrectorLogin;
        }

        public void setCorrectorLogin(java.lang.String value) {
            _CorrectorLogin = value;
        }

        public boolean isSetCorrectorLogin() {
            return (_CorrectorLogin!= null);
        }

        public void unsetCorrectorLogin() {
            _CorrectorLogin = null;
        }

        public long getId() {
            return _Id;
        }

        public void setId(long value) {
            _Id = value;
            has_Id = true;
        }

        public boolean isSetId() {
            return has_Id;
        }

        public void unsetId() {
            has_Id = false;
        }

        public java.util.List getStudentAnnotation() {
            return _StudentAnnotation;
        }

        public boolean isSetStudentAnnotation() {
            return _StudentAnnotation.isModified();
        }

        public void unsetStudentAnnotation() {
            _StudentAnnotation.clear();
            _StudentAnnotation.setModified(false);
        }

        public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = _CorrectorHistory.size();
            int idx3 = 0;
            final int len3 = _Flag.size();
            int idx5 = 0;
            final int len5 = _CorrectorAnnotation.size();
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = _StudentAnnotation.size();
            while (idx2 != len2) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "correctorHistory");
                int idx_0 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx_0 ++)), "CorrectorHistory");
                context.endNamespaceDecls();
                int idx_1 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx_1 ++)), "CorrectorHistory");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx2 ++)), "CorrectorHistory");
                context.endElement();
            }
            while (idx3 != len3) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "flag");
                int idx_2 = idx3;
                try {
                    idx_2 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endNamespaceDecls();
                int idx_3 = idx3;
                try {
                    idx_3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Flag.get(idx3 ++)), "Flag");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            while (idx5 != len5) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "correctorAnnotation");
                int idx_4 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx_4 ++)), "CorrectorAnnotation");
                context.endNamespaceDecls();
                int idx_5 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx_5 ++)), "CorrectorAnnotation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx5 ++)), "CorrectorAnnotation");
                context.endElement();
            }
            while (idx11 != len11) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "studentAnnotation");
                int idx_6 = idx11;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx_6 ++)), "StudentAnnotation");
                context.endNamespaceDecls();
                int idx_7 = idx11;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx_7 ++)), "StudentAnnotation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx11 ++)), "StudentAnnotation");
                context.endElement();
            }
        }

        public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = _CorrectorHistory.size();
            int idx3 = 0;
            final int len3 = _Flag.size();
            int idx5 = 0;
            final int len5 = _CorrectorAnnotation.size();
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = _StudentAnnotation.size();
            context.startAttribute("", "status");
            try {
                context.text(((java.lang.String) _Status), "Status");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "id");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Id)), "Id");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Annotation!= null) {
                context.startAttribute("", "annotation");
                try {
                    context.text(((java.lang.String) _Annotation), "Annotation");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_CorrectorLogin!= null) {
                context.startAttribute("", "correctorLogin");
                try {
                    context.text(((java.lang.String) _CorrectorLogin), "CorrectorLogin");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "taskDefId");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _TaskDefId)), "TaskDefId");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "login");
            try {
                context.text(((java.lang.String) _Login), "Login");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (has_Points) {
                context.startAttribute("", "points");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Points)), "Points");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            while (idx2 != len2) {
                idx2 += 1;
            }
            while (idx3 != len3) {
                try {
                    idx3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
            while (idx5 != len5) {
                idx5 += 1;
            }
            while (idx11 != len11) {
                idx11 += 1;
            }
        }

        public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = _CorrectorHistory.size();
            int idx3 = 0;
            final int len3 = _Flag.size();
            int idx5 = 0;
            final int len5 = _CorrectorAnnotation.size();
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = _StudentAnnotation.size();
            while (idx2 != len2) {
                idx2 += 1;
            }
            while (idx3 != len3) {
                try {
                    idx3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
            while (idx5 != len5) {
                idx5 += 1;
            }
            while (idx11 != len11) {
                idx11 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u001f\u001b\u00de/ppsq\u0000~\u0000\u0000\u001c9\u00d4\u00deppsq\u0000~\u0000\u0000\u001a"
+"0\u00f9Ippsq\u0000~\u0000\u0000\u0017J\u00af\u0095ppsq\u0000~\u0000\u0000\u0013\u0089\u00a1\rppsq\u0000~\u0000\u0000\u0011T\fQppsq\u0000~\u0000\u0000\u0010!3\u00e9ppsq\u0000~\u0000\u0000\u000e"
+"F\u00c3\u00fappsq\u0000~\u0000\u0000\np8\u00b7ppsq\u0000~\u0000\u0000\u0006\u00b0\u008e\u00c7ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002x_\u00cdppsr\u0000 com.sun.msv.grammar.OneOrMoreEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002x_\u00c2sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002x_\u00bfq\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000\u0002x_\u00b4ppsq\u0000~\u0000\u0016\u0001\u0098\u00a4wpp\u0000sq\u0000~"
+"\u0000\u000f\u0001\u0098\u00a4lppsq\u0000~\u0000\u0011\u0001\u0098\u00a4aq\u0000~\u0000\u0015psr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0017xq\u0000~\u0000\u0003\u0001\u0098\u00a4^q\u0000~\u0000\u0015psr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0014\u0001q\u0000~\u0000!sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\"psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000)xq\u0000"
+"~\u0000$t\u0000[de.thorstenberger.examServer.dao.xml.jaxb.TaskHandling"
+"Type.TaskletType.CorrectorHistoryTypet\u0000+http://java.sun.com/"
+"jaxb/xjc/dummy-elementssq\u0000~\u0000\u000f\u0000\u00df\u00bb8ppsq\u0000~\u0000\u001e\u0000\u00df\u00bb-q\u0000~\u0000\u0015psr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003\u0000\u00cf\u00ecXppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'c"
+"om.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespac"
+"eUriq\u0000~\u0000)L\u0000\btypeNameq\u0000~\u0000)L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dataty"
+"pe/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSc"
+"hemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Null"
+"SetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.Str"
+"ingPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000)L\u0000\fnamespaceURIq\u0000~\u0000)xpq\u0000~"
+"\u0000:q\u0000~\u00009sq\u0000~\u0000(t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"
+"anceq\u0000~\u0000\'sq\u0000~\u0000(t\u0000\u0010correctorHistoryt\u00000http://examServer.thors"
+"tenberger.de/taskHandlingq\u0000~\u0000\'sq\u0000~\u0000\u000f\u00048.\u00f5ppsq\u0000~\u0000\u0011\u00048.\u00eaq\u0000~\u0000\u0015psq"
+"\u0000~\u0000\u0016\u00048.\u00e7q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000\u00048.\u00dcppsq\u0000~\u0000/\u0001\u00ce?\u00d5ppsr\u0000#com.sun.msv.datat"
+"ype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00004q\u0000~\u00009t\u0000\u0006s"
+"tringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preser"
+"ve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000<\u0001q\u0000~\u0000?sq\u0000~\u0000@q\u0000~\u0000Oq\u0000~\u00009sq\u0000~\u0000\u000f\u0002i\u00ef\u0002ppsq\u0000~\u0000\u001e\u0002"
+"i\u00ee\u00f7q\u0000~\u0000\u0015pq\u0000~\u00002sq\u0000~\u0000(q\u0000~\u0000Cq\u0000~\u0000Dq\u0000~\u0000\'sq\u0000~\u0000(t\u0000\u0004flagq\u0000~\u0000Gq\u0000~\u0000\'sq"
+"\u0000~\u0000\u000f\u0003\u00bf\u00a9\u00ebppsq\u0000~\u0000\u0011\u0003\u00bf\u00a9\u00e0q\u0000~\u0000\u0015psq\u0000~\u0000\u0016\u0003\u00bf\u00a9\u00ddq\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000\u0003\u00bf\u00a9\u00d2ppsq\u0000~\u0000"
+"\u0016\u0001\u0098\u00a4wpp\u0000sq\u0000~\u0000\u000f\u0001\u0098\u00a4lppsq\u0000~\u0000\u0011\u0001\u0098\u00a4aq\u0000~\u0000\u0015psq\u0000~\u0000\u001e\u0001\u0098\u00a4^q\u0000~\u0000\u0015pq\u0000~\u0000!q\u0000~"
+"\u0000%q\u0000~\u0000\'sq\u0000~\u0000(t\u0000^de.thorstenberger.examServer.dao.xml.jaxb.Ta"
+"skHandlingType.TaskletType.CorrectorAnnotationTypeq\u0000~\u0000,sq\u0000~\u0000"
+"\u000f\u0002\'\u0005Vppsq\u0000~\u0000\u001e\u0002\'\u0005Kq\u0000~\u0000\u0015pq\u0000~\u00002sq\u0000~\u0000(q\u0000~\u0000Cq\u0000~\u0000Dq\u0000~\u0000\'sq\u0000~\u0000(t\u0000\u0013co"
+"rrectorAnnotationq\u0000~\u0000Gq\u0000~\u0000\'sq\u0000~\u0000\u000f\u0003\u00d6\u008b>ppsq\u0000~\u0000\u0011\u0003\u00d6\u008b3q\u0000~\u0000\u0015psq\u0000~\u0000"
+"\u0016\u0003\u00d6\u008b0q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000\u0003\u00d6\u008b%ppsq\u0000~\u0000\u0016\u0001\u0098\u00a4wpp\u0000sq\u0000~\u0000\u000f\u0001\u0098\u00a4lppsq\u0000~\u0000\u0011\u0001\u0098\u00a4aq"
+"\u0000~\u0000\u0015psq\u0000~\u0000\u001e\u0001\u0098\u00a4^q\u0000~\u0000\u0015pq\u0000~\u0000!q\u0000~\u0000%q\u0000~\u0000\'sq\u0000~\u0000(t\u0000\\de.thorstenberg"
+"er.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.Stud"
+"entAnnotationTypeq\u0000~\u0000,sq\u0000~\u0000\u000f\u0002=\u00e6\u00a9ppsq\u0000~\u0000\u001e\u0002=\u00e6\u009eq\u0000~\u0000\u0015pq\u0000~\u00002sq\u0000~\u0000"
+"(q\u0000~\u0000Cq\u0000~\u0000Dq\u0000~\u0000\'sq\u0000~\u0000(t\u0000\u0011studentAnnotationq\u0000~\u0000Gq\u0000~\u0000\'sq\u0000~\u0000\u001e\u0001\u00da"
+"o\u00eappq\u0000~\u0000Lsq\u0000~\u0000(t\u0000\u0006statust\u0000\u0000sq\u0000~\u0000\u001e\u00012\u00d8cppsq\u0000~\u0000/\u0001\n;4ppsr\u0000!com.s"
+"un.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datat"
+"ype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/su"
+"n/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u00004q\u0000~\u00009t\u0000\u0004longq\u0000~\u0000=sr\u0000"
+"*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#co"
+"m.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012"
+"Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithV"
+"alueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.D"
+"ataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckF"
+"lagL\u0000\bbaseTypeq\u0000~\u0000~L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/x"
+"sd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000)xq\u0000~\u00006ppq\u0000~\u0000=\u0000\u0001sr\u0000*com.sun."
+"msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0082ppq\u0000~\u0000=\u0000\u0000"
+"sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000}q\u0000~"
+"\u00009t\u0000\u0007integerq\u0000~\u0000=sr\u0000,com.sun.msv.datatype.xsd.FractionDigits"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTyp"
+"eWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0085ppq\u0000~\u0000=\u0001\u0000sr\u0000#com"
+".sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00009t\u0000\u0007dec"
+"imalq\u0000~\u0000=q\u0000~\u0000\u0091t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u008bt\u0000\fminInclusivesr\u0000\u000ej"
+"ava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b"
+"\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u008bt\u0000\fmaxInclusivesq\u0000~\u0000\u0095\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000?sq\u0000~\u0000@q\u0000"
+"~\u0000\u0080q\u0000~\u00009sq\u0000~\u0000(t\u0000\u0002idq\u0000~\u0000ysq\u0000~\u0000\u000f\u00025\u0094\u00b7ppsq\u0000~\u0000\u001e\u00025\u0094\u00acq\u0000~\u0000\u0015pq\u0000~\u0000Lsq\u0000"
+"~\u0000(t\u0000\nannotationq\u0000~\u0000yq\u0000~\u0000\'sq\u0000~\u0000\u000f\u0003\u00c1\u000e\u0083ppsq\u0000~\u0000\u001e\u0003\u00c1\u000exq\u0000~\u0000\u0015pq\u0000~\u0000Ls"
+"q\u0000~\u0000(t\u0000\u000ecorrectorLoginq\u0000~\u0000yq\u0000~\u0000\'sq\u0000~\u0000\u001e\u0002\u00e6I\u00afppq\u0000~\u0000{sq\u0000~\u0000(t\u0000\tta"
+"skDefIdq\u0000~\u0000ysq\u0000~\u0000\u001e\u0002\b\u00db\u0090ppq\u0000~\u0000Lsq\u0000~\u0000(t\u0000\u0005loginq\u0000~\u0000ysq\u0000~\u0000\u000f\u0002\u00e2\tLpp"
+"sq\u0000~\u0000\u001e\u0002\u00e2\tAq\u0000~\u0000\u0015psq\u0000~\u0000/\u0001\u001c+wppsr\u0000\"com.sun.msv.datatype.xsd.Flo"
+"atType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumber"
+"Type\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00009t\u0000\u0005floatq\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u0000@q\u0000~\u0000\u00b1q\u0000~\u00009"
+"sq\u0000~\u0000(t\u0000\u0006pointsq\u0000~\u0000yq\u0000~\u0000\'sr\u0000\"com.sun.msv.grammar.ExpressionP"
+"ool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionP"
+"ool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clos"
+"edHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00b6[\u0000\u0005tablet"
+"\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000#\u0000\u0000\u00009pur\u0000![Lcom.sun."
+"msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppq\u0000~\u0000\tp"
+"ppq\u0000~\u0000[pppppppppppq\u0000~\u0000qpq\u0000~\u0000Yq\u0000~\u0000\u00a1pppppppppq\u0000~\u0000Xppppppppq\u0000~\u0000"
+"\bppppppppppq\u0000~\u0000\u00abq\u0000~\u0000\u0006ppppq\u0000~\u0000\u009dppq\u0000~\u0000\u001apppppq\u0000~\u0000\u0007pppppppq\u0000~\u0000\u001dq"
+"\u0000~\u0000\u0013q\u0000~\u0000^q\u0000~\u0000mppppppq\u0000~\u0000bq\u0000~\u0000\u001cq\u0000~\u0000\u0010q\u0000~\u0000]q\u0000~\u0000\u000eq\u0000~\u0000lpppppppppp"
+"pppppppppppq\u0000~\u0000Sppppppq\u0000~\u0000\fq\u0000~\u0000\nq\u0000~\u0000\u0005ppppppppppq\u0000~\u0000jppppq\u0000~\u0000"
+"\rpq\u0000~\u0000-q\u0000~\u0000\u000bpppppq\u0000~\u0000hppppppq\u0000~\u0000Kpppq\u0000~\u0000gpppppppppq\u0000~\u0000Ippppp"
+"pppppq\u0000~\u0000Hp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class CorrectorAnnotationTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Value;
            protected boolean has_Date;
            protected long _Date;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType.class);
            }

            public java.lang.String getValue() {
                return _Value;
            }

            public void setValue(java.lang.String value) {
                _Value = value;
            }

            public boolean isSetValue() {
                return (_Value!= null);
            }

            public void unsetValue() {
                _Value = null;
            }

            public long getDate() {
                return _Date;
            }

            public void setDate(long value) {
                _Date = value;
                has_Date = true;
            }

            public boolean isSetDate() {
                return has_Date;
            }

            public void unsetDate() {
                has_Date = false;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                try {
                    context.text(((java.lang.String) _Value), "Value");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (has_Date) {
                    context.startAttribute("", "date");
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Date)), "Date");
                    } catch (java.lang.Exception e) {
                        de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004\u0000\u0004\u00ecppsr\u0000\u001bcom.sun.msv.gra"
+"mmar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatyp"
+"e;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000"
+"\u0003\u0001\u00ce?\u00d5ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\r"
+"isAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000eL\u0000\nwhiteSpac"
+"et\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:"
+"//www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.ms"
+"v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\np"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000e"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000~\u0000\u0011sr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u00021\u00c5\u0012ppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramma"
+"r/NameClass;xq\u0000~\u0000\u0003\u00021\u00c5\u0007sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005val"
+"uexp\u0000psq\u0000~\u0000\u0006\u0001\n;4ppsr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k"
+"\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl"
+";xq\u0000~\u0000\u000bq\u0000~\u0000\u0011t\u0000\u0004longsr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014sr\u0000*com.sun.msv.datatype.xs"
+"d.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.R"
+"angeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009co"
+"m.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca"
+"\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000$L\u0000\fco"
+"ncreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacet"
+"Nameq\u0000~\u0000\u000exq\u0000~\u0000\rppq\u0000~\u0000(\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinIncl"
+"usiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000*ppq\u0000~\u0000(\u0000\u0000sr\u0000$com.sun.msv.datatype"
+".xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#q\u0000~\u0000\u0011t\u0000\u0007integerq\u0000~\u0000(sr\u0000,com"
+".sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scale"
+"xr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFa"
+"cetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000-ppq\u0000~\u0000(\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Nu"
+"mberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bq\u0000~\u0000\u0011t\u0000\u0007decimalq\u0000~\u0000(q\u0000~\u00009t\u0000\u000efractio"
+"nDigits\u0000\u0000\u0000\u0000q\u0000~\u00003t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001"
+"J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u00003t\u0000\fmax"
+"Inclusivesq\u0000~\u0000=\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u0017sq\u0000~\u0000\u0018q\u0000~\u0000&q\u0000~\u0000\u0011sr\u0000#com.sun.msv."
+"grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamesp"
+"aceURIq\u0000~\u0000\u000exr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004"
+"datet\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u001f\u0001psr\u0000\"com.sun.msv.grammar.Expressi"
+"onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"
+"onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"
+"losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000L[\u0000\u0005tab"
+"let\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0002\u0000\u0000\u00009pur\u0000![Lcom.s"
+"un.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u001b"
+"ppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppp"
+"pp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "-----");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  4 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Date = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Date = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  4 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("date" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  4 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  2 :
                                if (("date" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  4 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  3 :
                                    eatText2(value);
                                    state = 4;
                                    return ;
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "date");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    state = 3;
                                    continue outer;
                                case  4 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Value = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public static class CorrectorHistoryTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _CorrectorLogin;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType.class);
            }

            public java.lang.String getCorrectorLogin() {
                return _CorrectorLogin;
            }

            public void setCorrectorLogin(java.lang.String value) {
                _CorrectorLogin = value;
            }

            public boolean isSetCorrectorLogin() {
                return (_CorrectorLogin!= null);
            }

            public void unsetCorrectorLogin() {
                _CorrectorLogin = null;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startAttribute("", "correctorLogin");
                try {
                    context.text(((java.lang.String) _CorrectorLogin), "CorrectorLogin");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Bool"
+"ean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0001xp\u0002\u00ebeHppsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00ce?\u00d5ppsr\u0000"
+"#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysVa"
+"lidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"it\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000eL\u0000\nwhiteSpacet\u0000.Lcom/s"
+"un/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.o"
+"rg/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar."
+"Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.s"
+"un.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespa"
+"ceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000~\u0000\u0011sr\u0000#com.sun.msv.grammar.SimpleNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000exr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u000ecorrectorLogint\u0000\u0000sr\u0000\"c"
+"om.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lc"
+"om/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.m"
+"sv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tth"
+"resholdL\u0000\u0006parentq\u0000~\u0000 [\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expres"
+"sion;xp\u0000\u0000\u0000\u0000\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7"
+"\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "correctorLogin");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CorrectorLogin = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "correctorLogin");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("correctorLogin" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "correctorLogin");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("correctorLogin" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "correctorLogin");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class StudentAnnotationTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Value;
            protected boolean has_Acknowledged;
            protected boolean _Acknowledged;
            protected boolean has_Date;
            protected long _Date;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType.class);
            }

            public java.lang.String getValue() {
                return _Value;
            }

            public void setValue(java.lang.String value) {
                _Value = value;
            }

            public boolean isSetValue() {
                return (_Value!= null);
            }

            public void unsetValue() {
                _Value = null;
            }

            public boolean isAcknowledged() {
                if (!has_Acknowledged) {
                    return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
                } else {
                    return _Acknowledged;
                }
            }

            public void setAcknowledged(boolean value) {
                _Acknowledged = value;
                has_Acknowledged = true;
            }

            public boolean isSetAcknowledged() {
                return has_Acknowledged;
            }

            public void unsetAcknowledged() {
                has_Acknowledged = false;
            }

            public long getDate() {
                return _Date;
            }

            public void setDate(long value) {
                _Date = value;
                has_Date = true;
            }

            public boolean isSetDate() {
                return has_Date;
            }

            public void unsetDate() {
                has_Date = false;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
                try {
                    context.text(((java.lang.String) _Value), "Value");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
                if (has_Acknowledged) {
                    context.startAttribute("", "acknowledged");
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Acknowledged)), "Acknowledged");
                    } catch (java.lang.Exception e) {
                        de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
                context.startAttribute("", "date");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Date)), "Date");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0005F\u00a8kppsq\u0000~\u0000\u0000\u0003\u00c04\u00acppsr\u0000\u001bcom"
+".sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/data"
+"type/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Stri"
+"ngPair;xq\u0000~\u0000\u0003\u0001\u00ce?\u00d5ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Builti"
+"nAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000f"
+"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcesso"
+"r;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlo"
+"calNameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fxpq\u0000~\u0000\u0013q\u0000~\u0000\u0012sr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00f1\u00f4\u00d2ppsr\u0000 com.sun.msv.gram"
+"mar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xq\u0000~\u0000\u0003\u0001\u00f1\u00f4\u00c7sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5"
+"\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0007\u0000\u0089\u00cf.ppsr\u0000$com.sun.msv.datatype.xsd.B"
+"ooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fq\u0000~\u0000\u0012t\u0000\u0007booleansr\u00005com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000"
+"\u0018sq\u0000~\u0000\u0019q\u0000~\u0000%q\u0000~\u0000\u0012sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fxr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\facknowledgedt\u0000\u0000sr\u00000com.sun."
+"msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000"
+"\tsq\u0000~\u0000 \u0001psq\u0000~\u0000\u001d\u0001\u0086s\u00bappsq\u0000~\u0000\u0007\u0001\n;4ppsr\u0000!com.sun.msv.datatype.xs"
+"d.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDer"
+"ivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd"
+"/XSDatatypeImpl;xq\u0000~\u0000\fq\u0000~\u0000\u0012t\u0000\u0004longq\u0000~\u0000\'sr\u0000*com.sun.msv.datat"
+"ype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype"
+".xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;"
+"xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFace"
+"t\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000"
+"5L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000"
+"\tfacetNameq\u0000~\u0000\u000fxq\u0000~\u0000\u000eppq\u0000~\u0000\'\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.M"
+"inInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00009ppq\u0000~\u0000\'\u0000\u0000sr\u0000$com.sun.msv.da"
+"tatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u0000\u0012t\u0000\u0007integerq\u0000~\u0000\'s"
+"r\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000"
+"\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstr"
+"aintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000<ppq\u0000~\u0000\'\u0001\u0000sr\u0000#com.sun.msv.datatype."
+"xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fq\u0000~\u0000\u0012t\u0000\u0007decimalq\u0000~\u0000\'q\u0000~\u0000Ht\u0000\u000ef"
+"ractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Bt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc"
+"\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000B"
+"t\u0000\fmaxInclusivesq\u0000~\u0000L\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u0018sq\u0000~\u0000\u0019q\u0000~\u00007q\u0000~\u0000\u0012sq\u0000~\u0000)t\u0000\u0004d"
+"ateq\u0000~\u0000-sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\b"
+"expTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xp"
+"sr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004"
+"I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000U[\u0000\u0005tablet\u0000![Lcom/sun/msv/g"
+"rammar/Expression;xp\u0000\u0000\u0000\u0003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expre"
+"ssion;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppp"
+"pq\u0000~\u0000\u0006ppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u001cpp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "--------");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  7 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Date = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Date = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Acknowledged = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Acknowledged = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  7 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  7 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                if (("date" == ___local)&&("" == ___uri)) {
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  0 :
                                if (("acknowledged" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  2 :
                                if (("acknowledged" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  7 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  5 :
                                if (("date" == ___local)&&("" == ___uri)) {
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  4 :
                                    eatText1(value);
                                    state = 5;
                                    return ;
                                case  6 :
                                    eatText3(value);
                                    state = 7;
                                    return ;
                                case  7 :
                                    revertToParentFromText(value);
                                    return ;
                                case  3 :
                                    attIdx = context.getAttribute("", "date");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 6;
                                        continue outer;
                                    }
                                    break;
                                case  0 :
                                    attIdx = context.getAttribute("", "acknowledged");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText2(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    state = 3;
                                    continue outer;
                                case  1 :
                                    eatText2(value);
                                    state = 2;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Value = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "----------------------------------");
            }

            protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  21 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 22;
                                return ;
                            }
                            state = 24;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 18;
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "annotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  27 :
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 25;
                                return ;
                            }
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 28;
                                return ;
                            }
                            state = 30;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "acknowledged");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  24 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 22;
                                return ;
                            }
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 25;
                                return ;
                            }
                            state = 27;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  30 :
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 28;
                                return ;
                            }
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 31;
                                return ;
                            }
                            state = 33;
                            continue outer;
                        case  22 :
                            attIdx = context.getAttribute("", "correctorLogin");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "correctorLogin");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  33 :
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 31;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Login = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Annotation = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _TaskDefId = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_TaskDefId = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Status = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _CorrectorLogin = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Id = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Id = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText7(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Points = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Points = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  21 :
                            state = 24;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 18;
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "annotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  23 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 24;
                                return ;
                            }
                            break;
                        case  29 :
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 30;
                                return ;
                            }
                            break;
                        case  26 :
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 27;
                                return ;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "acknowledged");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  22 :
                            attIdx = context.getAttribute("", "correctorLogin");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  32 :
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 33;
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "correctorLogin");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  33 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  21 :
                            state = 24;
                            continue outer;
                        case  15 :
                            if (("login" == ___local)&&("" == ___uri)) {
                                state = 16;
                                return ;
                            }
                            break;
                        case  6 :
                            if (("annotation" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  12 :
                            if (("taskDefId" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            break;
                        case  31 :
                            if (("acknowledged" == ___local)&&("" == ___uri)) {
                                _StudentAnnotation.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.class), 32, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("date" == ___local)&&("" == ___uri)) {
                                _StudentAnnotation.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.class), 32, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  0 :
                            if (("status" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  22 :
                            if (("correctorLogin" == ___local)&&("" == ___uri)) {
                                _CorrectorHistory.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.class), 23, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  9 :
                            if (("correctorLogin" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  28 :
                            if (("date" == ___local)&&("" == ___uri)) {
                                _CorrectorAnnotation.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.class), 29, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  3 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  33 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  18 :
                            if (("points" == ___local)&&("" == ___uri)) {
                                state = 19;
                                return ;
                            }
                            state = 21;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  21 :
                            state = 24;
                            continue outer;
                        case  2 :
                            if (("status" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 18;
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "annotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            break;
                        case  11 :
                            if (("correctorLogin" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "acknowledged");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  17 :
                            if (("login" == ___local)&&("" == ___uri)) {
                                state = 18;
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  8 :
                            if (("annotation" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  14 :
                            if (("taskDefId" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  22 :
                            attIdx = context.getAttribute("", "correctorLogin");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  5 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "correctorLogin");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  33 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  20 :
                            if (("points" == ___local)&&("" == ___uri)) {
                                state = 21;
                                return ;
                            }
                            break;
                        case  18 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  13 :
                                eatText3(value);
                                state = 14;
                                return ;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  15 :
                                attIdx = context.getAttribute("", "login");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 18;
                                    continue outer;
                                }
                                break;
                            case  6 :
                                attIdx = context.getAttribute("", "annotation");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 9;
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  12 :
                                attIdx = context.getAttribute("", "taskDefId");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText3(v);
                                    state = 15;
                                    continue outer;
                                }
                                break;
                            case  19 :
                                eatText7(value);
                                state = 20;
                                return ;
                            case  16 :
                                eatText1(value);
                                state = 17;
                                return ;
                            case  31 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  1 :
                                eatText4(value);
                                state = 2;
                                return ;
                            case  4 :
                                eatText6(value);
                                state = 5;
                                return ;
                            case  25 :
                                eatText8(value);
                                state = 26;
                                return ;
                            case  10 :
                                eatText5(value);
                                state = 11;
                                return ;
                            case  7 :
                                eatText2(value);
                                state = 8;
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText4(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  22 :
                                attIdx = context.getAttribute("", "correctorLogin");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  9 :
                                attIdx = context.getAttribute("", "correctorLogin");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText5(v);
                                    state = 12;
                                    continue outer;
                                }
                                state = 12;
                                continue outer;
                            case  28 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _CorrectorAnnotation.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl) spawnChildFromText((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.class), 29, value)));
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText6(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  33 :
                                revertToParentFromText(value);
                                return ;
                            case  18 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText7(v);
                                    state = 21;
                                    continue outer;
                                }
                                state = 21;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText8(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Flag.add(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IdCount = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IdCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  4 :
                        if (("status" == ___local)&&("" == ___uri)) {
                            _Tasklet.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("idCount" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  2 :
                        if (("idCount" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "idCount");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
