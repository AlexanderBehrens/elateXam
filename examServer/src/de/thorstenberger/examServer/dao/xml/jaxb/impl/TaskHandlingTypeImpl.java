//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.19 at 02:28:53 CEST 
//


package de.thorstenberger.examServer.dao.xml.jaxb.impl;

public class TaskHandlingTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Tasklet = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected boolean has_IdCount;
    protected long _IdCount;
    public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.class);
    }

    public java.util.List getTasklet() {
        return _Tasklet;
    }

    public boolean isSetTasklet() {
        return _Tasklet.isModified();
    }

    public void unsetTasklet() {
        _Tasklet.clear();
        _Tasklet.setModified(false);
    }

    public long getIdCount() {
        return _IdCount;
    }

    public void setIdCount(long value) {
        _IdCount = value;
        has_IdCount = true;
    }

    public boolean isSetIdCount() {
        return has_IdCount;
    }

    public void unsetIdCount() {
        has_IdCount = false;
    }

    public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
        return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Tasklet.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            context.startElement("http://examServer.thorstenberger.de/taskHandling", "tasklet");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx_0 ++)), "Tasklet");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx_1 ++)), "Tasklet");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Tasklet.get(idx1 ++)), "Tasklet");
            context.endElement();
        }
    }

    public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Tasklet.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        context.startAttribute("", "idCount");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _IdCount)), "IdCount");
        } catch (java.lang.Exception e) {
            de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Tasklet.size();
        if (!has_IdCount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IdCount"));
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004\u00af \u00b3ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u0006\u00827ppsr\u0000 com.sun.msv.grammar"
+".OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u0006\u0082,sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u0006\u0082)q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000\u0003\u0006\u0082\u001eppsq\u0000~\u0000"
+"\r\u0000v\u00e3\u008bpp\u0000sq\u0000~\u0000\u0006\u0000v\u00e3\u0080ppsq\u0000~\u0000\b\u0000v\u00e3uq\u0000~\u0000\fpsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003\u0000v\u00e3"
+"rq\u0000~\u0000\fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000b\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.An"
+"yNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019psr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000Fde.thorstenberger.examServer.dao.xml.jaxb."
+"TaskHandlingType.TaskletTypet\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\u0006\u0002\u008f\u009e\u008eppsq\u0000~\u0000\u0015\u0002\u008f\u009e\u0083q\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0003\u0001\b\u001d>ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 "
+"L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QN"
+"amesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"
+"\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq"
+"\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000\u0007tasklett\u00000http://examServer.thorstenberger.de/taskH"
+"andlingq\u0000~\u0000\u001esq\u0000~\u0000\u0015\u0001\u00a8\u009ewppsq\u0000~\u0000&\u0000J\u00ebbppsr\u0000!com.sun.msv.datatype"
+".xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Integer"
+"DerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/"
+"xsd/XSDatatypeImpl;xq\u0000~\u0000+q\u0000~\u00000t\u0000\u0004longq\u0000~\u00004sr\u0000*com.sun.msv.da"
+"tatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datat"
+"ype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Obje"
+"ct;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintF"
+"acet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq"
+"\u0000~\u0000CL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType"
+";L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~\u0000-ppq\u0000~\u00004\u0000\u0001sr\u0000*com.sun.msv.datatype.xs"
+"d.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gppq\u0000~\u00004\u0000\u0000sr\u0000$com.sun.msv"
+".datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u00000t\u0000\u0007integerq\u0000~"
+"\u00004sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalCon"
+"straintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Jppq\u0000~\u00004\u0001\u0000sr\u0000#com.sun.msv.dataty"
+"pe.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000~\u00000t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0000Vt"
+"\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Pt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b"
+"\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000"
+"~\u0000Pt\u0000\fmaxInclusivesq\u0000~\u0000Z\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u00006sq\u0000~\u00007q\u0000~\u0000Eq\u0000~\u00000sq\u0000~\u0000\u001ft"
+"\u0000\u0007idCountt\u0000\u0000sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHas"
+"h;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed"
+"\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000d[\u0000\u0005tablet\u0000![Lcom/sun/m"
+"sv/grammar/Expression;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.E"
+"xpression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppq\u0000~\u0000\u0014ppppppppppq\u0000~\u0000"
+"\u0013ppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppq\u0000~\u0000$pp"
+"ppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011pppppppppppppq\u0000~\u0000"
+"\nppppppppppq\u0000~\u0000\u0007pppppppppppppppppppppppppppppppppppppppppppp"
+"pppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class TaskletTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
    {

        protected java.lang.String _Status;
        protected com.sun.xml.bind.util.ListImpl _CorrectorHistory = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected com.sun.xml.bind.util.ListImpl _Flag = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected com.sun.xml.bind.util.ListImpl _CorrectorAnnotation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected boolean has_TaskDefId;
        protected long _TaskDefId;
        protected com.sun.xml.bind.util.ListImpl _ManualCorrection = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType _AutoCorrection;
        protected java.lang.String _AssignedCorrector;
        protected java.lang.String _Login;
        protected boolean has_Id;
        protected long _Id;
        protected com.sun.xml.bind.util.ListImpl _StudentAnnotation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.class);
        }

        public java.lang.String getStatus() {
            return _Status;
        }

        public void setStatus(java.lang.String value) {
            _Status = value;
        }

        public boolean isSetStatus() {
            return (_Status!= null);
        }

        public void unsetStatus() {
            _Status = null;
        }

        public java.util.List getCorrectorHistory() {
            return _CorrectorHistory;
        }

        public boolean isSetCorrectorHistory() {
            return _CorrectorHistory.isModified();
        }

        public void unsetCorrectorHistory() {
            _CorrectorHistory.clear();
            _CorrectorHistory.setModified(false);
        }

        public java.util.List getFlag() {
            return _Flag;
        }

        public boolean isSetFlag() {
            return _Flag.isModified();
        }

        public void unsetFlag() {
            _Flag.clear();
            _Flag.setModified(false);
        }

        public java.util.List getCorrectorAnnotation() {
            return _CorrectorAnnotation;
        }

        public boolean isSetCorrectorAnnotation() {
            return _CorrectorAnnotation.isModified();
        }

        public void unsetCorrectorAnnotation() {
            _CorrectorAnnotation.clear();
            _CorrectorAnnotation.setModified(false);
        }

        public long getTaskDefId() {
            return _TaskDefId;
        }

        public void setTaskDefId(long value) {
            _TaskDefId = value;
            has_TaskDefId = true;
        }

        public boolean isSetTaskDefId() {
            return has_TaskDefId;
        }

        public void unsetTaskDefId() {
            has_TaskDefId = false;
        }

        public java.util.List getManualCorrection() {
            return _ManualCorrection;
        }

        public boolean isSetManualCorrection() {
            return _ManualCorrection.isModified();
        }

        public void unsetManualCorrection() {
            _ManualCorrection.clear();
            _ManualCorrection.setModified(false);
        }

        public de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType getAutoCorrection() {
            return _AutoCorrection;
        }

        public void setAutoCorrection(de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType value) {
            _AutoCorrection = value;
        }

        public boolean isSetAutoCorrection() {
            return (_AutoCorrection!= null);
        }

        public void unsetAutoCorrection() {
            _AutoCorrection = null;
        }

        public java.lang.String getAssignedCorrector() {
            return _AssignedCorrector;
        }

        public void setAssignedCorrector(java.lang.String value) {
            _AssignedCorrector = value;
        }

        public boolean isSetAssignedCorrector() {
            return (_AssignedCorrector!= null);
        }

        public void unsetAssignedCorrector() {
            _AssignedCorrector = null;
        }

        public java.lang.String getLogin() {
            return _Login;
        }

        public void setLogin(java.lang.String value) {
            _Login = value;
        }

        public boolean isSetLogin() {
            return (_Login!= null);
        }

        public void unsetLogin() {
            _Login = null;
        }

        public long getId() {
            return _Id;
        }

        public void setId(long value) {
            _Id = value;
            has_Id = true;
        }

        public boolean isSetId() {
            return has_Id;
        }

        public void unsetId() {
            has_Id = false;
        }

        public java.util.List getStudentAnnotation() {
            return _StudentAnnotation;
        }

        public boolean isSetStudentAnnotation() {
            return _StudentAnnotation.isModified();
        }

        public void unsetStudentAnnotation() {
            _StudentAnnotation.clear();
            _StudentAnnotation.setModified(false);
        }

        public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = _CorrectorHistory.size();
            int idx3 = 0;
            final int len3 = _Flag.size();
            int idx4 = 0;
            final int len4 = _CorrectorAnnotation.size();
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            int idx6 = 0;
            final int len6 = _ManualCorrection.size();
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = _StudentAnnotation.size();
            while (idx2 != len2) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "correctorHistory");
                int idx_0 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx_0 ++)), "CorrectorHistory");
                context.endNamespaceDecls();
                int idx_1 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx_1 ++)), "CorrectorHistory");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CorrectorHistory.get(idx2 ++)), "CorrectorHistory");
                context.endElement();
            }
            while (idx3 != len3) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "flag");
                int idx_2 = idx3;
                try {
                    idx_2 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endNamespaceDecls();
                int idx_3 = idx3;
                try {
                    idx_3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Flag.get(idx3 ++)), "Flag");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            while (idx4 != len4) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "correctorAnnotation");
                int idx_4 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx_4 ++)), "CorrectorAnnotation");
                context.endNamespaceDecls();
                int idx_5 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx_5 ++)), "CorrectorAnnotation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CorrectorAnnotation.get(idx4 ++)), "CorrectorAnnotation");
                context.endElement();
            }
            while (idx11 != len11) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "studentAnnotation");
                int idx_6 = idx11;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx_6 ++)), "StudentAnnotation");
                context.endNamespaceDecls();
                int idx_7 = idx11;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx_7 ++)), "StudentAnnotation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _StudentAnnotation.get(idx11 ++)), "StudentAnnotation");
                context.endElement();
            }
            if ((_ManualCorrection.size() == 0)&&(_AutoCorrection!= null)) {
                context.startElement("http://examServer.thorstenberger.de/taskHandling", "autoCorrection");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endElement();
            } else {
                if ((_ManualCorrection.size()>= 1)&&(_AutoCorrection == null)) {
                    while (idx6 != len6) {
                        context.startElement("http://examServer.thorstenberger.de/taskHandling", "manualCorrection");
                        int idx_10 = idx6;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx_10 ++)), "ManualCorrection");
                        context.endNamespaceDecls();
                        int idx_11 = idx6;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx_11 ++)), "ManualCorrection");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx6 ++)), "ManualCorrection");
                        context.endElement();
                    }
                }
            }
        }

        public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = _CorrectorHistory.size();
            int idx3 = 0;
            final int len3 = _Flag.size();
            int idx4 = 0;
            final int len4 = _CorrectorAnnotation.size();
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            int idx6 = 0;
            final int len6 = _ManualCorrection.size();
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = _StudentAnnotation.size();
            context.startAttribute("", "id");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Id)), "Id");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "status");
            try {
                context.text(((java.lang.String) _Status), "Status");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "taskDefId");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _TaskDefId)), "TaskDefId");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "login");
            try {
                context.text(((java.lang.String) _Login), "Login");
            } catch (java.lang.Exception e) {
                de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_AssignedCorrector!= null) {
                context.startAttribute("", "assignedCorrector");
                try {
                    context.text(((java.lang.String) _AssignedCorrector), "AssignedCorrector");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            while (idx2 != len2) {
                idx2 += 1;
            }
            while (idx3 != len3) {
                try {
                    idx3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
            while (idx4 != len4) {
                idx4 += 1;
            }
            while (idx11 != len11) {
                idx11 += 1;
            }
            if (!((_ManualCorrection.size() == 0)&&(_AutoCorrection!= null))) {
                if ((_ManualCorrection.size()>= 1)&&(_AutoCorrection == null)) {
                    while (idx6 != len6) {
                        idx6 += 1;
                    }
                }
            }
        }

        public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx2 = 0;
            final int len2 = _CorrectorHistory.size();
            int idx3 = 0;
            final int len3 = _Flag.size();
            int idx4 = 0;
            final int len4 = _CorrectorAnnotation.size();
            if (!has_TaskDefId) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TaskDefId"));
            }
            int idx6 = 0;
            final int len6 = _ManualCorrection.size();
            if (!has_Id) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Id"));
            }
            int idx11 = 0;
            final int len11 = _StudentAnnotation.size();
            while (idx2 != len2) {
                idx2 += 1;
            }
            while (idx3 != len3) {
                try {
                    idx3 += 1;
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
            while (idx4 != len4) {
                idx4 += 1;
            }
            while (idx11 != len11) {
                idx11 += 1;
            }
            if (!((_ManualCorrection.size() == 0)&&(_AutoCorrection!= null))) {
                if ((_ManualCorrection.size()>= 1)&&(_AutoCorrection == null)) {
                    while (idx6 != len6) {
                        idx6 += 1;
                    }
                }
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u001c\u00d4\u00981ppsq\u0000~\u0000\u0000\u001a\u00d0f\u00a1ppsq\u0000~\u0000\u0000\u0017"
+"\u00d5\"\u00c2ppsq\u0000~\u0000\u0000\u0017\tl\u0091ppsq\u0000~\u0000\u0000\u0014\u001dD\u00fappsq\u0000~\u0000\u0000\u0012=\u00e4\u00fcppsq\u0000~\u0000\u0000\fQ\u0004\u00feppsq\u0000~\u0000\u0000\t"
+"\u0013\u00ed\u0011ppsq\u0000~\u0000\u0000\u0007)O\u0095ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0001\u0002\u00d9\u00eeJppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003"
+"\u0002\u00d9\u00ee?sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun."
+"msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLco"
+"m/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~"
+"\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00d9\u00ee<q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0002\u00d9\u00ee1ppsq\u0000~\u0000\u0015\u0000v\u00e3\u008bpp\u0000sq\u0000~\u0000\u000e\u0000v\u00e3\u0080ppsq\u0000~"
+"\u0000\u0010\u0000v\u00e3uq\u0000~\u0000\u0014psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L"
+"\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0016xq\u0000~\u0000\u0003\u0000v\u00e3rq\u0000~\u0000\u0014psr\u00002com.sun.msv.g"
+"rammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq"
+"\u0000~\u0000\u0013\u0001q\u0000~\u0000 sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.g"
+"rammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000"
+"!psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocal"
+"Namet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000(xq\u0000~\u0000#t\u0000[de.tho"
+"rstenberger.examServer.dao.xml.jaxb.TaskHandlingType.Tasklet"
+"Type.CorrectorHistoryTypet\u0000+http://java.sun.com/jaxb/xjc/dum"
+"my-elementssq\u0000~\u0000\u000e\u0002c\n\u00a1ppsq\u0000~\u0000\u001d\u0002c\n\u0096q\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.gramm"
+"ar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;"
+"L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001"
+"\b\u001d>ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*co"
+"m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"
+"un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000(L\u0000\b"
+"typeNameq\u0000~\u0000(L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/White"
+"SpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QName"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB"
+"\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000(L\u0000\fnamespaceURIq\u0000~\u0000(xpq\u0000~\u00009q\u0000~\u00008sq\u0000~\u0000"
+"\'t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000&sq\u0000"
+"~\u0000\'t\u0000\u0010correctorHistoryt\u00000http://examServer.thorstenberger.de"
+"/taskHandlingq\u0000~\u0000&sq\u0000~\u0000\u000e\u0004OaFppsq\u0000~\u0000\u0010\u0004Oa;q\u0000~\u0000\u0014psq\u0000~\u0000\u0015\u0004Oa8q\u0000~\u0000"
+"\u0014p\u0000sq\u0000~\u0000\u0000\u0004Oa-ppsq\u0000~\u0000.\u0001y\u00dc\u00f4ppsr\u0000#com.sun.msv.datatype.xsd.Stri"
+"ngType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00003q\u0000~\u00008t\u0000\u0006stringsr\u00005com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000;\u0001q\u0000~\u0000>sq\u0000~\u0000?q\u0000~\u0000Nq\u0000~\u00008sq\u0000~\u0000\u000e\u0002\u00d5\u00844ppsq\u0000~\u0000\u001d\u0002\u00d5\u0084)q\u0000~\u0000\u0014pq\u0000~"
+"\u00001sq\u0000~\u0000\'q\u0000~\u0000Bq\u0000~\u0000Cq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0004flagq\u0000~\u0000Fq\u0000~\u0000&sq\u0000~\u0000\u000e\u0001\u00ea\u009dwppsq"
+"\u0000~\u0000\u0010\u0001\u00ea\u009dlq\u0000~\u0000\u0014psq\u0000~\u0000\u0015\u0001\u00ea\u009diq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0001\u00ea\u009d^ppsq\u0000~\u0000\u0015\u0000v\u00e3\u008bpp\u0000sq\u0000~"
+"\u0000\u000e\u0000v\u00e3\u0080ppsq\u0000~\u0000\u0010\u0000v\u00e3uq\u0000~\u0000\u0014psq\u0000~\u0000\u001d\u0000v\u00e3rq\u0000~\u0000\u0014pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000"
+"\'t\u0000^de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingTy"
+"pe.TaskletType.CorrectorAnnotationTypeq\u0000~\u0000+sq\u0000~\u0000\u000e\u0001s\u00b9\u00ceppsq\u0000~\u0000"
+"\u001d\u0001s\u00b9\u00c3q\u0000~\u0000\u0014pq\u0000~\u00001sq\u0000~\u0000\'q\u0000~\u0000Bq\u0000~\u0000Cq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0013correctorAnnot"
+"ationq\u0000~\u0000Fq\u0000~\u0000&sq\u0000~\u0000\u000e\u0003=\u0017\u00e8ppsq\u0000~\u0000\u0010\u0003=\u0017\u00ddq\u0000~\u0000\u0014psq\u0000~\u0000\u0015\u0003=\u0017\u00daq\u0000~\u0000\u0014p\u0000"
+"sq\u0000~\u0000\u0000\u0003=\u0017\u00cfppsq\u0000~\u0000\u0015\u0000v\u00e3\u008bpp\u0000sq\u0000~\u0000\u000e\u0000v\u00e3\u0080ppsq\u0000~\u0000\u0010\u0000v\u00e3uq\u0000~\u0000\u0014psq\u0000~\u0000\u001d\u0000"
+"v\u00e3rq\u0000~\u0000\u0014pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000\\de.thorstenberger.examServe"
+"r.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotatio"
+"nTypeq\u0000~\u0000+sq\u0000~\u0000\u000e\u0002\u00c64?ppsq\u0000~\u0000\u001d\u0002\u00c644q\u0000~\u0000\u0014pq\u0000~\u00001sq\u0000~\u0000\'q\u0000~\u0000Bq\u0000~\u0000Cq"
+"\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0011studentAnnotationq\u0000~\u0000Fq\u0000~\u0000&sq\u0000~\u0000\u000e\u0005\u00ec\u00df\u00f9ppsq\u0000~\u0000\u000e\u0005\u00ec"
+"\u00df\u00eeq\u0000~\u0000\u0014psq\u0000~\u0000\u0015\u0002\u00f0\u00f2nq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0002\u00f0\u00f2cppsq\u0000~\u0000\u0015\u0000v\u00e3\u008bpp\u0000sq\u0000~\u0000\u000e\u0000v\u00e3\u0080"
+"ppsq\u0000~\u0000\u0010\u0000v\u00e3uq\u0000~\u0000\u0014psq\u0000~\u0000\u001d\u0000v\u00e3rq\u0000~\u0000\u0014pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000Yde"
+".thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.Tas"
+"kletType.AutoCorrectionTypeq\u0000~\u0000+sq\u0000~\u0000\u000e\u0002z\u000e\u00d3ppsq\u0000~\u0000\u001d\u0002z\u000e\u00c8q\u0000~\u0000\u0014p"
+"q\u0000~\u00001sq\u0000~\u0000\'q\u0000~\u0000Bq\u0000~\u0000Cq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u000eautoCorrectionq\u0000~\u0000Fsq\u0000~\u0000\u0010"
+"\u0002\u00fb\u00ed~q\u0000~\u0000\u0014psq\u0000~\u0000\u0015\u0002\u00fb\u00ed{q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0002\u00fb\u00edpppsq\u0000~\u0000\u0015\u0000v\u00e3\u008bpp\u0000sq\u0000~\u0000\u000e\u0000v"
+"\u00e3\u0080ppsq\u0000~\u0000\u0010\u0000v\u00e3uq\u0000~\u0000\u0014psq\u0000~\u0000\u001d\u0000v\u00e3rq\u0000~\u0000\u0014pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000["
+"de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.T"
+"askletType.ManualCorrectionTypeq\u0000~\u0000+sq\u0000~\u0000\u000e\u0002\u0085\t\u00e0ppsq\u0000~\u0000\u001d\u0002\u0085\t\u00d5q\u0000"
+"~\u0000\u0014pq\u0000~\u00001sq\u0000~\u0000\'q\u0000~\u0000Bq\u0000~\u0000Cq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0010manualCorrectionq\u0000~\u0000F"
+"q\u0000~\u0000&sq\u0000~\u0000\u001d\u0001\u00df_\u00f9ppsq\u0000~\u0000.\u0000J\u00ebbppsr\u0000!com.sun.msv.datatype.xsd.Lo"
+"ngType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerived"
+"Type\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSD"
+"atatypeImpl;xq\u0000~\u00003q\u0000~\u00008t\u0000\u0004longq\u0000~\u0000<sr\u0000*com.sun.msv.datatype."
+"xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd"
+".RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009"
+"com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7R"
+"o\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0096L\u0000\f"
+"concreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfac"
+"etNameq\u0000~\u0000(xq\u0000~\u00005ppq\u0000~\u0000<\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinIn"
+"clusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u009appq\u0000~\u0000<\u0000\u0000sr\u0000$com.sun.msv.dataty"
+"pe.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0095q\u0000~\u00008t\u0000\u0007integerq\u0000~\u0000<sr\u0000,c"
+"om.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sca"
+"lexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraint"
+"FacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u009dppq\u0000~\u0000<\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd."
+"NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00003q\u0000~\u00008t\u0000\u0007decimalq\u0000~\u0000<q\u0000~\u0000\u00a9t\u0000\u000efract"
+"ionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00a3t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002"
+"\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u00a3t\u0000\fm"
+"axInclusivesq\u0000~\u0000\u00ad\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000>sq\u0000~\u0000?q\u0000~\u0000\u0098q\u0000~\u00008sq\u0000~\u0000\'t\u0000\u0002idt\u0000\u0000"
+"sq\u0000~\u0000\u001d\u0002\u00ec\'\u0092ppq\u0000~\u0000Ksq\u0000~\u0000\'t\u0000\u0006statusq\u0000~\u0000\u00b5sq\u0000~\u0000\u001d\u0000\u00cb\u00b6,ppq\u0000~\u0000\u0093sq\u0000~\u0000\'"
+"t\u0000\ttaskDefIdq\u0000~\u0000\u00b5sq\u0000~\u0000\u001d\u0002\u00fbC\u00dappq\u0000~\u0000Ksq\u0000~\u0000\'t\u0000\u0005loginq\u0000~\u0000\u00b5sq\u0000~\u0000\u000e\u0002"
+"\u00041\u008bppsq\u0000~\u0000\u001d\u0002\u00041\u0080q\u0000~\u0000\u0014pq\u0000~\u0000Ksq\u0000~\u0000\'t\u0000\u0011assignedCorrectorq\u0000~\u0000\u00b5q\u0000~"
+"\u0000&sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTab"
+"let\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-co"
+"m.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005cou"
+"ntI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00c4[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar"
+"/Expression;xp\u0000\u0000\u0000+\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;"
+"\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfq\u0000~\u0000Xppppppq\u0000~\u0000\u0019pppq\u0000~\u0000Wpq\u0000~\u0000Jq\u0000~\u0000\u001cq\u0000~\u0000]q\u0000~"
+"\u0000lq\u0000~\u0000{q\u0000~\u0000\u0089ppq\u0000~\u0000\u0012q\u0000~\u0000\u0006q\u0000~\u0000\u0086pq\u0000~\u0000\u001bq\u0000~\u0000\\q\u0000~\u0000Hq\u0000~\u0000kq\u0000~\u0000zq\u0000~\u0000\u0088"
+"q\u0000~\u0000\nq\u0000~\u0000\u000fppppq\u0000~\u0000\u0084q\u0000~\u0000Gppq\u0000~\u0000\u007fppppppppq\u0000~\u0000\u0007pppppppppppppppp"
+"ppppq\u0000~\u0000\u000bpppq\u0000~\u0000\rppppppq\u0000~\u0000xppppppppq\u0000~\u0000\fpq\u0000~\u0000\tpq\u0000~\u0000Rppppq\u0000~"
+"\u0000pppq\u0000~\u0000\u00bfpppppppppppppppq\u0000~\u0000\bpppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000vpppq\u0000~\u0000app"
+"ppq\u0000~\u0000ipq\u0000~\u0000upppppppppppq\u0000~\u0000gpq\u0000~\u0000,ppppppppq\u0000~\u0000fppppppq\u0000~\u0000\u008dp"
+"ppq\u0000~\u0000Zppppppppppppp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class AutoCorrectionTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected boolean has_Points;
            protected float _Points;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType.class);
            }

            public float getPoints() {
                return _Points;
            }

            public void setPoints(float value) {
                _Points = value;
                has_Points = true;
            }

            public boolean isSetPoints() {
                return has_Points;
            }

            public void unsetPoints() {
                has_Points = false;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.AutoCorrectionTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
                context.startAttribute("", "points");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Points)), "Points");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.AutoCorrectionType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Bool"
+"ean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0001xp\u0001{\u00c5\nppsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00ff\u008c\u0084ppsr\u0000"
+"\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.ms"
+"v.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Stri"
+"ng;L\u0000\btypeNameq\u0000~\u0000\u000fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd"
+"/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000"
+"\u0005floatsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Colla"
+"pse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPai"
+"r\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fxpq\u0000~\u0000\u0013q\u0000~\u0000"
+"\u0012sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fxr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006pointst\u0000\u0000sr\u0000\"com.sun.msv.grammar.Expression"
+"Pool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expression"
+"Pool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clo"
+"sedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000![\u0000\u0005table"
+"t\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0000\u0000\u0000\u00009pur\u0000![Lcom.sun"
+".msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.AutoCorrectionTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Points = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Points = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("points" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  2 :
                                if (("points" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  0 :
                                    attIdx = context.getAttribute("", "points");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    break;
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class CorrectorAnnotationTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Value;
            protected java.lang.String _Corrector;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType.class);
            }

            public java.lang.String getValue() {
                return _Value;
            }

            public void setValue(java.lang.String value) {
                _Value = value;
            }

            public boolean isSetValue() {
                return (_Value!= null);
            }

            public void unsetValue() {
                _Value = null;
            }

            public java.lang.String getCorrector() {
                return _Corrector;
            }

            public void setCorrector(java.lang.String value) {
                _Corrector = value;
            }

            public boolean isSetCorrector() {
                return (_Corrector!= null);
            }

            public void unsetCorrector() {
                _Corrector = null;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                try {
                    context.text(((java.lang.String) _Value), "Value");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startAttribute("", "corrector");
                try {
                    context.text(((java.lang.String) _Corrector), "Corrector");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorAnnotationType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004g\u00a6`ppsr\u0000\u001bcom.sun.msv.gra"
+"mmar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatyp"
+"e;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000"
+"\u0003\u0001y\u00dc\u00f4ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\r"
+"isAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000eL\u0000\nwhiteSpac"
+"et\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:"
+"//www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.ms"
+"v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\np"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000e"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000~\u0000\u0011sr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xq\u0000~\u0000\u0003\u0002\u00ed\u00c9gppq\u0000~\u0000\tsr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000e"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tcorrectort\u0000"
+"\u0000sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTabl"
+"et\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com"
+".sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005coun"
+"tI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000#[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/"
+"Expression;xp\u0000\u0000\u0000\u0001\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d6"
+"8D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "-----");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Corrector = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  2 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  4 :
                                    revertToParentFromText(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "corrector");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    break;
                                case  3 :
                                    eatText2(value);
                                    state = 4;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Value = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public static class CorrectorHistoryTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Corrector;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType.class);
            }

            public java.lang.String getCorrector() {
                return _Corrector;
            }

            public void setCorrector(java.lang.String value) {
                _Corrector = value;
            }

            public boolean isSetCorrector() {
                return (_Corrector!= null);
            }

            public void unsetCorrector() {
                _Corrector = null;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startAttribute("", "corrector");
                try {
                    context.text(((java.lang.String) _Corrector), "Corrector");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.CorrectorHistoryType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Bool"
+"ean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0001xp\u0001\u0086\r\tppsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001y\u00dc\u00f4ppsr\u0000"
+"#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysVa"
+"lidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"it\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000eL\u0000\nwhiteSpacet\u0000.Lcom/s"
+"un/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.o"
+"rg/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar."
+"Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.s"
+"un.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespa"
+"ceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000~\u0000\u0011sr\u0000#com.sun.msv.grammar.SimpleNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000exr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tcorrectort\u0000\u0000sr\u0000\"com.su"
+"n.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/su"
+"n/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gr"
+"ammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresho"
+"ldL\u0000\u0006parentq\u0000~\u0000 [\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000x"
+"p\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "----");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Corrector = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  0 :
                                    attIdx = context.getAttribute("", "corrector");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class ManualCorrectionTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.ManualCorrectionType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Corrector;
            protected boolean has_Points;
            protected float _Points;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.ManualCorrectionType.class);
            }

            public java.lang.String getCorrector() {
                return _Corrector;
            }

            public void setCorrector(java.lang.String value) {
                _Corrector = value;
            }

            public boolean isSetCorrector() {
                return (_Corrector!= null);
            }

            public void unsetCorrector() {
                _Corrector = null;
            }

            public float getPoints() {
                return _Points;
            }

            public void setPoints(float value) {
                _Points = value;
                has_Points = true;
            }

            public boolean isSetPoints() {
                return has_Points;
            }

            public void unsetPoints() {
                has_Points = false;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
                if (_Corrector!= null) {
                    context.startAttribute("", "corrector");
                    try {
                        context.text(((java.lang.String) _Corrector), "Corrector");
                    } catch (java.lang.Exception e) {
                        de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
                context.startAttribute("", "points");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Points)), "Points");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Points) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Points"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.ManualCorrectionType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004\u00a7|5ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00f4\u00e6\u0098ppsr\u0000 com.sun.msv.grammar"
+".AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/m"
+"sv/grammar/NameClass;xq\u0000~\u0000\u0003\u0002\u00f4\u00e6\u008dsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee"
+"\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
+"dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001y\u00dc\u00f4ppsr\u0000#com.sun.msv.dat"
+"atype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.m"
+"sv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv."
+"datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype"
+".xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/S"
+"tring;L\u0000\btypeNameq\u0000~\u0000\u0015L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
+"xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchem"
+"at\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$P"
+"reserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullS"
+"etExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.Stri"
+"ngPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xpq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u0018sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tl"
+"ocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xr\u0000\u001dcom.sun.msv.grammar.Nam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tcorrectort\u0000\u0000sr\u00000com.sun.msv.grammar.Ex"
+"pression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000b\u0001psq\u0000~\u0000"
+"\b\u0001\u00b2\u0095\u0098ppsq\u0000~\u0000\r\u0000\u00ff\u008c\u0084ppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c"
+"\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u0018t\u0000\u0005floatsr\u00005com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000.q\u0000~\u0000\u0018"
+"sq\u0000~\u0000!t\u0000\u0006pointsq\u0000~\u0000%sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$C"
+"losedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHas"
+"h\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u00005[\u0000\u0005tablet\u0000![Lc"
+"om/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0002\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.g"
+"rammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppq\u0000~\u0000\u0007"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Corrector = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Points = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Points = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                if (("points" == ___local)&&("" == ___uri)) {
                                    state = 4;
                                    return ;
                                }
                                break;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  5 :
                                if (("points" == ___local)&&("" == ___uri)) {
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("corrector" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  0 :
                                    attIdx = context.getAttribute("", "corrector");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  4 :
                                    eatText2(value);
                                    state = 5;
                                    return ;
                                case  3 :
                                    attIdx = context.getAttribute("", "points");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText2(v);
                                        state = 6;
                                        continue outer;
                                    }
                                    break;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class StudentAnnotationTypeImpl implements de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType, com.sun.xml.bind.JAXBObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Value;
            protected boolean has_Acknowledged;
            protected boolean _Acknowledged;
            protected boolean has_Date;
            protected long _Date;
            public final static java.lang.Class version = (de.thorstenberger.examServer.dao.xml.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType.class);
            }

            public java.lang.String getValue() {
                return _Value;
            }

            public void setValue(java.lang.String value) {
                _Value = value;
            }

            public boolean isSetValue() {
                return (_Value!= null);
            }

            public void unsetValue() {
                _Value = null;
            }

            public boolean isAcknowledged() {
                if (!has_Acknowledged) {
                    return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
                } else {
                    return _Acknowledged;
                }
            }

            public void setAcknowledged(boolean value) {
                _Acknowledged = value;
                has_Acknowledged = true;
            }

            public boolean isSetAcknowledged() {
                return has_Acknowledged;
            }

            public void unsetAcknowledged() {
                has_Acknowledged = false;
            }

            public long getDate() {
                return _Date;
            }

            public void setDate(long value) {
                _Date = value;
                has_Date = true;
            }

            public boolean isSetDate() {
                return has_Date;
            }

            public void unsetDate() {
                has_Date = false;
            }

            public de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                return new de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
                try {
                    context.text(((java.lang.String) _Value), "Value");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }

            public void serializeAttributes(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
                context.startAttribute("", "date");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _Date)), "Date");
                } catch (java.lang.Exception e) {
                    de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                if (has_Acknowledged) {
                    context.startAttribute("", "acknowledged");
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Acknowledged)), "Acknowledged");
                    } catch (java.lang.Exception e) {
                        de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
            }

            public void serializeURIs(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_Date) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Date"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (de.thorstenberger.examServer.dao.xml.jaxb.TaskHandlingType.TaskletType.StudentAnnotationType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u00056\u00efvppsq\u0000~\u0000\u0000\u0002\u00d6\f\u00bcppsr\u0000\u001bcom"
+".sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/data"
+"type/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Stri"
+"ngPair;xq\u0000~\u0000\u0003\u0001y\u00dc\u00f4ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Builti"
+"nAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000f"
+"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcesso"
+"r;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlo"
+"calNameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fxpq\u0000~\u0000\u0013q\u0000~\u0000\u0012sr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLco"
+"m/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003\u0001\\/\u00c3ppsq\u0000~\u0000\u0007\u0000J\u00ebbppsr\u0000!com."
+"sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.data"
+"type.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/s"
+"un/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\fq\u0000~\u0000\u0012t\u0000\u0004longsr\u00005com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0015sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlim"
+"itValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.Dat"
+"aTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.data"
+"type.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needV"
+"alueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000!L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/"
+"datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u000fxq\u0000~\u0000\u000eppq\u0000~\u0000%\u0000\u0001sr"
+"\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\'ppq\u0000~\u0000%\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000 q\u0000~\u0000\u0012t\u0000\u0007integerq\u0000~\u0000%sr\u0000,com.sun.msv.datatype.xsd.Frac"
+"tionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.x"
+"sd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000*ppq\u0000~\u0000"
+"%\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fq"
+"\u0000~\u0000\u0012t\u0000\u0007decimalq\u0000~\u0000%q\u0000~\u00006t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u00000t\u0000\fminIncl"
+"usivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Numb"
+"er\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u00000t\u0000\fmaxInclusivesq\u0000~\u0000:\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~"
+"\u0000\u0018sq\u0000~\u0000\u0019q\u0000~\u0000#q\u0000~\u0000\u0012sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000fL\u0000\fnamespaceURIq\u0000~\u0000\u000fxr\u0000\u001dcom.sun.msv"
+".grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004datet\u0000\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002`\u00e2\u00b5ppsq\u0000~\u0000\u001b\u0002`\u00e2\u00aasr\u0000\u0011java.lang"
+".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0007\u0001\u00c0\u00e4jppsr\u0000$com.sun.msv.d"
+"atatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fq\u0000~\u0000\u0012t\u0000\u0007booleanq\u0000~\u0000%"
+"q\u0000~\u0000\u0018sq\u0000~\u0000\u0019q\u0000~\u0000Mq\u0000~\u0000\u0012sq\u0000~\u0000@t\u0000\facknowledgedq\u0000~\u0000Dsr\u00000com.sun.m"
+"sv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\t"
+"sq\u0000~\u0000H\u0001psr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\b"
+"expTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xp"
+"sr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004"
+"I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000U[\u0000\u0005tablet\u0000![Lcom/sun/msv/g"
+"rammar/Expression;xp\u0000\u0000\u0000\u0003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expre"
+"ssion;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppq\u0000~\u0000Fpppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pq\u0000~\u0000\u0006ppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                    super(context, "--------");
                }

                protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  7 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 6;
                                    continue outer;
                                }
                                state = 6;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Date = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Date = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Acknowledged = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Acknowledged = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  7 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 6;
                                    continue outer;
                                }
                                state = 6;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("date" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  7 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                if (("acknowledged" == ___local)&&("" == ___uri)) {
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  2 :
                                if (("date" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  7 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  5 :
                                if (("acknowledged" == ___local)&&("" == ___uri)) {
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "acknowledged");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 6;
                                    continue outer;
                                }
                                state = 6;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  0 :
                                    attIdx = context.getAttribute("", "date");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText1(v);
                                        state = 3;
                                        continue outer;
                                    }
                                    break;
                                case  7 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  6 :
                                    eatText3(value);
                                    state = 7;
                                    return ;
                                case  3 :
                                    attIdx = context.getAttribute("", "acknowledged");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        eatText2(v);
                                        state = 6;
                                        continue outer;
                                    }
                                    state = 6;
                                    continue outer;
                                case  4 :
                                    eatText2(value);
                                    state = 5;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Value = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
                super(context, "---------------------------------");
            }

            protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 16;
                                return ;
                            }
                            state = 18;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 9;
                                continue outer;
                            }
                            break;
                        case  22 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  30 :
                            if (("manualCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 28;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  24 :
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 22;
                                return ;
                            }
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 25;
                                return ;
                            }
                            state = 27;
                            continue outer;
                        case  27 :
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 25;
                                return ;
                            }
                            if (("autoCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 31;
                                return ;
                            }
                            if (("manualCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 28;
                                return ;
                            }
                            state = 30;
                            continue outer;
                        case  18 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 16;
                                return ;
                            }
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            state = 21;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "assignedCorrector");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  25 :
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 12;
                                continue outer;
                            }
                            break;
                        case  21 :
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 22;
                                return ;
                            }
                            state = 24;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _TaskDefId = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_TaskDefId = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Id = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Id = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AssignedCorrector = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Status = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Login = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            state = 18;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 9;
                                continue outer;
                            }
                            break;
                        case  22 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  26 :
                            if (("studentAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 27;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  23 :
                            if (("correctorAnnotation" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 24;
                                return ;
                            }
                            break;
                        case  30 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  17 :
                            if (("correctorHistory" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 18;
                                return ;
                            }
                            break;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  20 :
                            if (("flag" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 21;
                                return ;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "assignedCorrector");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  29 :
                            if (("manualCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 30;
                                return ;
                            }
                            break;
                        case  32 :
                            if (("autoCorrection" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                                context.popAttributes();
                                state = 30;
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  25 :
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 12;
                                continue outer;
                            }
                            break;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            state = 18;
                            continue outer;
                        case  28 :
                            if (("corrector" == ___local)&&("" == ___uri)) {
                                _ManualCorrection.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl.class), 29, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("points" == ___local)&&("" == ___uri)) {
                                _ManualCorrection.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.ManualCorrectionTypeImpl.class), 29, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  6 :
                            if (("taskDefId" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            break;
                        case  22 :
                            if (("corrector" == ___local)&&("" == ___uri)) {
                                _CorrectorAnnotation.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorAnnotationTypeImpl.class), 23, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  30 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  12 :
                            if (("assignedCorrector" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            state = 15;
                            continue outer;
                        case  3 :
                            if (("status" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  25 :
                            if (("date" == ___local)&&("" == ___uri)) {
                                _StudentAnnotation.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.StudentAnnotationTypeImpl.class), 26, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  9 :
                            if (("login" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            break;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  16 :
                            if (("corrector" == ___local)&&("" == ___uri)) {
                                _CorrectorHistory.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.CorrectorHistoryTypeImpl.class), 17, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  31 :
                            if (("points" == ___local)&&("" == ___uri)) {
                                _AutoCorrection = ((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.AutoCorrectionTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.AutoCorrectionTypeImpl.class), 32, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            state = 18;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "taskDefId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 9;
                                continue outer;
                            }
                            break;
                        case  5 :
                            if (("status" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  22 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  30 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  14 :
                            if (("assignedCorrector" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "assignedCorrector");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  11 :
                            if (("login" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                        case  8 :
                            if (("taskDefId" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  25 :
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "login");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 12;
                                continue outer;
                            }
                            break;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  2 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  15 :
                                state = 18;
                                continue outer;
                            case  28 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  6 :
                                attIdx = context.getAttribute("", "taskDefId");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 9;
                                    continue outer;
                                }
                                break;
                            case  7 :
                                eatText1(value);
                                state = 8;
                                return ;
                            case  22 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  0 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText2(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  30 :
                                revertToParentFromText(value);
                                return ;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  10 :
                                eatText5(value);
                                state = 11;
                                return ;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  4 :
                                eatText4(value);
                                state = 5;
                                return ;
                            case  13 :
                                eatText3(value);
                                state = 14;
                                return ;
                            case  12 :
                                attIdx = context.getAttribute("", "assignedCorrector");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText3(v);
                                    state = 15;
                                    continue outer;
                                }
                                state = 15;
                                continue outer;
                            case  3 :
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText4(v);
                                    state = 6;
                                    continue outer;
                                }
                                break;
                            case  25 :
                                attIdx = context.getAttribute("", "date");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  9 :
                                attIdx = context.getAttribute("", "login");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText5(v);
                                    state = 12;
                                    continue outer;
                                }
                                break;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  1 :
                                eatText2(value);
                                state = 2;
                                return ;
                            case  16 :
                                attIdx = context.getAttribute("", "corrector");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  19 :
                                eatText6(value);
                                state = 20;
                                return ;
                            case  31 :
                                attIdx = context.getAttribute("", "points");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Flag.add(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(de.thorstenberger.examServer.dao.xml.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  3 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IdCount = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IdCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("tasklet" == ___local)&&("http://examServer.thorstenberger.de/taskHandling" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            _Tasklet.add(((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.examServer.dao.xml.jaxb.impl.TaskHandlingTypeImpl.TaskletTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("idCount" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("idCount" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "idCount");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "idCount");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
