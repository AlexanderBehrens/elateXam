//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-01/24/2006 06:08 PM(kohsuke)-fcs 
// 	See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// 	Any modifications to this file will be lost upon recompilation of the source schema. 
// 	Generated on: 2009.01.21 um 01:55:07 GMT+01:00 
//


package de.thorstenberger.taskmodel.complex.jaxb;


/**
 * Java content class for anonymous complex type.
 * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 32)
 * <p>
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="config">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element name="time" minOccurs="0">
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *                       &lt;minInclusive value="0"/>
 *                     &lt;/restriction>
 *                   &lt;/element>
 *                   &lt;element name="tries">
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *                       &lt;minInclusive value="1"/>
 *                     &lt;/restriction>
 *                   &lt;/element>
 *                   &lt;element name="tasksPerPage">
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *                       &lt;minInclusive value="1"/>
 *                     &lt;/restriction>
 *                   &lt;/element>
 *                   &lt;element name="kindnessExtensionTime" minOccurs="0">
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *                       &lt;minInclusive value="0"/>
 *                     &lt;/restriction>
 *                   &lt;/element>
 *                   &lt;element name="correctionMode" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;choice>
 *                             &lt;element name="regular">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;attribute name="value" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element name="correctOnlyProcessedTasks">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;attribute name="numberOfTasks" use="required">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *                                           &lt;minInclusive value="1"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element name="multipleCorrectors">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;attribute name="numberOfCorrectors" use="required">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *                                           &lt;minInclusive value="2"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                           &lt;/choice>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="ID" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="title" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="startText" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="showHandlingHintsBeforeStart" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="category" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;choice maxOccurs="unbounded">
 *                   &lt;element name="mcTaskBlock">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                           &lt;sequence>
 *                             &lt;element name="mc-config">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;choice>
 *                                       &lt;element name="regular">
 *                                         &lt;complexType>
 *                                           &lt;complexContent>
 *                                             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                               &lt;sequence>
 *                                                 &lt;element name="negativePoints">
 *                                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                                     &lt;minInclusive value="0"/>
 *                                                   &lt;/restriction>
 *                                                 &lt;/element>
 *                                               &lt;/sequence>
 *                                             &lt;/restriction>
 *                                           &lt;/complexContent>
 *                                         &lt;/complexType>
 *                                       &lt;/element>
 *                                       &lt;element name="different">
 *                                         &lt;complexType>
 *                                           &lt;complexContent>
 *                                             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                               &lt;sequence>
 *                                                 &lt;element name="correctAnswerNegativePoints">
 *                                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                                     &lt;minInclusive value="0"/>
 *                                                   &lt;/restriction>
 *                                                 &lt;/element>
 *                                                 &lt;element name="incorrectAnswerNegativePoints">
 *                                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                                     &lt;minInclusive value="0"/>
 *                                                   &lt;/restriction>
 *                                                 &lt;/element>
 *                                               &lt;/sequence>
 *                                             &lt;/restriction>
 *                                           &lt;/complexContent>
 *                                         &lt;/complexType>
 *                                       &lt;/element>
 *                                     &lt;/choice>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;choice maxOccurs="unbounded">
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef"/>
 *                               &lt;element name="choice">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;sequence>
 *                                         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
 *                                       &lt;/sequence>
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/extension>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="clozeTaskBlock">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                           &lt;sequence>
 *                             &lt;element name="cloze-config">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;attribute name="ignoreCase" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *                                     &lt;attribute name="negativePoints" use="required">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;choice maxOccurs="unbounded">
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef"/>
 *                               &lt;element name="choice">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;sequence>
 *                                         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
 *                                       &lt;/sequence>
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/extension>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="textTaskBlock">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                           &lt;sequence>
 *                             &lt;choice maxOccurs="unbounded">
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef"/>
 *                               &lt;element name="choice">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;sequence>
 *                                         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
 *                                       &lt;/sequence>
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/extension>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="mappingTaskBlock">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                           &lt;sequence>
 *                             &lt;element name="mapping-config">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;attribute name="negativePoints" use="required">
 *                                       &lt;simpleType>
 *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                           &lt;minInclusive value="0"/>
 *                                         &lt;/restriction>
 *                                       &lt;/simpleType>
 *                                     &lt;/attribute>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;choice maxOccurs="unbounded">
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef"/>
 *                               &lt;element name="choice">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;sequence>
 *                                         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
 *                                       &lt;/sequence>
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/extension>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="paintTaskBlock">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                           &lt;sequence>
 *                             &lt;choice maxOccurs="unbounded">
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef"/>
 *                               &lt;element name="choice">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;sequence>
 *                                         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
 *                                       &lt;/sequence>
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/extension>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="addonTaskBlock">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                           &lt;sequence>
 *                             &lt;choice maxOccurs="unbounded">
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef"/>
 *                               &lt;element name="choice">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;sequence>
 *                                         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
 *                                       &lt;/sequence>
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/extension>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/choice>
 *                 &lt;attribute name="id" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="ignoreOrderOfBlocks" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *                 &lt;attribute name="mixAllSubTasks" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *                 &lt;attribute name="tasksPerPage">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *                       &lt;minInclusive value="0"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="title" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="revisions" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="revision" maxOccurs="unbounded" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="author" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                           &lt;attribute name="date" type="{http://www.w3.org/2001/XMLSchema}long" />
 *                           &lt;attribute name="serialNumber" use="required" type="{http://www.w3.org/2001/XMLSchema}long" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 */
public interface ComplexTaskDefType {


    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getDescription();

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setDescription(java.lang.String value);

    boolean isSetDescription();

    void unsetDescription();

    /**
     * Tag should be used to track the editings of the whole ComplexTaskDef file, i.e.: Right before saving, the editor adds a new revision tag with an incremented serial number and the current author (derived from the OS user etc.)
     * 
     * @return
     *     possible object is
     *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.RevisionsType}
     */
    de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.RevisionsType getRevisions();

    /**
     * Tag should be used to track the editings of the whole ComplexTaskDef file, i.e.: Right before saving, the editor adds a new revision tag with an incremented serial number and the current author (derived from the OS user etc.)
     * 
     * @param value
     *     allowed object is
     *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.RevisionsType}
     */
    void setRevisions(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.RevisionsType value);

    boolean isSetRevisions();

    void unsetRevisions();

    /**
     * Divide subtask blocks into categories.
     * Attributes: title - name of the category (opt.)
     * preserveOrderOfBlocks - soll die Reihenfolge der Blöcke erhalten bleiben oder zufällig festgelegt werden?
     * mixAllSubTasks -  damit werden alle Aufgaben aus allen Blöcken in zufälliger Reihenfolge angeordnet, überschreibt preserveOrderOfBlocks und preserveOrder der Aufgaben in BlöckenGets the value of the Category property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the Category property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCategory().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType}
     * 
     */
    java.util.List getCategory();

    boolean isSetCategory();

    void unsetCategory();

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getTitle();

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setTitle(java.lang.String value);

    boolean isSetTitle();

    void unsetTitle();

    /**
     * Gets the value of the showHandlingHintsBeforeStart property.
     * 
     */
    boolean isShowHandlingHintsBeforeStart();

    /**
     * Sets the value of the showHandlingHintsBeforeStart property.
     * 
     */
    void setShowHandlingHintsBeforeStart(boolean value);

    boolean isSetShowHandlingHintsBeforeStart();

    void unsetShowHandlingHintsBeforeStart();

    /**
     * Gets the value of the startText property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getStartText();

    /**
     * Sets the value of the startText property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setStartText(java.lang.String value);

    boolean isSetStartText();

    void unsetStartText();

    /**
     * Gets the value of the config property.
     * 
     * @return
     *     possible object is
     *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType}
     */
    de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType getConfig();

    /**
     * Sets the value of the config property.
     * 
     * @param value
     *     allowed object is
     *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType}
     */
    void setConfig(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType value);

    boolean isSetConfig();

    void unsetConfig();

    /**
     * unique ID for identification reasons, should be defined by the editor and (for management purposes) organization-specific
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String}
     */
    java.lang.String getID();

    /**
     * unique ID for identification reasons, should be defined by the editor and (for management purposes) organization-specific
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String}
     */
    void setID(java.lang.String value);

    boolean isSetID();

    void unsetID();


    /**
     * Java content class for anonymous complex type.
     * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 138)
     * <p>
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice maxOccurs="unbounded">
     *         &lt;element name="mcTaskBlock">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *                 &lt;sequence>
     *                   &lt;element name="mc-config">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;choice>
     *                             &lt;element name="regular">
     *                               &lt;complexType>
     *                                 &lt;complexContent>
     *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                                     &lt;sequence>
     *                                       &lt;element name="negativePoints">
     *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                           &lt;minInclusive value="0"/>
     *                                         &lt;/restriction>
     *                                       &lt;/element>
     *                                     &lt;/sequence>
     *                                   &lt;/restriction>
     *                                 &lt;/complexContent>
     *                               &lt;/complexType>
     *                             &lt;/element>
     *                             &lt;element name="different">
     *                               &lt;complexType>
     *                                 &lt;complexContent>
     *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                                     &lt;sequence>
     *                                       &lt;element name="correctAnswerNegativePoints">
     *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                           &lt;minInclusive value="0"/>
     *                                         &lt;/restriction>
     *                                       &lt;/element>
     *                                       &lt;element name="incorrectAnswerNegativePoints">
     *                                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                           &lt;minInclusive value="0"/>
     *                                         &lt;/restriction>
     *                                       &lt;/element>
     *                                     &lt;/sequence>
     *                                   &lt;/restriction>
     *                                 &lt;/complexContent>
     *                               &lt;/complexType>
     *                             &lt;/element>
     *                           &lt;/choice>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;choice maxOccurs="unbounded">
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef"/>
     *                     &lt;element name="choice">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;sequence>
     *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
     *                             &lt;/sequence>
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/extension>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="clozeTaskBlock">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *                 &lt;sequence>
     *                   &lt;element name="cloze-config">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;attribute name="ignoreCase" type="{http://www.w3.org/2001/XMLSchema}boolean" />
     *                           &lt;attribute name="negativePoints" use="required">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;choice maxOccurs="unbounded">
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef"/>
     *                     &lt;element name="choice">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;sequence>
     *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
     *                             &lt;/sequence>
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/extension>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="textTaskBlock">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *                 &lt;sequence>
     *                   &lt;choice maxOccurs="unbounded">
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef"/>
     *                     &lt;element name="choice">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;sequence>
     *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
     *                             &lt;/sequence>
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/extension>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="mappingTaskBlock">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *                 &lt;sequence>
     *                   &lt;element name="mapping-config">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;attribute name="negativePoints" use="required">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                 &lt;minInclusive value="0"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;choice maxOccurs="unbounded">
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef"/>
     *                     &lt;element name="choice">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;sequence>
     *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
     *                             &lt;/sequence>
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/extension>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="paintTaskBlock">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *                 &lt;sequence>
     *                   &lt;choice maxOccurs="unbounded">
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef"/>
     *                     &lt;element name="choice">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;sequence>
     *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
     *                             &lt;/sequence>
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/extension>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="addonTaskBlock">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *                 &lt;sequence>
     *                   &lt;choice maxOccurs="unbounded">
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef"/>
     *                     &lt;element name="choice">
     *                       &lt;complexType>
     *                         &lt;complexContent>
     *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                             &lt;sequence>
     *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
     *                             &lt;/sequence>
     *                           &lt;/restriction>
     *                         &lt;/complexContent>
     *                       &lt;/complexType>
     *                     &lt;/element>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/extension>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/choice>
     *       &lt;attribute name="id" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="ignoreOrderOfBlocks" type="{http://www.w3.org/2001/XMLSchema}boolean" />
     *       &lt;attribute name="mixAllSubTasks" type="{http://www.w3.org/2001/XMLSchema}boolean" />
     *       &lt;attribute name="tasksPerPage">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
     *             &lt;minInclusive value="0"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="title" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     */
    public interface CategoryType {


        /**
         * Gets the value of the mixAllSubTasks property.
         * 
         */
        boolean isMixAllSubTasks();

        /**
         * Sets the value of the mixAllSubTasks property.
         * 
         */
        void setMixAllSubTasks(boolean value);

        boolean isSetMixAllSubTasks();

        void unsetMixAllSubTasks();

        /**
         * Gets the value of the McTaskBlockOrClozeTaskBlockOrTextTaskBlock property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the McTaskBlockOrClozeTaskBlockOrTextTaskBlock property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getMcTaskBlockOrClozeTaskBlockOrTextTaskBlock().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlock}
         * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlock}
         * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.AddonTaskBlock}
         * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlock}
         * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlock}
         * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlock}
         * 
         */
        java.util.List getMcTaskBlockOrClozeTaskBlockOrTextTaskBlock();

        boolean isSetMcTaskBlockOrClozeTaskBlockOrTextTaskBlock();

        void unsetMcTaskBlockOrClozeTaskBlockOrTextTaskBlock();

        /**
         * Gets the value of the ignoreOrderOfBlocks property.
         * 
         */
        boolean isIgnoreOrderOfBlocks();

        /**
         * Sets the value of the ignoreOrderOfBlocks property.
         * 
         */
        void setIgnoreOrderOfBlocks(boolean value);

        boolean isSetIgnoreOrderOfBlocks();

        void unsetIgnoreOrderOfBlocks();

        /**
         * Gets the value of the title property.
         * 
         * @return
         *     possible object is
         *     {@link java.lang.String}
         */
        java.lang.String getTitle();

        /**
         * Sets the value of the title property.
         * 
         * @param value
         *     allowed object is
         *     {@link java.lang.String}
         */
        void setTitle(java.lang.String value);

        boolean isSetTitle();

        void unsetTitle();

        /**
         * Gets the value of the tasksPerPage property.
         * 
         */
        int getTasksPerPage();

        /**
         * Sets the value of the tasksPerPage property.
         * 
         */
        void setTasksPerPage(int value);

        boolean isSetTasksPerPage();

        void unsetTasksPerPage();

        /**
         * Gets the value of the id property.
         * 
         * @return
         *     possible object is
         *     {@link java.lang.String}
         */
        java.lang.String getId();

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link java.lang.String}
         */
        void setId(java.lang.String value);

        boolean isSetId();

        void unsetId();


        /**
         * Java content class for addonTaskBlock element declaration.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 302)
         * <p>
         * <pre>
         * &lt;element name="addonTaskBlock">
         *   &lt;complexType>
         *     &lt;complexContent>
         *       &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *         &lt;sequence>
         *           &lt;choice maxOccurs="unbounded">
         *             &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef"/>
         *             &lt;element name="choice">
         *               &lt;complexType>
         *                 &lt;complexContent>
         *                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                     &lt;sequence>
         *                       &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
         *                     &lt;/sequence>
         *                   &lt;/restriction>
         *                 &lt;/complexContent>
         *               &lt;/complexType>
         *             &lt;/element>
         *           &lt;/choice>
         *         &lt;/sequence>
         *       &lt;/extension>
         *     &lt;/complexContent>
         *   &lt;/complexType>
         * &lt;/element>
         * </pre>
         * 
         */
        public interface AddonTaskBlock
            extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.AddonTaskBlockType
        {


        }


        /**
         * Java content class for anonymous complex type.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 303)
         * <p>
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *       &lt;sequence>
         *         &lt;choice maxOccurs="unbounded">
         *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef"/>
         *           &lt;element name="choice">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;sequence>
         *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
         *                   &lt;/sequence>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/extension>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         */
        public interface AddonTaskBlockType
            extends de.thorstenberger.taskmodel.complex.jaxb.TaskBlockType
        {


            /**
             * Gets the value of the AddonSubTaskDefOrChoice property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the AddonSubTaskDefOrChoice property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getAddonSubTaskDefOrChoice().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.AddonTaskBlockType.Choice}
             * {@link de.thorstenberger.taskmodel.complex.jaxb.AddonSubTaskDef}
             * 
             */
            java.util.List getAddonSubTaskDefOrChoice();

            boolean isSetAddonSubTaskDefOrChoice();

            void unsetAddonSubTaskDefOrChoice();


            /**
             * Java content class for choice element declaration.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 309)
             * <p>
             * <pre>
             * &lt;element name="choice">
             *   &lt;complexType>
             *     &lt;complexContent>
             *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *         &lt;sequence>
             *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
             *         &lt;/sequence>
             *       &lt;/restriction>
             *     &lt;/complexContent>
             *   &lt;/complexType>
             * &lt;/element>
             * </pre>
             * 
             */
            public interface Choice
                extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.AddonTaskBlockType.ChoiceType
            {


            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 310)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface ChoiceType {


                /**
                 * Gets the value of the AddonSubTaskDef property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the AddonSubTaskDef property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getAddonSubTaskDef().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.AddonSubTaskDefType}
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.AddonSubTaskDef}
                 * 
                 */
                java.util.List getAddonSubTaskDef();

                boolean isSetAddonSubTaskDef();

                void unsetAddonSubTaskDef();

            }

        }


        /**
         * Java content class for clozeTaskBlock element declaration.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 199)
         * <p>
         * <pre>
         * &lt;element name="clozeTaskBlock">
         *   &lt;complexType>
         *     &lt;complexContent>
         *       &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *         &lt;sequence>
         *           &lt;element name="cloze-config">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;attribute name="ignoreCase" type="{http://www.w3.org/2001/XMLSchema}boolean" />
         *                   &lt;attribute name="negativePoints" use="required">
         *                     &lt;simpleType>
         *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                         &lt;minInclusive value="0"/>
         *                       &lt;/restriction>
         *                     &lt;/simpleType>
         *                   &lt;/attribute>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *           &lt;choice maxOccurs="unbounded">
         *             &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef"/>
         *             &lt;element name="choice">
         *               &lt;complexType>
         *                 &lt;complexContent>
         *                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                     &lt;sequence>
         *                       &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
         *                     &lt;/sequence>
         *                   &lt;/restriction>
         *                 &lt;/complexContent>
         *               &lt;/complexType>
         *             &lt;/element>
         *           &lt;/choice>
         *         &lt;/sequence>
         *       &lt;/extension>
         *     &lt;/complexContent>
         *   &lt;/complexType>
         * &lt;/element>
         * </pre>
         * 
         */
        public interface ClozeTaskBlock
            extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType
        {


        }


        /**
         * Java content class for anonymous complex type.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 200)
         * <p>
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *       &lt;sequence>
         *         &lt;element name="cloze-config">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;attribute name="ignoreCase" type="{http://www.w3.org/2001/XMLSchema}boolean" />
         *                 &lt;attribute name="negativePoints" use="required">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;choice maxOccurs="unbounded">
         *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef"/>
         *           &lt;element name="choice">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;sequence>
         *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
         *                   &lt;/sequence>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/extension>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         */
        public interface ClozeTaskBlockType
            extends de.thorstenberger.taskmodel.complex.jaxb.TaskBlockType
        {


            /**
             * Gets the value of the ClozeSubTaskDefOrChoice property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the ClozeSubTaskDefOrChoice property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getClozeSubTaskDefOrChoice().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.Choice}
             * {@link de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDef}
             * 
             */
            java.util.List getClozeSubTaskDefOrChoice();

            boolean isSetClozeSubTaskDefOrChoice();

            void unsetClozeSubTaskDefOrChoice();

            /**
             * Gets the value of the clozeConfig property.
             * 
             * @return
             *     possible object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ClozeConfigType}
             */
            de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ClozeConfigType getClozeConfig();

            /**
             * Sets the value of the clozeConfig property.
             * 
             * @param value
             *     allowed object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ClozeConfigType}
             */
            void setClozeConfig(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ClozeConfigType value);

            boolean isSetClozeConfig();

            void unsetClozeConfig();


            /**
             * Java content class for choice element declaration.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 218)
             * <p>
             * <pre>
             * &lt;element name="choice">
             *   &lt;complexType>
             *     &lt;complexContent>
             *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *         &lt;sequence>
             *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
             *         &lt;/sequence>
             *       &lt;/restriction>
             *     &lt;/complexContent>
             *   &lt;/complexType>
             * &lt;/element>
             * </pre>
             * 
             */
            public interface Choice
                extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ChoiceType
            {


            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 219)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface ChoiceType {


                /**
                 * Gets the value of the ClozeSubTaskDef property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the ClozeSubTaskDef property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getClozeSubTaskDef().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType}
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDef}
                 * 
                 */
                java.util.List getClozeSubTaskDef();

                boolean isSetClozeSubTaskDef();

                void unsetClozeSubTaskDef();

            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 205)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attribute name="ignoreCase" type="{http://www.w3.org/2001/XMLSchema}boolean" />
             *       &lt;attribute name="negativePoints" use="required">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface ClozeConfigType {


                /**
                 * Gets the value of the ignoreCase property.
                 * 
                 */
                boolean isIgnoreCase();

                /**
                 * Sets the value of the ignoreCase property.
                 * 
                 */
                void setIgnoreCase(boolean value);

                boolean isSetIgnoreCase();

                void unsetIgnoreCase();

                /**
                 * Gets the value of the negativePoints property.
                 * 
                 */
                float getNegativePoints();

                /**
                 * Sets the value of the negativePoints property.
                 * 
                 */
                void setNegativePoints(float value);

                boolean isSetNegativePoints();

                void unsetNegativePoints();

            }

        }


        /**
         * Java content class for mappingTaskBlock element declaration.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 251)
         * <p>
         * <pre>
         * &lt;element name="mappingTaskBlock">
         *   &lt;complexType>
         *     &lt;complexContent>
         *       &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *         &lt;sequence>
         *           &lt;element name="mapping-config">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;attribute name="negativePoints" use="required">
         *                     &lt;simpleType>
         *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                         &lt;minInclusive value="0"/>
         *                       &lt;/restriction>
         *                     &lt;/simpleType>
         *                   &lt;/attribute>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *           &lt;choice maxOccurs="unbounded">
         *             &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef"/>
         *             &lt;element name="choice">
         *               &lt;complexType>
         *                 &lt;complexContent>
         *                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                     &lt;sequence>
         *                       &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
         *                     &lt;/sequence>
         *                   &lt;/restriction>
         *                 &lt;/complexContent>
         *               &lt;/complexType>
         *             &lt;/element>
         *           &lt;/choice>
         *         &lt;/sequence>
         *       &lt;/extension>
         *     &lt;/complexContent>
         *   &lt;/complexType>
         * &lt;/element>
         * </pre>
         * 
         */
        public interface MappingTaskBlock
            extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType
        {


        }


        /**
         * Java content class for anonymous complex type.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 252)
         * <p>
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *       &lt;sequence>
         *         &lt;element name="mapping-config">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;attribute name="negativePoints" use="required">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                       &lt;minInclusive value="0"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;choice maxOccurs="unbounded">
         *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef"/>
         *           &lt;element name="choice">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;sequence>
         *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
         *                   &lt;/sequence>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/extension>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         */
        public interface MappingTaskBlockType
            extends de.thorstenberger.taskmodel.complex.jaxb.TaskBlockType
        {


            /**
             * Gets the value of the MappingSubTaskDefOrChoice property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the MappingSubTaskDefOrChoice property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getMappingSubTaskDefOrChoice().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDef}
             * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.Choice}
             * 
             */
            java.util.List getMappingSubTaskDefOrChoice();

            boolean isSetMappingSubTaskDefOrChoice();

            void unsetMappingSubTaskDefOrChoice();

            /**
             * Gets the value of the mappingConfig property.
             * 
             * @return
             *     possible object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.MappingConfigType}
             */
            de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.MappingConfigType getMappingConfig();

            /**
             * Sets the value of the mappingConfig property.
             * 
             * @param value
             *     allowed object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.MappingConfigType}
             */
            void setMappingConfig(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.MappingConfigType value);

            boolean isSetMappingConfig();

            void unsetMappingConfig();


            /**
             * Java content class for choice element declaration.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 269)
             * <p>
             * <pre>
             * &lt;element name="choice">
             *   &lt;complexType>
             *     &lt;complexContent>
             *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *         &lt;sequence>
             *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
             *         &lt;/sequence>
             *       &lt;/restriction>
             *     &lt;/complexContent>
             *   &lt;/complexType>
             * &lt;/element>
             * </pre>
             * 
             */
            public interface Choice
                extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.ChoiceType
            {


            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 270)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface ChoiceType {


                /**
                 * Gets the value of the MappingSubTaskDef property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the MappingSubTaskDef property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getMappingSubTaskDef().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDef}
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDefType}
                 * 
                 */
                java.util.List getMappingSubTaskDef();

                boolean isSetMappingSubTaskDef();

                void unsetMappingSubTaskDef();

            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 257)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attribute name="negativePoints" use="required">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *             &lt;minInclusive value="0"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface MappingConfigType {


                /**
                 * Gets the value of the negativePoints property.
                 * 
                 */
                float getNegativePoints();

                /**
                 * Sets the value of the negativePoints property.
                 * 
                 */
                void setNegativePoints(float value);

                boolean isSetNegativePoints();

                void unsetNegativePoints();

            }

        }


        /**
         * Java content class for mcTaskBlock element declaration.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 140)
         * <p>
         * <pre>
         * &lt;element name="mcTaskBlock">
         *   &lt;complexType>
         *     &lt;complexContent>
         *       &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *         &lt;sequence>
         *           &lt;element name="mc-config">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;choice>
         *                     &lt;element name="regular">
         *                       &lt;complexType>
         *                         &lt;complexContent>
         *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                             &lt;sequence>
         *                               &lt;element name="negativePoints">
         *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                                   &lt;minInclusive value="0"/>
         *                                 &lt;/restriction>
         *                               &lt;/element>
         *                             &lt;/sequence>
         *                           &lt;/restriction>
         *                         &lt;/complexContent>
         *                       &lt;/complexType>
         *                     &lt;/element>
         *                     &lt;element name="different">
         *                       &lt;complexType>
         *                         &lt;complexContent>
         *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                             &lt;sequence>
         *                               &lt;element name="correctAnswerNegativePoints">
         *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                                   &lt;minInclusive value="0"/>
         *                                 &lt;/restriction>
         *                               &lt;/element>
         *                               &lt;element name="incorrectAnswerNegativePoints">
         *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                                   &lt;minInclusive value="0"/>
         *                                 &lt;/restriction>
         *                               &lt;/element>
         *                             &lt;/sequence>
         *                           &lt;/restriction>
         *                         &lt;/complexContent>
         *                       &lt;/complexType>
         *                     &lt;/element>
         *                   &lt;/choice>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *           &lt;choice maxOccurs="unbounded">
         *             &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef"/>
         *             &lt;element name="choice">
         *               &lt;complexType>
         *                 &lt;complexContent>
         *                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                     &lt;sequence>
         *                       &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
         *                     &lt;/sequence>
         *                   &lt;/restriction>
         *                 &lt;/complexContent>
         *               &lt;/complexType>
         *             &lt;/element>
         *           &lt;/choice>
         *         &lt;/sequence>
         *       &lt;/extension>
         *     &lt;/complexContent>
         *   &lt;/complexType>
         * &lt;/element>
         * </pre>
         * 
         */
        public interface McTaskBlock
            extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType
        {


        }


        /**
         * Java content class for anonymous complex type.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 141)
         * <p>
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *       &lt;sequence>
         *         &lt;element name="mc-config">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;choice>
         *                   &lt;element name="regular">
         *                     &lt;complexType>
         *                       &lt;complexContent>
         *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                           &lt;sequence>
         *                             &lt;element name="negativePoints">
         *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                                 &lt;minInclusive value="0"/>
         *                               &lt;/restriction>
         *                             &lt;/element>
         *                           &lt;/sequence>
         *                         &lt;/restriction>
         *                       &lt;/complexContent>
         *                     &lt;/complexType>
         *                   &lt;/element>
         *                   &lt;element name="different">
         *                     &lt;complexType>
         *                       &lt;complexContent>
         *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                           &lt;sequence>
         *                             &lt;element name="correctAnswerNegativePoints">
         *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                                 &lt;minInclusive value="0"/>
         *                               &lt;/restriction>
         *                             &lt;/element>
         *                             &lt;element name="incorrectAnswerNegativePoints">
         *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                                 &lt;minInclusive value="0"/>
         *                               &lt;/restriction>
         *                             &lt;/element>
         *                           &lt;/sequence>
         *                         &lt;/restriction>
         *                       &lt;/complexContent>
         *                     &lt;/complexType>
         *                   &lt;/element>
         *                 &lt;/choice>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;choice maxOccurs="unbounded">
         *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef"/>
         *           &lt;element name="choice">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;sequence>
         *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
         *                   &lt;/sequence>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/extension>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         */
        public interface McTaskBlockType
            extends de.thorstenberger.taskmodel.complex.jaxb.TaskBlockType
        {


            /**
             * Gets the value of the McSubTaskDefOrChoice property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the McSubTaskDefOrChoice property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getMcSubTaskDefOrChoice().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDef}
             * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.Choice}
             * 
             */
            java.util.List getMcSubTaskDefOrChoice();

            boolean isSetMcSubTaskDefOrChoice();

            void unsetMcSubTaskDefOrChoice();

            /**
             * Gets the value of the mcConfig property.
             * 
             * @return
             *     possible object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType}
             */
            de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType getMcConfig();

            /**
             * Sets the value of the mcConfig property.
             * 
             * @param value
             *     allowed object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType}
             */
            void setMcConfig(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType value);

            boolean isSetMcConfig();

            void unsetMcConfig();


            /**
             * Java content class for choice element declaration.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 186)
             * <p>
             * <pre>
             * &lt;element name="choice">
             *   &lt;complexType>
             *     &lt;complexContent>
             *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *         &lt;sequence>
             *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
             *         &lt;/sequence>
             *       &lt;/restriction>
             *     &lt;/complexContent>
             *   &lt;/complexType>
             * &lt;/element>
             * </pre>
             * 
             */
            public interface Choice
                extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.ChoiceType
            {


            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 187)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface ChoiceType {


                /**
                 * Gets the value of the McSubTaskDef property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the McSubTaskDef property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getMcSubTaskDef().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDef}
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDefType}
                 * 
                 */
                java.util.List getMcSubTaskDef();

                boolean isSetMcSubTaskDef();

                void unsetMcSubTaskDef();

            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 146)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;choice>
             *         &lt;element name="regular">
             *           &lt;complexType>
             *             &lt;complexContent>
             *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *                 &lt;sequence>
             *                   &lt;element name="negativePoints">
             *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *                       &lt;minInclusive value="0"/>
             *                     &lt;/restriction>
             *                   &lt;/element>
             *                 &lt;/sequence>
             *               &lt;/restriction>
             *             &lt;/complexContent>
             *           &lt;/complexType>
             *         &lt;/element>
             *         &lt;element name="different">
             *           &lt;complexType>
             *             &lt;complexContent>
             *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *                 &lt;sequence>
             *                   &lt;element name="correctAnswerNegativePoints">
             *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *                       &lt;minInclusive value="0"/>
             *                     &lt;/restriction>
             *                   &lt;/element>
             *                   &lt;element name="incorrectAnswerNegativePoints">
             *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *                       &lt;minInclusive value="0"/>
             *                     &lt;/restriction>
             *                   &lt;/element>
             *                 &lt;/sequence>
             *               &lt;/restriction>
             *             &lt;/complexContent>
             *           &lt;/complexType>
             *         &lt;/element>
             *       &lt;/choice>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface McConfigType {


                /**
                 * Gets the value of the regular property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.RegularType}
                 */
                de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.RegularType getRegular();

                /**
                 * Sets the value of the regular property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.RegularType}
                 */
                void setRegular(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.RegularType value);

                boolean isSetRegular();

                void unsetRegular();

                /**
                 * Gets the value of the different property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.DifferentType}
                 */
                de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.DifferentType getDifferent();

                /**
                 * Sets the value of the different property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.DifferentType}
                 */
                void setDifferent(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.DifferentType value);

                boolean isSetDifferent();

                void unsetDifferent();


                /**
                 * Java content class for anonymous complex type.
                 * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 162)
                 * <p>
                 * <pre>
                 * &lt;complexType>
                 *   &lt;complexContent>
                 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
                 *       &lt;sequence>
                 *         &lt;element name="correctAnswerNegativePoints">
                 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
                 *             &lt;minInclusive value="0"/>
                 *           &lt;/restriction>
                 *         &lt;/element>
                 *         &lt;element name="incorrectAnswerNegativePoints">
                 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
                 *             &lt;minInclusive value="0"/>
                 *           &lt;/restriction>
                 *         &lt;/element>
                 *       &lt;/sequence>
                 *     &lt;/restriction>
                 *   &lt;/complexContent>
                 * &lt;/complexType>
                 * </pre>
                 * 
                 */
                public interface DifferentType {


                    /**
                     * Gets the value of the correctAnswerNegativePoints property.
                     * 
                     */
                    float getCorrectAnswerNegativePoints();

                    /**
                     * Sets the value of the correctAnswerNegativePoints property.
                     * 
                     */
                    void setCorrectAnswerNegativePoints(float value);

                    boolean isSetCorrectAnswerNegativePoints();

                    void unsetCorrectAnswerNegativePoints();

                    /**
                     * Gets the value of the incorrectAnswerNegativePoints property.
                     * 
                     */
                    float getIncorrectAnswerNegativePoints();

                    /**
                     * Sets the value of the incorrectAnswerNegativePoints property.
                     * 
                     */
                    void setIncorrectAnswerNegativePoints(float value);

                    boolean isSetIncorrectAnswerNegativePoints();

                    void unsetIncorrectAnswerNegativePoints();

                }


                /**
                 * Java content class for anonymous complex type.
                 * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 149)
                 * <p>
                 * <pre>
                 * &lt;complexType>
                 *   &lt;complexContent>
                 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
                 *       &lt;sequence>
                 *         &lt;element name="negativePoints">
                 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
                 *             &lt;minInclusive value="0"/>
                 *           &lt;/restriction>
                 *         &lt;/element>
                 *       &lt;/sequence>
                 *     &lt;/restriction>
                 *   &lt;/complexContent>
                 * &lt;/complexType>
                 * </pre>
                 * 
                 */
                public interface RegularType {


                    /**
                     * Gets the value of the negativePoints property.
                     * 
                     */
                    float getNegativePoints();

                    /**
                     * Sets the value of the negativePoints property.
                     * 
                     */
                    void setNegativePoints(float value);

                    boolean isSetNegativePoints();

                    void unsetNegativePoints();

                }

            }

        }


        /**
         * Java content class for paintTaskBlock element declaration.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 282)
         * <p>
         * <pre>
         * &lt;element name="paintTaskBlock">
         *   &lt;complexType>
         *     &lt;complexContent>
         *       &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *         &lt;sequence>
         *           &lt;choice maxOccurs="unbounded">
         *             &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef"/>
         *             &lt;element name="choice">
         *               &lt;complexType>
         *                 &lt;complexContent>
         *                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                     &lt;sequence>
         *                       &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
         *                     &lt;/sequence>
         *                   &lt;/restriction>
         *                 &lt;/complexContent>
         *               &lt;/complexType>
         *             &lt;/element>
         *           &lt;/choice>
         *         &lt;/sequence>
         *       &lt;/extension>
         *     &lt;/complexContent>
         *   &lt;/complexType>
         * &lt;/element>
         * </pre>
         * 
         */
        public interface PaintTaskBlock
            extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType
        {


        }


        /**
         * Java content class for anonymous complex type.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 283)
         * <p>
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *       &lt;sequence>
         *         &lt;choice maxOccurs="unbounded">
         *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef"/>
         *           &lt;element name="choice">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;sequence>
         *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
         *                   &lt;/sequence>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/extension>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         */
        public interface PaintTaskBlockType
            extends de.thorstenberger.taskmodel.complex.jaxb.TaskBlockType
        {


            /**
             * Gets the value of the PaintSubTaskDefOrChoice property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the PaintSubTaskDefOrChoice property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getPaintSubTaskDefOrChoice().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDef}
             * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType.Choice}
             * 
             */
            java.util.List getPaintSubTaskDefOrChoice();

            boolean isSetPaintSubTaskDefOrChoice();

            void unsetPaintSubTaskDefOrChoice();


            /**
             * Java content class for choice element declaration.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 289)
             * <p>
             * <pre>
             * &lt;element name="choice">
             *   &lt;complexType>
             *     &lt;complexContent>
             *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *         &lt;sequence>
             *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
             *         &lt;/sequence>
             *       &lt;/restriction>
             *     &lt;/complexContent>
             *   &lt;/complexType>
             * &lt;/element>
             * </pre>
             * 
             */
            public interface Choice
                extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType.ChoiceType
            {


            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 290)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface ChoiceType {


                /**
                 * Gets the value of the PaintSubTaskDef property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the PaintSubTaskDef property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getPaintSubTaskDef().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDef}
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDefType}
                 * 
                 */
                java.util.List getPaintSubTaskDef();

                boolean isSetPaintSubTaskDef();

                void unsetPaintSubTaskDef();

            }

        }


        /**
         * Java content class for textTaskBlock element declaration.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 231)
         * <p>
         * <pre>
         * &lt;element name="textTaskBlock">
         *   &lt;complexType>
         *     &lt;complexContent>
         *       &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *         &lt;sequence>
         *           &lt;choice maxOccurs="unbounded">
         *             &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef"/>
         *             &lt;element name="choice">
         *               &lt;complexType>
         *                 &lt;complexContent>
         *                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                     &lt;sequence>
         *                       &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
         *                     &lt;/sequence>
         *                   &lt;/restriction>
         *                 &lt;/complexContent>
         *               &lt;/complexType>
         *             &lt;/element>
         *           &lt;/choice>
         *         &lt;/sequence>
         *       &lt;/extension>
         *     &lt;/complexContent>
         *   &lt;/complexType>
         * &lt;/element>
         * </pre>
         * 
         */
        public interface TextTaskBlock
            extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType
        {


        }


        /**
         * Java content class for anonymous complex type.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 232)
         * <p>
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
         *       &lt;sequence>
         *         &lt;choice maxOccurs="unbounded">
         *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef"/>
         *           &lt;element name="choice">
         *             &lt;complexType>
         *               &lt;complexContent>
         *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                   &lt;sequence>
         *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
         *                   &lt;/sequence>
         *                 &lt;/restriction>
         *               &lt;/complexContent>
         *             &lt;/complexType>
         *           &lt;/element>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/extension>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         */
        public interface TextTaskBlockType
            extends de.thorstenberger.taskmodel.complex.jaxb.TaskBlockType
        {


            /**
             * Gets the value of the TextSubTaskDefOrChoice property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the TextSubTaskDefOrChoice property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getTextSubTaskDefOrChoice().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link de.thorstenberger.taskmodel.complex.jaxb.TextSubTaskDef}
             * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType.Choice}
             * 
             */
            java.util.List getTextSubTaskDefOrChoice();

            boolean isSetTextSubTaskDefOrChoice();

            void unsetTextSubTaskDefOrChoice();


            /**
             * Java content class for choice element declaration.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 238)
             * <p>
             * <pre>
             * &lt;element name="choice">
             *   &lt;complexType>
             *     &lt;complexContent>
             *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *         &lt;sequence>
             *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
             *         &lt;/sequence>
             *       &lt;/restriction>
             *     &lt;/complexContent>
             *   &lt;/complexType>
             * &lt;/element>
             * </pre>
             * 
             */
            public interface Choice
                extends javax.xml.bind.Element, de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType.ChoiceType
            {


            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 239)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface ChoiceType {


                /**
                 * Gets the value of the TextSubTaskDef property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the TextSubTaskDef property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getTextSubTaskDef().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.TextSubTaskDef}
                 * {@link de.thorstenberger.taskmodel.complex.jaxb.TextSubTaskDefType}
                 * 
                 */
                java.util.List getTextSubTaskDef();

                boolean isSetTextSubTaskDef();

                void unsetTextSubTaskDef();

            }

        }

    }


    /**
     * Java content class for anonymous complex type.
     * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 35)
     * <p>
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element name="time" minOccurs="0">
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
     *             &lt;minInclusive value="0"/>
     *           &lt;/restriction>
     *         &lt;/element>
     *         &lt;element name="tries">
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
     *             &lt;minInclusive value="1"/>
     *           &lt;/restriction>
     *         &lt;/element>
     *         &lt;element name="tasksPerPage">
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
     *             &lt;minInclusive value="1"/>
     *           &lt;/restriction>
     *         &lt;/element>
     *         &lt;element name="kindnessExtensionTime" minOccurs="0">
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
     *             &lt;minInclusive value="0"/>
     *           &lt;/restriction>
     *         &lt;/element>
     *         &lt;element name="correctionMode" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;choice>
     *                   &lt;element name="regular">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;attribute name="value" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="correctOnlyProcessedTasks">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;attribute name="numberOfTasks" use="required">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
     *                                 &lt;minInclusive value="1"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="multipleCorrectors">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;attribute name="numberOfCorrectors" use="required">
     *                             &lt;simpleType>
     *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
     *                                 &lt;minInclusive value="2"/>
     *                               &lt;/restriction>
     *                             &lt;/simpleType>
     *                           &lt;/attribute>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                 &lt;/choice>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     */
    public interface ConfigType {


        /**
         * Number of possible tries to solve the task.
         * Every new try results in a random aggregation of subtasks (and possibly answer combinations)
         * 
         */
        int getTries();

        /**
         * Number of possible tries to solve the task.
         * Every new try results in a random aggregation of subtasks (and possibly answer combinations)
         * 
         */
        void setTries(int value);

        boolean isSetTries();

        void unsetTries();

        /**
         * available time in minutes to solve the task,
         * unbounded if left empty
         * 
         */
        int getTime();

        /**
         * available time in minutes to solve the task,
         * unbounded if left empty
         * 
         */
        void setTime(int value);

        boolean isSetTime();

        void unsetTime();

        /**
         * Gets the value of the correctionMode property.
         * 
         * @return
         *     possible object is
         *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType}
         */
        de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType getCorrectionMode();

        /**
         * Sets the value of the correctionMode property.
         * 
         * @param value
         *     allowed object is
         *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType}
         */
        void setCorrectionMode(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType value);

        boolean isSetCorrectionMode();

        void unsetCorrectionMode();

        /**
         * Number of tasks that are rendered per page, therefore implies the number of pages.
         * 
         */
        int getTasksPerPage();

        /**
         * Number of tasks that are rendered per page, therefore implies the number of pages.
         * 
         */
        void setTasksPerPage(int value);

        boolean isSetTasksPerPage();

        void unsetTasksPerPage();

        /**
         * Kindness extension in minutes. After expiration of the official processing time, the student can still edit his solution until this time expires.
         * 
         */
        int getKindnessExtensionTime();

        /**
         * Kindness extension in minutes. After expiration of the official processing time, the student can still edit his solution until this time expires.
         * 
         */
        void setKindnessExtensionTime(int value);

        boolean isSetKindnessExtensionTime();

        void unsetKindnessExtensionTime();


        /**
         * Java content class for anonymous complex type.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 80)
         * <p>
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;choice>
         *         &lt;element name="regular">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;attribute name="value" type="{http://www.w3.org/2001/XMLSchema}string" />
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="correctOnlyProcessedTasks">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;attribute name="numberOfTasks" use="required">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
         *                       &lt;minInclusive value="1"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="multipleCorrectors">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;attribute name="numberOfCorrectors" use="required">
         *                   &lt;simpleType>
         *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
         *                       &lt;minInclusive value="2"/>
         *                     &lt;/restriction>
         *                   &lt;/simpleType>
         *                 &lt;/attribute>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *       &lt;/choice>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         */
        public interface CorrectionModeType {


            /**
             * In this correction mode, more than one (human) corrector proceed the correction of the Tasklet, in order to determine the overall result.
             * 
             * @return
             *     possible object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.MultipleCorrectorsType}
             */
            de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.MultipleCorrectorsType getMultipleCorrectors();

            /**
             * In this correction mode, more than one (human) corrector proceed the correction of the Tasklet, in order to determine the overall result.
             * 
             * @param value
             *     allowed object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.MultipleCorrectorsType}
             */
            void setMultipleCorrectors(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.MultipleCorrectorsType value);

            boolean isSetMultipleCorrectors();

            void unsetMultipleCorrectors();

            /**
             * Gets the value of the regular property.
             * 
             * @return
             *     possible object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.RegularType}
             */
            de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.RegularType getRegular();

            /**
             * Sets the value of the regular property.
             * 
             * @param value
             *     allowed object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.RegularType}
             */
            void setRegular(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.RegularType value);

            boolean isSetRegular();

            void unsetRegular();

            /**
             * In this correction mode, only the first n processed Subtasklets wil be corrected and influence the overall result (points).
             * 
             * @return
             *     possible object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.CorrectOnlyProcessedTasksType}
             */
            de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.CorrectOnlyProcessedTasksType getCorrectOnlyProcessedTasks();

            /**
             * In this correction mode, only the first n processed Subtasklets wil be corrected and influence the overall result (points).
             * 
             * @param value
             *     allowed object is
             *     {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.CorrectOnlyProcessedTasksType}
             */
            void setCorrectOnlyProcessedTasks(de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.CorrectionModeType.CorrectOnlyProcessedTasksType value);

            boolean isSetCorrectOnlyProcessedTasks();

            void unsetCorrectOnlyProcessedTasks();


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 91)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attribute name="numberOfTasks" use="required">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
             *             &lt;minInclusive value="1"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface CorrectOnlyProcessedTasksType {


                /**
                 * Gets the value of the numberOfTasks property.
                 * 
                 */
                int getNumberOfTasks();

                /**
                 * Sets the value of the numberOfTasks property.
                 * 
                 */
                void setNumberOfTasks(int value);

                boolean isSetNumberOfTasks();

                void unsetNumberOfTasks();

            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 105)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attribute name="numberOfCorrectors" use="required">
             *         &lt;simpleType>
             *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
             *             &lt;minInclusive value="2"/>
             *           &lt;/restriction>
             *         &lt;/simpleType>
             *       &lt;/attribute>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface MultipleCorrectorsType {


                /**
                 * Gets the value of the numberOfCorrectors property.
                 * 
                 */
                int getNumberOfCorrectors();

                /**
                 * Sets the value of the numberOfCorrectors property.
                 * 
                 */
                void setNumberOfCorrectors(int value);

                boolean isSetNumberOfCorrectors();

                void unsetNumberOfCorrectors();

            }


            /**
             * Java content class for anonymous complex type.
             * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 83)
             * <p>
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;attribute name="value" type="{http://www.w3.org/2001/XMLSchema}string" />
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             */
            public interface RegularType {


                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link java.lang.String}
                 */
                java.lang.String getValue();

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link java.lang.String}
                 */
                void setValue(java.lang.String value);

                boolean isSetValue();

                void unsetValue();

            }

        }

    }


    /**
     * Java content class for anonymous complex type.
     * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 340)
     * <p>
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="revision" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;attribute name="author" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                 &lt;attribute name="date" type="{http://www.w3.org/2001/XMLSchema}long" />
     *                 &lt;attribute name="serialNumber" use="required" type="{http://www.w3.org/2001/XMLSchema}long" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     */
    public interface RevisionsType {


        /**
         * Gets the value of the Revision property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the Revision property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getRevision().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.RevisionsType.RevisionType}
         * 
         */
        java.util.List getRevision();

        boolean isSetRevision();

        void unsetRevision();


        /**
         * Java content class for anonymous complex type.
         * 	<p>The following schema fragment specifies the expected 	content contained within this java content object. 	(defined at file:/home/raporu/software/java/workspace/elatePortal/taskmodel-core/jaxb/complexTaskDef.xsd line 343)
         * <p>
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;attribute name="author" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
         *       &lt;attribute name="date" type="{http://www.w3.org/2001/XMLSchema}long" />
         *       &lt;attribute name="serialNumber" use="required" type="{http://www.w3.org/2001/XMLSchema}long" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         */
        public interface RevisionType {


            /**
             * Gets the value of the serialNumber property.
             * 
             */
            long getSerialNumber();

            /**
             * Sets the value of the serialNumber property.
             * 
             */
            void setSerialNumber(long value);

            boolean isSetSerialNumber();

            void unsetSerialNumber();

            /**
             * Gets the value of the date property.
             * 
             */
            long getDate();

            /**
             * Sets the value of the date property.
             * 
             */
            void setDate(long value);

            boolean isSetDate();

            void unsetDate();

            /**
             * Gets the value of the author property.
             * 
             * @return
             *     possible object is
             *     {@link java.lang.String}
             */
            java.lang.String getAuthor();

            /**
             * Sets the value of the author property.
             * 
             * @param value
             *     allowed object is
             *     {@link java.lang.String}
             */
            void setAuthor(java.lang.String value);

            boolean isSetAuthor();

            void unsetAuthor();

        }

    }

}
