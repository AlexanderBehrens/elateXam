//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.07.16 at 04:14:34 CEST 
//


package de.thorstenberger.taskmodel.complex.jaxb;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the de.thorstenberger.taskmodel.complex.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap();
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.GrammarInfo grammarInfo = new de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (de.thorstenberger.taskmodel.complex.jaxb.ObjectFactory.class));
    public final static java.lang.Class version = (de.thorstenberger.taskmodel.complex.jaxb.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.Config.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ConfigImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDefType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.MappingSubTaskDefTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.ClozeSubTaskType.CorrectionType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.ClozeSubTaskTypeImpl.CorrectionTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ClozeConfigType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockTypeImpl.ClozeConfigTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.MappingConfigType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockTypeImpl.MappingConfigTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.DifferentType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.McConfigTypeImpl.DifferentTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.RegularType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.McConfigTypeImpl.RegularTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType.Choice.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.TextTaskBlockTypeImpl.ChoiceImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.TextTaskBlockTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.ConfigTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDefType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.McSubTaskDefTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.McSubTaskType.CorrectionType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.McSubTaskTypeImpl.CorrectionTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.ClozeSubTaskType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.ClozeSubTaskTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.Choice.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockTypeImpl.ChoiceImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDefType.ConceptType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.MappingSubTaskDefTypeImpl.ConceptTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlock.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.TextSubTaskType.CorrectionType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.TextSubTaskTypeImpl.CorrectionTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ChoiceType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockTypeImpl.ChoiceTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.TextSubTaskType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.TextSubTaskTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.ChoiceType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockTypeImpl.ChoiceTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDef.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.PaintSubTaskDefImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.McSubTask.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.McSubTaskImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlock.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType.GapType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl.GapTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ConfigType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ConfigTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDef.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType.Choice.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.PaintTaskBlockTypeImpl.ChoiceImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlock.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDef.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.MappingSubTaskDefImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.McSubTaskType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.McSubTaskTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandling.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDefType.ImagesType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.PaintSubTaskDefTypeImpl.ImagesTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.PaintSubTask.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.PaintSubTaskImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.ChoiceType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.ChoiceTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.TextSubTaskDef.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.TextSubTaskDefImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.ClozeSubTaskType.GapType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.ClozeSubTaskTypeImpl.GapTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDefType.CorrectType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.McSubTaskDefTypeImpl.CorrectTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType.Text.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl.TextImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType.ChoiceType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.TextTaskBlockTypeImpl.ChoiceTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDef.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.McSubTaskDefImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.MappingSubTaskType.ConceptType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.MappingSubTaskTypeImpl.ConceptTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType.ChoiceType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.PaintTaskBlockTypeImpl.ChoiceTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.Choice.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockTypeImpl.ChoiceImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDefType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.PaintSubTaskDefTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.PaintSubTaskType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.PaintSubTaskTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.Choice.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.ChoiceImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDefType.IncorrectType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.McSubTaskDefTypeImpl.IncorrectTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.McSubTaskType.AnswerType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.McSubTaskTypeImpl.AnswerTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.MappingSubTaskType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.MappingSubTaskTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDefType.TextualAnswerType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.PaintSubTaskDefTypeImpl.TextualAnswerTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.ClozeSubTask.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.ClozeSubTaskImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlock.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.PaintTaskBlockImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.PaintSubTaskType.CorrectionType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.PaintSubTaskTypeImpl.CorrectionTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.PaintTaskBlockTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.TextSubTaskDefType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.TextSubTaskDefTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.McConfigTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDefType.AssignmentType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.MappingSubTaskDefTypeImpl.AssignmentTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlock.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.TextTaskBlockImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.MappingSubTaskType.CorrectionType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.MappingSubTaskTypeImpl.CorrectionTypeImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType.Gap.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl.GapImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDef.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.TextSubTask.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.TextSubTaskImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.MappingSubTask.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.MappingSubTaskImpl");
        defaultImplementations.put((de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.class), "de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockTypeImpl");
        rootTagMap.put(new javax.xml.namespace.QName("http://complex.taskmodel.thorstenberger.de/complexTaskHandling", "complexTaskHandling"), (de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandling.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://complex.taskmodel.thorstenberger.de/complexTaskDef", "paintSubTaskDef"), (de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDef.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://complex.taskmodel.thorstenberger.de/complexTaskDef", "mcSubTaskDef"), (de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDef.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://complex.taskmodel.thorstenberger.de/complexTaskDef", "config"), (de.thorstenberger.taskmodel.complex.jaxb.Config.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://complex.taskmodel.thorstenberger.de/complexTaskDef", "textSubTaskDef"), (de.thorstenberger.taskmodel.complex.jaxb.TextSubTaskDef.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://complex.taskmodel.thorstenberger.de/complexTaskDef", "complexTaskDef"), (de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDef.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://complex.taskmodel.thorstenberger.de/complexTaskDef", "clozeSubTaskDef"), (de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDef.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://complex.taskmodel.thorstenberger.de/complexTaskDef", "mappingSubTaskDef"), (de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDef.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: de.thorstenberger.taskmodel.complex.jaxb
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of ClozeSubTaskDefTypeClozeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType createClozeSubTaskDefTypeClozeType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl();
    }

    /**
     * Create an instance of Config
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.Config createConfig()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ConfigImpl();
    }

    /**
     * Create an instance of MappingSubTaskDefType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDefType createMappingSubTaskDefType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.MappingSubTaskDefTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeClozeSubTaskTypeCorrectionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.ClozeSubTaskType.CorrectionType createComplexTaskHandlingTypeTryTypePageTypeClozeSubTaskTypeCorrectionType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.ClozeSubTaskTypeImpl.CorrectionTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeClozeTaskBlockTypeClozeConfigType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ClozeConfigType createComplexTaskDefTypeCategoryTypeClozeTaskBlockTypeClozeConfigType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockTypeImpl.ClozeConfigTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMappingTaskBlockTypeMappingConfigType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.MappingConfigType createComplexTaskDefTypeCategoryTypeMappingTaskBlockTypeMappingConfigType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockTypeImpl.MappingConfigTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMcTaskBlockTypeMcConfigTypeDifferentType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.DifferentType createComplexTaskDefTypeCategoryTypeMcTaskBlockTypeMcConfigTypeDifferentType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.McConfigTypeImpl.DifferentTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMcTaskBlockTypeMcConfigTypeRegularType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType.RegularType createComplexTaskDefTypeCategoryTypeMcTaskBlockTypeMcConfigTypeRegularType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.McConfigTypeImpl.RegularTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeTextTaskBlockTypeChoice
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType.Choice createComplexTaskDefTypeCategoryTypeTextTaskBlockTypeChoice()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.TextTaskBlockTypeImpl.ChoiceImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType createComplexTaskDefTypeCategoryType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeTextTaskBlockType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType createComplexTaskDefTypeCategoryTypeTextTaskBlockType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.TextTaskBlockTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeConfigType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.ConfigType createComplexTaskDefTypeConfigType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.ConfigTypeImpl();
    }

    /**
     * Create an instance of McSubTaskDefType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDefType createMcSubTaskDefType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.McSubTaskDefTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeMcSubTaskTypeCorrectionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.McSubTaskType.CorrectionType createComplexTaskHandlingTypeTryTypePageTypeMcSubTaskTypeCorrectionType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.McSubTaskTypeImpl.CorrectionTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType createComplexTaskHandlingTypeTryTypePageType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeClozeSubTaskType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.ClozeSubTaskType createComplexTaskHandlingTypeTryTypePageTypeClozeSubTaskType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.ClozeSubTaskTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeClozeTaskBlockTypeChoice
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.Choice createComplexTaskDefTypeCategoryTypeClozeTaskBlockTypeChoice()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockTypeImpl.ChoiceImpl();
    }

    /**
     * Create an instance of MappingSubTaskDefTypeConceptType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDefType.ConceptType createMappingSubTaskDefTypeConceptType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.MappingSubTaskDefTypeImpl.ConceptTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMappingTaskBlock
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlock createComplexTaskDefTypeCategoryTypeMappingTaskBlock()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeTextSubTaskTypeCorrectionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.TextSubTaskType.CorrectionType createComplexTaskHandlingTypeTryTypePageTypeTextSubTaskTypeCorrectionType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.TextSubTaskTypeImpl.CorrectionTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeClozeTaskBlockTypeChoiceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType.ChoiceType createComplexTaskDefTypeCategoryTypeClozeTaskBlockTypeChoiceType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockTypeImpl.ChoiceTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeTextSubTaskType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.TextSubTaskType createComplexTaskHandlingTypeTryTypePageTypeTextSubTaskType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.TextSubTaskTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMappingTaskBlockTypeChoiceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.ChoiceType createComplexTaskDefTypeCategoryTypeMappingTaskBlockTypeChoiceType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockTypeImpl.ChoiceTypeImpl();
    }

    /**
     * Create an instance of PaintSubTaskDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDef createPaintSubTaskDef()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.PaintSubTaskDefImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeMcSubTask
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.McSubTask createComplexTaskHandlingTypeTryTypePageTypeMcSubTask()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.McSubTaskImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMcTaskBlock
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlock createComplexTaskDefTypeCategoryTypeMcTaskBlock()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockImpl();
    }

    /**
     * Create an instance of ClozeSubTaskDefTypeClozeTypeGapType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType.GapType createClozeSubTaskDefTypeClozeTypeGapType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl.GapTypeImpl();
    }

    /**
     * Create an instance of ConfigType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ConfigType createConfigType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ConfigTypeImpl();
    }

    /**
     * Create an instance of ClozeSubTaskDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDef createClozeSubTaskDef()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypePaintTaskBlockTypeChoice
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType.Choice createComplexTaskDefTypeCategoryTypePaintTaskBlockTypeChoice()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.PaintTaskBlockTypeImpl.ChoiceImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeClozeTaskBlock
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlock createComplexTaskDefTypeCategoryTypeClozeTaskBlock()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType createComplexTaskHandlingTypeTryType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl();
    }

    /**
     * Create an instance of MappingSubTaskDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDef createMappingSubTaskDef()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.MappingSubTaskDefImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeClozeTaskBlockType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.ClozeTaskBlockType createComplexTaskDefTypeCategoryTypeClozeTaskBlockType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.ClozeTaskBlockTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType createComplexTaskDefType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeMcSubTaskType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.McSubTaskType createComplexTaskHandlingTypeTryTypePageTypeMcSubTaskType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.McSubTaskTypeImpl();
    }

    /**
     * Create an instance of ClozeSubTaskDefType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType createClozeSubTaskDefType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandling
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandling createComplexTaskHandling()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingImpl();
    }

    /**
     * Create an instance of PaintSubTaskDefTypeImagesType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDefType.ImagesType createPaintSubTaskDefTypeImagesType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.PaintSubTaskDefTypeImpl.ImagesTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypePaintSubTask
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.PaintSubTask createComplexTaskHandlingTypeTryTypePageTypePaintSubTask()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.PaintSubTaskImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType createComplexTaskHandlingType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMcTaskBlockTypeChoiceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.ChoiceType createComplexTaskDefTypeCategoryTypeMcTaskBlockTypeChoiceType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.ChoiceTypeImpl();
    }

    /**
     * Create an instance of TextSubTaskDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.TextSubTaskDef createTextSubTaskDef()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.TextSubTaskDefImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeClozeSubTaskTypeGapType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.ClozeSubTaskType.GapType createComplexTaskHandlingTypeTryTypePageTypeClozeSubTaskTypeGapType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.ClozeSubTaskTypeImpl.GapTypeImpl();
    }

    /**
     * Create an instance of McSubTaskDefTypeCorrectType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDefType.CorrectType createMcSubTaskDefTypeCorrectType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.McSubTaskDefTypeImpl.CorrectTypeImpl();
    }

    /**
     * Create an instance of ClozeSubTaskDefTypeClozeTypeText
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType.Text createClozeSubTaskDefTypeClozeTypeText()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl.TextImpl();
    }

    /**
     * Create an instance of ClozeSubTaskDefTypeClozeTypeText
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType.Text createClozeSubTaskDefTypeClozeTypeText(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl.TextImpl(value);
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeTextTaskBlockTypeChoiceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlockType.ChoiceType createComplexTaskDefTypeCategoryTypeTextTaskBlockTypeChoiceType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.TextTaskBlockTypeImpl.ChoiceTypeImpl();
    }

    /**
     * Create an instance of McSubTaskDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDef createMcSubTaskDef()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.McSubTaskDefImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMcTaskBlockType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType createComplexTaskDefTypeCategoryTypeMcTaskBlockType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeMappingSubTaskTypeConceptType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.MappingSubTaskType.ConceptType createComplexTaskHandlingTypeTryTypePageTypeMappingSubTaskTypeConceptType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.MappingSubTaskTypeImpl.ConceptTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypePaintTaskBlockTypeChoiceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType.ChoiceType createComplexTaskDefTypeCategoryTypePaintTaskBlockTypeChoiceType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.PaintTaskBlockTypeImpl.ChoiceTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMappingTaskBlockTypeChoice
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType.Choice createComplexTaskDefTypeCategoryTypeMappingTaskBlockTypeChoice()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockTypeImpl.ChoiceImpl();
    }

    /**
     * Create an instance of PaintSubTaskDefType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDefType createPaintSubTaskDefType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.PaintSubTaskDefTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypePaintSubTaskType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.PaintSubTaskType createComplexTaskHandlingTypeTryTypePageTypePaintSubTaskType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.PaintSubTaskTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMcTaskBlockTypeChoice
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.Choice createComplexTaskDefTypeCategoryTypeMcTaskBlockTypeChoice()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.ChoiceImpl();
    }

    /**
     * Create an instance of McSubTaskDefTypeIncorrectType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.McSubTaskDefType.IncorrectType createMcSubTaskDefTypeIncorrectType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.McSubTaskDefTypeImpl.IncorrectTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeMcSubTaskTypeAnswerType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.McSubTaskType.AnswerType createComplexTaskHandlingTypeTryTypePageTypeMcSubTaskTypeAnswerType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.McSubTaskTypeImpl.AnswerTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeMappingSubTaskType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.MappingSubTaskType createComplexTaskHandlingTypeTryTypePageTypeMappingSubTaskType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.MappingSubTaskTypeImpl();
    }

    /**
     * Create an instance of PaintSubTaskDefTypeTextualAnswerType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.PaintSubTaskDefType.TextualAnswerType createPaintSubTaskDefTypeTextualAnswerType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.PaintSubTaskDefTypeImpl.TextualAnswerTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeClozeSubTask
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.ClozeSubTask createComplexTaskHandlingTypeTryTypePageTypeClozeSubTask()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.ClozeSubTaskImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypePaintTaskBlock
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlock createComplexTaskDefTypeCategoryTypePaintTaskBlock()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.PaintTaskBlockImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypePaintSubTaskTypeCorrectionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.PaintSubTaskType.CorrectionType createComplexTaskHandlingTypeTryTypePageTypePaintSubTaskTypeCorrectionType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.PaintSubTaskTypeImpl.CorrectionTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypePaintTaskBlockType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.PaintTaskBlockType createComplexTaskDefTypeCategoryTypePaintTaskBlockType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.PaintTaskBlockTypeImpl();
    }

    /**
     * Create an instance of TextSubTaskDefType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.TextSubTaskDefType createTextSubTaskDefType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.TextSubTaskDefTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMcTaskBlockTypeMcConfigType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.McTaskBlockType.McConfigType createComplexTaskDefTypeCategoryTypeMcTaskBlockTypeMcConfigType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.McTaskBlockTypeImpl.McConfigTypeImpl();
    }

    /**
     * Create an instance of MappingSubTaskDefTypeAssignmentType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.MappingSubTaskDefType.AssignmentType createMappingSubTaskDefTypeAssignmentType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.MappingSubTaskDefTypeImpl.AssignmentTypeImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeTextTaskBlock
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.TextTaskBlock createComplexTaskDefTypeCategoryTypeTextTaskBlock()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.TextTaskBlockImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeMappingSubTaskTypeCorrectionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.MappingSubTaskType.CorrectionType createComplexTaskHandlingTypeTryTypePageTypeMappingSubTaskTypeCorrectionType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.MappingSubTaskTypeImpl.CorrectionTypeImpl();
    }

    /**
     * Create an instance of ClozeSubTaskDefTypeClozeTypeGap
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ClozeSubTaskDefType.ClozeType.Gap createClozeSubTaskDefTypeClozeTypeGap()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ClozeSubTaskDefTypeImpl.ClozeTypeImpl.GapImpl();
    }

    /**
     * Create an instance of ComplexTaskDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDef createComplexTaskDef()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeTextSubTask
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.TextSubTask createComplexTaskHandlingTypeTryTypePageTypeTextSubTask()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.TextSubTaskImpl();
    }

    /**
     * Create an instance of ComplexTaskHandlingTypeTryTypePageTypeMappingSubTask
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskHandlingType.TryType.PageType.MappingSubTask createComplexTaskHandlingTypeTryTypePageTypeMappingSubTask()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskHandlingTypeImpl.TryTypeImpl.PageTypeImpl.MappingSubTaskImpl();
    }

    /**
     * Create an instance of ComplexTaskDefTypeCategoryTypeMappingTaskBlockType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public de.thorstenberger.taskmodel.complex.jaxb.ComplexTaskDefType.CategoryType.MappingTaskBlockType createComplexTaskDefTypeCategoryTypeMappingTaskBlockType()
        throws javax.xml.bind.JAXBException
    {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.ComplexTaskDefTypeImpl.CategoryTypeImpl.MappingTaskBlockTypeImpl();
    }

}
