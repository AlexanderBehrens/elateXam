//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.10.15 at 06:48:35 CEST 
//


package de.thorstenberger.taskmodel.complex.jaxb.impl;

public class SubTaskTypeImpl implements de.thorstenberger.taskmodel.complex.jaxb.SubTaskType, java.io.Serializable, com.sun.xml.bind.JAXBObject, de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.ValidatableObject
{

    private final static long serialVersionUID = 1L;
    protected boolean has_NeedsManualCorrection;
    protected boolean _NeedsManualCorrection;
    protected com.sun.xml.bind.util.ListImpl _ManualCorrection = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected de.thorstenberger.taskmodel.complex.jaxb.AutoCorrectionType _AutoCorrection;
    protected java.lang.String _VirtualNum;
    protected java.lang.String _RefId;
    public final static java.lang.Class version = (de.thorstenberger.taskmodel.complex.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (de.thorstenberger.taskmodel.complex.jaxb.SubTaskType.class);
    }

    public boolean isNeedsManualCorrection() {
        return _NeedsManualCorrection;
    }

    public void setNeedsManualCorrection(boolean value) {
        _NeedsManualCorrection = value;
        has_NeedsManualCorrection = true;
    }

    public boolean isSetNeedsManualCorrection() {
        return has_NeedsManualCorrection;
    }

    public void unsetNeedsManualCorrection() {
        has_NeedsManualCorrection = false;
    }

    public java.util.List getManualCorrection() {
        return _ManualCorrection;
    }

    public boolean isSetManualCorrection() {
        return _ManualCorrection.isModified();
    }

    public void unsetManualCorrection() {
        _ManualCorrection.clear();
        _ManualCorrection.setModified(false);
    }

    public de.thorstenberger.taskmodel.complex.jaxb.AutoCorrectionType getAutoCorrection() {
        return _AutoCorrection;
    }

    public void setAutoCorrection(de.thorstenberger.taskmodel.complex.jaxb.AutoCorrectionType value) {
        _AutoCorrection = value;
    }

    public boolean isSetAutoCorrection() {
        return (_AutoCorrection!= null);
    }

    public void unsetAutoCorrection() {
        _AutoCorrection = null;
    }

    public java.lang.String getVirtualNum() {
        return _VirtualNum;
    }

    public void setVirtualNum(java.lang.String value) {
        _VirtualNum = value;
    }

    public boolean isSetVirtualNum() {
        return (_VirtualNum!= null);
    }

    public void unsetVirtualNum() {
        _VirtualNum = null;
    }

    public java.lang.String getRefId() {
        return _RefId;
    }

    public void setRefId(java.lang.String value) {
        _RefId = value;
    }

    public boolean isSetRefId() {
        return (_RefId!= null);
    }

    public void unsetRefId() {
        _RefId = null;
    }

    public de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallingContext context) {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.SubTaskTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _ManualCorrection.size();
        if (has_NeedsManualCorrection) {
            context.startElement("http://complex.taskmodel.thorstenberger.de/complexTaskHandling", "needsManualCorrection");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NeedsManualCorrection)), "NeedsManualCorrection");
            } catch (java.lang.Exception e) {
                de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if ((_ManualCorrection.size()>= 1)&&(_AutoCorrection == null)) {
            while (idx2 != len2) {
                context.startElement("http://complex.taskmodel.thorstenberger.de/complexTaskHandling", "manualCorrection");
                int idx_2 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx_2 ++)), "ManualCorrection");
                context.endNamespaceDecls();
                int idx_3 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx_3 ++)), "ManualCorrection");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ManualCorrection.get(idx2 ++)), "ManualCorrection");
                context.endElement();
            }
        } else {
            if ((_ManualCorrection.size() == 0)&&(_AutoCorrection!= null)) {
                context.startElement("http://complex.taskmodel.thorstenberger.de/complexTaskHandling", "autoCorrection");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AutoCorrection), "AutoCorrection");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _ManualCorrection.size();
        context.startAttribute("", "virtualNum");
        try {
            context.text(((java.lang.String) _VirtualNum), "VirtualNum");
        } catch (java.lang.Exception e) {
            de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_RefId!= null) {
            context.startAttribute("", "refId");
            try {
                context.text(((java.lang.String) _RefId), "RefId");
            } catch (java.lang.Exception e) {
                de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if ((_ManualCorrection.size()>= 1)&&(_AutoCorrection == null)) {
            while (idx2 != len2) {
                idx2 += 1;
            }
        }
    }

    public void serializeURIs(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _ManualCorrection.size();
        if ((_ManualCorrection.size()>= 1)&&(_AutoCorrection == null)) {
            while (idx2 != len2) {
                idx2 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (de.thorstenberger.taskmodel.complex.jaxb.SubTaskType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\f\u00f9k1ppsq\u0000~\u0000\u0000\nPu\u00c5ppsq\u0000~\u0000\u0000\b"
+".\u000f\u008appsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00e4HGp"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00e4H<sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002\u00e4H1ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004"
+"namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u008a\u008c\u00f2ppsr\u0000$com.sun."
+"msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datat"
+"ype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype"
+".xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSD"
+"atatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000"
+"\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whit"
+"eSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007bool"
+"eansr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPa"
+"ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001csq\u0000~\u0000\b\u0001Y\u00bb:ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0001Y\u00bb/q\u0000~\u0000\u000fpsq\u0000~\u0000\u0011\u0000\u00ff\u008c\u0084ppsr\u0000"
+"\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005"
+"QNameq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000+q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.Simpl"
+"eNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr"
+"\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http:/"
+"/www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000e\u0001psq\u0000~"
+"\u0000-t\u0000\u0015needsManualCorrectiont\u0000>http://complex.taskmodel.thorst"
+"enberger.de/complexTaskHandlingq\u0000~\u00003sq\u0000~\u0000\b\u0005I\u00c7>ppsq\u0000~\u0000\b\u0005I\u00c73q\u0000"
+"~\u0000\u000fpsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u0092y\u00a7q\u0000~\u0000\u000f"
+"psq\u0000~\u0000\n\u0002\u0092y\u00a4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0002\u0092y\u0099ppsq\u0000~\u0000\n\u0000\u00f3\u0004\u00b6pp\u0000sq\u0000~\u0000\b\u0000\u00f3\u0004\u00abppsq\u0000~\u0000"
+":\u0000\u00f3\u0004\u00a0q\u0000~\u0000\u000fpsq\u0000~\u0000&\u0000\u00f3\u0004\u009dq\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expressio"
+"n$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u00004q\u0000~\u0000Dsr\u0000 com."
+"sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00003sq\u0000~\u0000-t\u0000=d"
+"e.thorstenberger.taskmodel.complex.jaxb.ManualCorrectionType"
+"t\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\b\u0001\u009ft\u00deppsq"
+"\u0000~\u0000&\u0001\u009ft\u00d3q\u0000~\u0000\u000fpq\u0000~\u0000(sq\u0000~\u0000-q\u0000~\u00000q\u0000~\u00001q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0010manualCorre"
+"ctionq\u0000~\u00007sq\u0000~\u0000\n\u0002\u00b7M\u008aq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0002\u00b7M\u007fppsq\u0000~\u0000\n\u0000\u00f3\u0004\u00b6pp\u0000sq\u0000~\u0000\b\u0000\u00f3"
+"\u0004\u00abppsq\u0000~\u0000:\u0000\u00f3\u0004\u00a0q\u0000~\u0000\u000fpsq\u0000~\u0000&\u0000\u00f3\u0004\u009dq\u0000~\u0000\u000fpq\u0000~\u0000Dq\u0000~\u0000Fq\u0000~\u00003sq\u0000~\u0000-t\u0000;"
+"de.thorstenberger.taskmodel.complex.jaxb.AutoCorrectionTypeq"
+"\u0000~\u0000Isq\u0000~\u0000\b\u0001\u00c4H\u00c4ppsq\u0000~\u0000&\u0001\u00c4H\u00b9q\u0000~\u0000\u000fpq\u0000~\u0000(sq\u0000~\u0000-q\u0000~\u00000q\u0000~\u00001q\u0000~\u00003sq"
+"\u0000~\u0000-t\u0000\u000eautoCorrectionq\u0000~\u00007q\u0000~\u00003sq\u0000~\u0000&\u0002\"f6ppsq\u0000~\u0000\u0011\u0001\u008feiq\u0000~\u0000\u000fps"
+"r\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlways"
+"Validxq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001f\u0001q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000`q\u0000~\u0000"
+"\u001csq\u0000~\u0000-t\u0000\nvirtualNumt\u0000\u0000sq\u0000~\u0000\b\u0002\u00a8\u00f5gppsq\u0000~\u0000&\u0002\u00a8\u00f5\\q\u0000~\u0000\u000fpq\u0000~\u0000]sq\u0000~"
+"\u0000-t\u0000\u0005refIdq\u0000~\u0000fq\u0000~\u00003sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$C"
+"losedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHas"
+"h\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000l[\u0000\u0005tablet\u0000![Lc"
+"om/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0012\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.g"
+"rammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppp"
+"ppppppppppppppppq\u0000~\u0000>pppppppppppppq\u0000~\u0000<ppppppppppppppppppppp"
+"pppppppppppq\u0000~\u0000Aq\u0000~\u0000Spppq\u0000~\u0000%pppppq\u0000~\u0000@q\u0000~\u0000Rppppppq\u0000~\u0000Ppppq\u0000"
+"~\u0000\u0005pppppq\u0000~\u0000Jppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppq\u0000~\u0000gppp"
+"pppppppppq\u0000~\u0000\u0010ppppppppq\u0000~\u00009pppppppq\u0000~\u0000Wppq\u0000~\u00008pq\u0000~\u0000\tq\u0000~\u0000\u0007p"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "---------------");
        }

        protected Unmarshaller(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return de.thorstenberger.taskmodel.complex.jaxb.impl.SubTaskTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("needsManualCorrection" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskHandling" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  12 :
                        if (("manualCorrection" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  10 :
                        attIdx = context.getAttribute("", "corrector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  9 :
                        if (("manualCorrection" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("autoCorrection" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskHandling" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "virtualNum");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "refId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "points");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _VirtualNum = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RefId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        if (("needsManualCorrection" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskHandling" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("manualCorrection" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskHandling" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "corrector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "virtualNum");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  14 :
                        if (("autoCorrection" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskHandling" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "refId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "points");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        if (("corrector" == ___local)&&("" == ___uri)) {
                            _ManualCorrection.add(((de.thorstenberger.taskmodel.complex.jaxb.impl.ManualCorrectionTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.taskmodel.complex.jaxb.impl.ManualCorrectionTypeImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  0 :
                        if (("virtualNum" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("refId" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  13 :
                        if (("points" == ___local)&&("" == ___uri)) {
                            _AutoCorrection = ((de.thorstenberger.taskmodel.complex.jaxb.impl.AutoCorrectionTypeImpl) spawnChildFromEnterAttribute((de.thorstenberger.taskmodel.complex.jaxb.impl.AutoCorrectionTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        attIdx = context.getAttribute("", "corrector");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("refId" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  2 :
                        if (("virtualNum" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "virtualNum");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "refId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "points");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  12 :
                            revertToParentFromText(value);
                            return ;
                        case  10 :
                            attIdx = context.getAttribute("", "corrector");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "virtualNum");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "refId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "points");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            eatText3(value);
                            state = 8;
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NeedsManualCorrection = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NeedsManualCorrection = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
