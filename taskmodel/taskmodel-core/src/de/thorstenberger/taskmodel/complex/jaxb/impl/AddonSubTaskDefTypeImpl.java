//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.10.15 at 06:48:35 CEST 
//


package de.thorstenberger.taskmodel.complex.jaxb.impl;

public class AddonSubTaskDefTypeImpl
    extends de.thorstenberger.taskmodel.complex.jaxb.impl.SubTaskDefTypeImpl
    implements de.thorstenberger.taskmodel.complex.jaxb.AddonSubTaskDefType, java.io.Serializable, com.sun.xml.bind.JAXBObject, de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallableObject, de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.XMLSerializable, de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.ValidatableObject
{

    private final static long serialVersionUID = 1L;
    protected boolean has_TextFieldWidth;
    protected int _TextFieldWidth;
    protected java.lang.String _CorrectionHint;
    protected java.lang.String _TaskType;
    protected boolean has_TextFieldHeight;
    protected int _TextFieldHeight;
    protected org.w3c.dom.Element _Memento;
    public final static java.lang.Class version = (de.thorstenberger.taskmodel.complex.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (de.thorstenberger.taskmodel.complex.jaxb.AddonSubTaskDefType.class);
    }

    public int getTextFieldWidth() {
        return _TextFieldWidth;
    }

    public void setTextFieldWidth(int value) {
        _TextFieldWidth = value;
        has_TextFieldWidth = true;
    }

    public boolean isSetTextFieldWidth() {
        return has_TextFieldWidth;
    }

    public void unsetTextFieldWidth() {
        has_TextFieldWidth = false;
    }

    public java.lang.String getCorrectionHint() {
        return _CorrectionHint;
    }

    public void setCorrectionHint(java.lang.String value) {
        _CorrectionHint = value;
    }

    public boolean isSetCorrectionHint() {
        return (_CorrectionHint!= null);
    }

    public void unsetCorrectionHint() {
        _CorrectionHint = null;
    }

    public java.lang.String getTaskType() {
        return _TaskType;
    }

    public void setTaskType(java.lang.String value) {
        _TaskType = value;
    }

    public boolean isSetTaskType() {
        return (_TaskType!= null);
    }

    public void unsetTaskType() {
        _TaskType = null;
    }

    public int getTextFieldHeight() {
        return _TextFieldHeight;
    }

    public void setTextFieldHeight(int value) {
        _TextFieldHeight = value;
        has_TextFieldHeight = true;
    }

    public boolean isSetTextFieldHeight() {
        return has_TextFieldHeight;
    }

    public void unsetTextFieldHeight() {
        has_TextFieldHeight = false;
    }

    public org.w3c.dom.Element getMemento() {
        return _Memento;
    }

    public void setMemento(org.w3c.dom.Element value) {
        _Memento = value;
    }

    public boolean isSetMemento() {
        return (_Memento!= null);
    }

    public void unsetMemento() {
        _Memento = null;
    }

    public de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallingContext context) {
        return new de.thorstenberger.taskmodel.complex.jaxb.impl.AddonSubTaskDefTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_CorrectionHint!= null) {
            context.startElement("http://complex.taskmodel.thorstenberger.de/complexTaskDef", "correctionHint");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CorrectionHint), "CorrectionHint");
            } catch (java.lang.Exception e) {
                de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        new com.sun.xml.bind.unmarshaller.DOMScanner().parse(((org.w3c.dom.Element) _Memento), new de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.ContentHandlerAdaptor(context));
    }

    public void serializeAttributes(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_TextFieldWidth) {
            context.startAttribute("", "textFieldWidth");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _TextFieldWidth)), "TextFieldWidth");
            } catch (java.lang.Exception e) {
                de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_TextFieldHeight) {
            context.startAttribute("", "textFieldHeight");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _TextFieldHeight)), "TextFieldHeight");
            } catch (java.lang.Exception e) {
                de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "taskType");
        try {
            context.text(((java.lang.String) _TaskType), "TaskType");
        } catch (java.lang.Exception e) {
            de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        super.serializeAttributes(context);
    }

    public void serializeURIs(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (de.thorstenberger.taskmodel.complex.jaxb.AddonSubTaskDefType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0019\u00c2\u001e\u00aappsq\u0000~\u0000\u0000\u0017\u00bb\u00de2ppsq\u0000~\u0000\u0000\u0015"
+"S\u00f5\u00ddppsq\u0000~\u0000\u0000\u0012\u0091%\u00dcppsq\u0000~\u0000\u0000\u000f\u00de\u00a1<ppsq\u0000~\u0000\u0000\r!f\u008appsq\u0000~\u0000\u0000\n\u0089\u009azppsq\u0000~\u0000\u0000\n"
+"\u0089\u009afppsq\u0000~\u0000\u0000\u0007\u00f5\u0084nppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000"
+"\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclare"
+"dAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003|\u0091Ppp\u0000sq\u0000~\u0000\u0000\u0003|\u0091Eppsr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003\u0001\u008feisr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risA"
+"lwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fname"
+"spaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000"
+".Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://w"
+"ww.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.g"
+"rammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000"
+"\u0018psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sr\u0000\u001dcom.sun.msv.grammar.Cho"
+"iceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00ed+\u00d7ppsr\u0000 com.sun.msv.grammar.Attribu"
+"teExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000fxq\u0000~\u0000\u0003\u0001\u00ed+\u00ccq\u0000~\u0000\u0018p"
+"sq\u0000~\u0000\u0013\u0000\u00ff\u008c\u0084ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u00000q\u0000~\u0000 sr\u0000#c"
+"om.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
+"\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instances"
+"r\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0017\u0001psq\u0000~\u00004t\u0000\u0007problemt\u00009http://complex.taskmo"
+"del.thorstenberger.de/complexTaskDefsq\u0000~\u0000)\u0004x\u00f3\u0019ppsq\u0000~\u0000\u000e\u0004x\u00f3\u000eq\u0000"
+"~\u0000\u0018p\u0000sq\u0000~\u0000\u0000\u0004x\u00f3\u0003ppq\u0000~\u0000\u0016sq\u0000~\u0000)\u0002\u00e9\u008d\u0095ppsq\u0000~\u0000+\u0002\u00e9\u008d\u008aq\u0000~\u0000\u0018pq\u0000~\u0000-sq\u0000~\u0000"
+"4q\u0000~\u00007q\u0000~\u00008q\u0000~\u0000:sq\u0000~\u00004t\u0000\u0004hintq\u0000~\u0000>q\u0000~\u0000:sq\u0000~\u0000)\u0002\u0094\u0015\u00f3ppsq\u0000~\u0000\u000e\u0002\u0094\u0015"
+"\u00e8q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000\u0002\u0094\u0015\u00ddppq\u0000~\u0000\u0016sq\u0000~\u0000)\u0001\u0004\u00b0oppsq\u0000~\u0000+\u0001\u0004\u00b0dq\u0000~\u0000\u0018pq\u0000~\u0000-sq"
+"\u0000~\u00004q\u0000~\u00007q\u0000~\u00008q\u0000~\u0000:sq\u0000~\u00004t\u0000\u000ecorrectionHintq\u0000~\u0000>q\u0000~\u0000:sq\u0000~\u0000\u000e\u0000\u0000"
+"\u0000\u000fpp\u0000sr\u0000 com.sun.msv.grammar.ReferenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000"
+"~\u0000\u0002L\u0000\u0004nameq\u0000~\u0000\u001dxq\u0000~\u0000\u0003\u0000\u0000\u0000\u0004ppsr\u0000\u001ccom.sun.msv.grammar.MixedExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00f3\u0004\u00c8ppsq\u0000~\u0000)\u0000\u00f3\u0004\u00bcppsr\u0000 com.sun.msv.grammar.OneOrMor"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000S\u0000\u00f3\u0004\u00b1q\u0000~\u0000\u0018psq\u0000~\u0000)\u0000\u00f3\u0004\u00aeq\u0000~\u0000\u0018psq\u0000~\u0000+\u0000\u00f3\u0004\u009dq\u0000~"
+"\u0000\u0018psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000;q\u0000~\u0000[sr\u0000 com.sun.msv.grammar.AnyNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005sq\u0000~\u0000\u000e\u0000\u0000\u0000\u000fq\u0000~\u0000\u0018p\u0000q\u0000~\u0000Qq\u0000~\u0000]q\u0000~\u0000:psq\u0000~\u00004"
+"t\u0000\u0007Mementoq\u0000~\u0000>sq\u0000~\u0000)\u0002\u0097\u00cc\u000bppsq\u0000~\u0000+\u0002\u0097\u00cc\u0000q\u0000~\u0000\u0018psq\u0000~\u0000\u0013\u0001\u008a\u008c\u00f2ppsr\u0000$c"
+"om.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007"
+"booleanq\u0000~\u00002q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000fq\u0000~\u0000 sq\u0000~\u00004t\u0000\u0005trasht\u0000\u0000q\u0000~\u0000:sq\u0000~\u0000"
+")\u0002\u00bd:\u00adppsq\u0000~\u0000+\u0002\u00bd:\u00a2q\u0000~\u0000\u0018pq\u0000~\u0000\u0016sq\u0000~\u00004t\u0000\u0002idq\u0000~\u0000jq\u0000~\u0000:sq\u0000~\u0000)\u0002\u00b2\u0084\u009bp"
+"psq\u0000~\u0000+\u0002\u00b2\u0084\u0090q\u0000~\u0000\u0018pq\u0000~\u0000csq\u0000~\u00004t\u0000\u0013interactiveFeedbackq\u0000~\u0000jq\u0000~\u0000:"
+"sq\u0000~\u0000)\u0002\u00c2\u00cf\u00fcppsq\u0000~\u0000+\u0002\u00c2\u00cf\u00f1q\u0000~\u0000\u0018psq\u0000~\u0000\u0013\u0001\u00d12\u0082ppsr\u0000 com.sun.msv.data"
+"type.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Inte"
+"gerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/dataty"
+"pe/xsd/XSDatatypeImpl;xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0003intq\u0000~\u00002sr\u0000*com.sun.msv."
+"datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.dat"
+"atype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Ob"
+"ject;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstrain"
+"tFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTyp"
+"eq\u0000~\u0000xL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTy"
+"pe;L\u0000\tfacetNameq\u0000~\u0000\u001dxq\u0000~\u0000\u001cppq\u0000~\u00002\u0000\u0001sr\u0000*com.sun.msv.datatype."
+"xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000|ppq\u0000~\u00002\u0000\u0000sr\u0000!com.sun.m"
+"sv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000wq\u0000~\u0000 t\u0000\u0004longq\u0000~\u00002sq"
+"\u0000~\u0000{ppq\u0000~\u00002\u0000\u0001sq\u0000~\u0000\u0082ppq\u0000~\u00002\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Int"
+"egerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000wq\u0000~\u0000 t\u0000\u0007integerq\u0000~\u00002sr\u0000,com.sun.msv"
+".datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com."
+"sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001a"
+"zb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u007fppq\u0000~\u00002\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007decimalq\u0000~\u00002q\u0000~\u0000\u0090t\u0000\u000efractionDigits\u0000"
+"\u0000\u0000\u0000q\u0000~\u0000\u008at\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005value"
+"xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u008at\u0000\fmaxInclusiv"
+"esq\u0000~\u0000\u0094\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u0085q\u0000~\u0000\u0093sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005"
+"valuexq\u0000~\u0000\u0095\u0080\u0000\u0000\u0000q\u0000~\u0000\u0085q\u0000~\u0000\u0097sq\u0000~\u0000\u0099\u007f\u00ff\u00ff\u00ffq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000zq\u0000~\u0000 sq\u0000~"
+"\u00004t\u0000\u000etextFieldWidthq\u0000~\u0000jq\u0000~\u0000:sq\u0000~\u0000)\u0002g\u00e8Pppsq\u0000~\u0000+\u0002g\u00e8Eq\u0000~\u0000\u0018pq\u0000~"
+"\u0000usq\u0000~\u00004t\u0000\u000ftextFieldHeightq\u0000~\u0000jq\u0000~\u0000:sq\u0000~\u0000+\u0002\u0006@sppq\u0000~\u0000\u0016sq\u0000~\u00004t"
+"\u0000\btaskTypeq\u0000~\u0000jsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Closed"
+"Hash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N"
+"\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00a7[\u0000\u0005tablet\u0000![Lcom/su"
+"n/msv/grammar/Expression;xp\u0000\u0000\u0000\u001a\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.gramma"
+"r.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppq\u0000~\u0000kppppppq\u0000~\u0000\bppp"
+"pq\u0000~\u0000\u0012q\u0000~\u0000*ppq\u0000~\u0000\u0005pppq\u0000~\u0000\npppppppppppppppq\u0000~\u0000\tpppppppppppppq"
+"\u0000~\u0000appppppq\u0000~\u0000\u0006pppppppppppppq\u0000~\u0000\u009fpppppppq\u0000~\u0000Aq\u0000~\u0000Bpppppppppp"
+"q\u0000~\u0000Xppq\u0000~\u0000Wppppppq\u0000~\u0000?pppq\u0000~\u0000Upppppppppppq\u0000~\u0000Tpppppppq\u0000~\u0000\fp"
+"pppppppppppq\u0000~\u0000Iq\u0000~\u0000Jq\u0000~\u0000\rq\u0000~\u0000spppq\u0000~\u0000\u000bq\u0000~\u0000opppppppppppppq\u0000~"
+"\u0000Gq\u0000~\u0000\u0007pppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "---------------");
        }

        protected Unmarshaller(de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return de.thorstenberger.taskmodel.complex.jaxb.impl.AddonSubTaskDefTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        if (("Memento" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskDef" == ___uri)) {
                            org.w3c.dom.Element ur = null;
                            try {
                                de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.W3CDOMUnmarshallingEventHandler u = new de.thorstenberger.taskmodel.complex.jaxb.impl.runtime.W3CDOMUnmarshallingEventHandler(context);
                                context.pushContentHandler(u, 14);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                ur = u.getOwner();
                            } catch (javax.xml.parsers.ParserConfigurationException e) {
                                handleGenericException(e);
                            }
                            if (ur!= null) {
                                _Memento = ur;
                            }
                            return ;
                        }
                        break;
                    case  10 :
                        if (("correctionHint" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskDef" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  14 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "taskType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "textFieldHeight");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "trash");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "interactiveFeedback");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("problem" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskDef" == ___uri)) {
                            spawnHandlerFromEnterElement((((de.thorstenberger.taskmodel.complex.jaxb.impl.SubTaskDefTypeImpl)de.thorstenberger.taskmodel.complex.jaxb.impl.AddonSubTaskDefTypeImpl.this).new Unmarshaller(context)), 10, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "textFieldWidth");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TaskType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TextFieldHeight = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_TextFieldHeight = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TextFieldWidth = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_TextFieldWidth = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        state = 13;
                        continue outer;
                    case  14 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "taskType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "textFieldHeight");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "trash");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "interactiveFeedback");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  12 :
                        if (("correctionHint" == ___local)&&("http://complex.taskmodel.thorstenberger.de/complexTaskDef" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "textFieldWidth");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        state = 13;
                        continue outer;
                    case  14 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        if (("taskType" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("textFieldHeight" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        if (("trash" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((de.thorstenberger.taskmodel.complex.jaxb.impl.SubTaskDefTypeImpl)de.thorstenberger.taskmodel.complex.jaxb.impl.AddonSubTaskDefTypeImpl.this).new Unmarshaller(context)), 10, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((de.thorstenberger.taskmodel.complex.jaxb.impl.SubTaskDefTypeImpl)de.thorstenberger.taskmodel.complex.jaxb.impl.AddonSubTaskDefTypeImpl.this).new Unmarshaller(context)), 10, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("interactiveFeedback" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((de.thorstenberger.taskmodel.complex.jaxb.impl.SubTaskDefTypeImpl)de.thorstenberger.taskmodel.complex.jaxb.impl.AddonSubTaskDefTypeImpl.this).new Unmarshaller(context)), 10, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        if (("textFieldWidth" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        state = 13;
                        continue outer;
                    case  14 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("textFieldWidth" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("taskType" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "taskType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "textFieldHeight");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "trash");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "interactiveFeedback");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("textFieldHeight" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "textFieldWidth");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  10 :
                            state = 13;
                            continue outer;
                        case  14 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            eatText1(value);
                            state = 8;
                            return ;
                        case  1 :
                            eatText3(value);
                            state = 2;
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "taskType");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 9;
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "textFieldHeight");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "trash");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "interactiveFeedback");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  11 :
                            eatText4(value);
                            state = 12;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "textFieldWidth");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CorrectionHint = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
