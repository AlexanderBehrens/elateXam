<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 U (http://www.xmlspy.com) by tb (ul) -->
<xs:schema targetNamespace="http://complex.taskmodel.thorstenberger.de/complexTaskDef" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc" xmlns="http://complex.taskmodel.thorstenberger.de/complexTaskDef" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="1.0">
	<!--
Change Log:

- 16.06.05: mc-config: negative points geändert, um untersch. viele Punkte für richtige und falsche Antworten abziehen zu können
- 17.06.05: mcSubTaskDef global und "choice" eingeführt, um sich gegenseitig ausschließende Aufgaben zu modellieren
- 05.01.06: config global, da bei allen taskblocks vorhanden
- 05.01.06: Lueckentext nicht mehr mixed content, funzt nich in JAXFront
- 24.01.06 annotation für JAXB: generateIsSetMethod entfernt
- 12.06.06 neuer Aufgabentyp: paintSubTaskDef hinzugefügt
- 16.07.06 Category-Attribut "preserveOrderOfBlocks" in "ignoreOrderOfBlocks" geändert; ignoreOrderOfBlocks und mixAllSubTasks jetzt optional
- 22.05.07 McSubTaskDef-Attribut "preserveOrderOfAnswers" (optional) hinzugefügt, mit der die Reihenfolge von Antworten beibehalten werden kann.
- 22.05.07 Element "showHandlingHintsBeforeStart" hinzugefügt: bestimmt, ob allg. Bearbeitungshinweise/Hilfe auf der Übersichtsseite vor dem Start angezeigt werden sollen


TODO:
- Inkonsistenzen bei MC-Kategorien zw. singleSelect und multipleSelect beseitigen (<cloze-config>@negativePoints; @minCorrectAnswers, @maxCorrectAnswers)
- preserveOrder der Antworten bei MC-Aufgaben: teilw. sinnlos, da richtige immer vor falschen angegeben werden müssen

-->
	<xs:element name="complexTaskDef">
		<xs:annotation>
			<xs:documentation>task definition (homework, exam etc.) that consists of several sub tasks</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="config">
					<xs:complexType>
						<xs:all>
							<xs:element name="time" minOccurs="0">
								<xs:annotation>
									<xs:documentation>available time in minutes to solve the task,
unbounded if left empty</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:int">
										<xs:minInclusive value="0"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="tries" default="1">
								<xs:annotation>
									<xs:documentation>Number of possible tries to solve the task.
Every new try results in a random aggregation of subtasks (and possibly answer combinations)</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:int">
										<xs:minInclusive value="1"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="tasksPerPage" default="2">
								<xs:annotation>
									<xs:documentation>Number of tasks that are rendered per page, therefore implies the number of pages.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:int">
										<xs:minInclusive value="1"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="kindnessExtensionTime" default="0" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Kindness extension in minutes. After expiration of the official processing time, the student can still edit his solution until this time expires.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:int">
										<xs:minInclusive value="0"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="correctionMode" minOccurs="0">
								<xs:complexType>
									<xs:choice>
										<xs:element name="regular"/>
										<xs:element name="correctOnlyProcessedTasks">
											<xs:annotation>
												<xs:documentation>In this correction mode, only the first n processed Subtasklets wil be corrected and influence the overall result (points).</xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:int">
													<xs:minInclusive value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
									</xs:choice>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="title" type="xs:string"/>
				<xs:element name="description" type="xs:string"/>
				<xs:element name="startText" type="xs:string" minOccurs="0"/>
				<xs:element name="showHandlingHintsBeforeStart" type="xs:boolean" default="true" minOccurs="0"/>
				<xs:element name="category" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Divide subtask blocks into categories.

Attributes: title - name of the category (opt.)
preserveOrderOfBlocks - soll die Reihenfolge der Blöcke erhalten bleiben oder zufällig festgelegt werden?
mixAllSubTasks -  damit werden alle Aufgaben aus allen Blöcken in zufälliger Reihenfolge angeordnet, überschreibt preserveOrderOfBlocks und preserveOrder der Aufgaben in Blöcken</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:choice maxOccurs="unbounded">
							<xs:element name="mcTaskBlock">
								<xs:complexType>
									<xs:sequence>
										<xs:element ref="config"/>
										<xs:element name="mc-config">
											<xs:complexType>
												<xs:choice>
													<xs:element name="regular">
														<xs:complexType>
															<xs:sequence>
																<xs:element name="negativePoints">
																	<xs:simpleType>
																		<xs:restriction base="xs:float">
																			<xs:minInclusive value="0"/>
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="different">
														<xs:complexType>
															<xs:sequence>
																<xs:element name="correctAnswerNegativePoints">
																	<xs:simpleType>
																		<xs:restriction base="xs:float">
																			<xs:minInclusive value="0"/>
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
																<xs:element name="incorrectAnswerNegativePoints">
																	<xs:simpleType>
																		<xs:restriction base="xs:float">
																			<xs:minInclusive value="0"/>
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:choice>
											</xs:complexType>
										</xs:element>
										<xs:choice maxOccurs="unbounded">
											<xs:element ref="mcSubTaskDef"/>
											<xs:element name="choice">
												<xs:complexType>
													<xs:sequence>
														<xs:element ref="mcSubTaskDef" maxOccurs="unbounded"/>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:choice>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="clozeTaskBlock">
								<xs:complexType>
									<xs:sequence>
										<xs:element ref="config"/>
										<xs:element name="cloze-config">
											<xs:complexType>
												<xs:attribute name="negativePoints" use="required">
													<xs:simpleType>
														<xs:restriction base="xs:float">
															<xs:minInclusive value="0"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
												<xs:attribute name="ignoreCase" type="xs:boolean" use="optional"/>
											</xs:complexType>
										</xs:element>
										<xs:choice maxOccurs="unbounded">
											<xs:element ref="clozeSubTaskDef"/>
											<xs:element name="choice">
												<xs:complexType>
													<xs:sequence>
														<xs:element ref="clozeSubTaskDef" maxOccurs="unbounded"/>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:choice>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="textTaskBlock">
								<xs:complexType>
									<xs:sequence>
										<xs:element ref="config"/>
										<xs:choice maxOccurs="unbounded">
											<xs:element ref="textSubTaskDef"/>
											<xs:element name="choice">
												<xs:complexType>
													<xs:sequence>
														<xs:element ref="textSubTaskDef" maxOccurs="unbounded"/>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:choice>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="mappingTaskBlock">
								<xs:complexType>
									<xs:sequence>
										<xs:element ref="config"/>
										<xs:element name="mapping-config">
											<xs:complexType>
												<xs:attribute name="negativePoints" use="required">
													<xs:simpleType>
														<xs:restriction base="xs:float">
															<xs:minInclusive value="0"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<xs:choice maxOccurs="unbounded">
											<xs:element ref="mappingSubTaskDef"/>
											<xs:element name="choice">
												<xs:complexType>
													<xs:sequence>
														<xs:element ref="mappingSubTaskDef" maxOccurs="unbounded"/>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:choice>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="paintTaskBlock">
								<xs:complexType>
									<xs:sequence>
										<xs:element ref="config"/>
										<xs:choice maxOccurs="unbounded">
											<xs:element ref="paintSubTaskDef"/>
											<xs:element name="choice">
												<xs:complexType>
													<xs:sequence>
														<xs:element ref="paintSubTaskDef" maxOccurs="unbounded"/>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:choice>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:choice>
						<xs:attribute name="title" type="xs:string" use="required"/>
						<xs:attribute name="ignoreOrderOfBlocks" type="xs:boolean" use="optional"/>
						<xs:attribute name="id" type="xs:string" use="required"/>
						<xs:attribute name="mixAllSubTasks" type="xs:boolean" use="optional"/>
						<xs:attribute name="tasksPerPage" use="optional">
							<xs:simpleType>
								<xs:restriction base="xs:int">
									<xs:minInclusive value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
		<xs:unique name="category_id">
			<xs:selector xpath=".//category"/>
			<xs:field xpath="@id"/>
		</xs:unique>
		<xs:unique name="subtask_id">
			<xs:selector xpath="./*/*/*"/>
			<xs:field xpath="@id"/>
		</xs:unique>
	</xs:element>
	<xs:element name="mcSubTaskDef">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="problem" type="xs:string"/>
				<xs:element name="hint" type="xs:string" minOccurs="0"/>
				<xs:element name="displayedAnswers">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="correct" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="id" type="xs:string" use="required"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="incorrect" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="id" type="xs:string" use="required"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
			<xs:attribute name="category" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="singleSelect"/>
						<xs:enumeration value="multipleSelect"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="minCorrectAnswers" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="maxCorrectAnswers" type="xs:int" use="optional"/>
			<xs:attribute name="preserveOrderOfAnswers" type="xs:boolean" use="optional" default="false"/>
		</xs:complexType>
		<xs:unique name="answer_id">
			<xs:selector xpath="./*"/>
			<xs:field xpath="@id"/>
		</xs:unique>
	</xs:element>
	<xs:element name="textSubTaskDef">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="problem" type="xs:string"/>
				<xs:element name="hint" type="xs:string" minOccurs="0"/>
				<xs:element name="initialTextFieldValue" type="xs:string" minOccurs="0"/>
				<xs:element name="correctionHint" type="xs:string" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
			<xs:attribute name="textFieldWidth" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="textFieldHeight" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="clozeSubTaskDef">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="problem" type="xs:string" minOccurs="0"/>
				<xs:element name="hint" type="xs:string" minOccurs="0"/>
				<xs:element name="cloze">
					<xs:complexType mixed="false">
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element name="text" type="xs:string"/>
							<xs:element name="gap">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="correct" type="xs:string" maxOccurs="unbounded"/>
									</xs:sequence>
									<xs:attribute name="inputLength" use="optional">
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="ignoreCase" type="xs:boolean" use="optional"/>
								</xs:complexType>
							</xs:element>
						</xs:choice>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="mappingSubTaskDef">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="problem" type="xs:string"/>
				<xs:element name="hint" type="xs:string" minOccurs="0"/>
				<xs:element name="concept" maxOccurs="unbounded">
					<xs:complexType>
						<xs:attribute name="name" type="xs:string" use="required"/>
						<xs:attribute name="correctAssignmentID" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="assignment" maxOccurs="unbounded">
					<xs:complexType>
						<xs:attribute name="id" type="xs:string" use="required"/>
						<xs:attribute name="name" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
		</xs:complexType>
		<xs:key name="assignmentKey">
			<xs:selector xpath="./assignment"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:keyref name="correctAssignmentKeyRef" refer="assignmentKey">
			<xs:selector xpath="./concept"/>
			<xs:field xpath="@correctAssignmentID"/>
		</xs:keyref>
	</xs:element>
	<xs:element name="config">
		<xs:complexType>
			<xs:attribute name="pointsPerTask" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:float">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="noOfSelectedTasks" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="preserveOrder" type="xs:boolean" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="paintSubTaskDef">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="problem" type="xs:string"/>
				<xs:element name="images" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="mutableTemplateImage" type="xs:string" minOccurs="0"/>
							<xs:element name="immutableBackgroundImage" type="xs:string" minOccurs="0"/>
							<xs:element name="correctionTemplateImage" type="xs:string" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="textualAnswer" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="textFieldWidth" minOccurs="0">
								<xs:simpleType>
									<xs:restriction base="xs:int">
										<xs:minInclusive value="1"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="textFieldHeight" minOccurs="0">
								<xs:simpleType>
									<xs:restriction base="xs:int">
										<xs:minInclusive value="1"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="hint" type="xs:string" minOccurs="0"/>
				<xs:element name="colorChangeable" type="xs:boolean" minOccurs="0"/>
				<xs:element name="strokewidthChangeable" type="xs:boolean" minOccurs="0"/>
				<xs:element name="correctionHint" type="xs:string" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
